[
  {
    "idx": 0,
    "relevant_table_schema": {
      "lists": {
        "columns": [
          {
            "field": "foreign key(user_id) references lists_users(user_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "list_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "list_title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_movie_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_update_timestamp_utc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_creation_timestamp_utc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_followers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_comments",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_cover_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_first_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_second_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_third_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the name of the list that was updated most recently?",
    "gold_sql": "SELECT list_title FROM lists WHERE list_update_timestamp_utc = (SELECT list_update_timestamp_utc FROM lists ORDER BY list_update_timestamp_utc DESC LIMIT 1)",
    "predicted_sql": "SELECT list_title FROM lists WHERE list_update_timestamp_utc = (SELECT MAX(list_update_timestamp_utc) FROM lists)"
  },
  {
    "idx": 1,
    "relevant_table_schema": {
      "movies": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "movie_title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_release_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_title_language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_popularity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which year had the most released films?",
    "gold_sql": "SELECT movie_release_year FROM movies GROUP BY movie_release_year ORDER BY COUNT(movie_id) DESC LIMIT 1",
    "predicted_sql": "SELECT movie_release_year FROM movies GROUP BY movie_release_year ORDER BY COUNT(movie_id) DESC LIMIT 1"
  },
  {
    "idx": 2,
    "relevant_table_schema": {
      "lists": {
        "columns": [
          {
            "field": "foreign key(user_id) references lists_users(user_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "list_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "list_title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_movie_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_update_timestamp_utc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_creation_timestamp_utc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_followers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_comments",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_cover_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_first_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_second_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_third_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the name of the most followed list?",
    "gold_sql": "SELECT list_title FROM lists ORDER BY list_followers DESC LIMIT 1",
    "predicted_sql": "SELECT list_title FROM lists WHERE list_followers = ( SELECT MAX(list_followers) FROM lists )"
  },
  {
    "idx": 3,
    "relevant_table_schema": {
      "ratings": {
        "columns": [
          {
            "field": "foreign key(movie_id) references movies(movie_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "rating_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_score",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_timestamp_utc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic_likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic_comments",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(user_id) references lists_users(user_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "user_trialist",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_subscriber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_eligible_for_trial",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_has_payment_method",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movies": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "movie_title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_release_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_title_language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_popularity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the name of the movie that was rated recently by user 57756708?",
    "gold_sql": "SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 57756708 ORDER BY T1.rating_timestamp_utc DESC LIMIT 1",
    "predicted_sql": "SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 57756708 ORDER BY T1.rating_timestamp_utc DESC LIMIT 1"
  },
  {
    "idx": 4,
    "relevant_table_schema": {
      "ratings": {
        "columns": [
          {
            "field": "foreign key(movie_id) references movies(movie_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "rating_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_score",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_timestamp_utc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic_likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic_comments",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(user_id) references lists_users(user_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "user_trialist",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_subscriber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_eligible_for_trial",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_has_payment_method",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movies": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "movie_title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_release_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_title_language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_popularity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "lists": {
        "columns": [
          {
            "field": "foreign key(user_id) references lists_users(user_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "list_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "list_title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_movie_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_update_timestamp_utc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_creation_timestamp_utc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_followers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_comments",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_cover_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_first_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_second_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "list_third_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What's of rating on the movie \"Innocence Unprotected\" by the user who created the movie list \"250 Favourite Films\"?",
    "gold_sql": "SELECT T1.rating_score FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id INNER JOIN lists AS T3 ON T3.user_id = T1.user_id WHERE T2.movie_title = 'Innocence Unprotected' AND T3.list_title = '250 Favourite Films'",
    "predicted_sql": "SELECT T1.rating_score FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id INNER JOIN lists AS T3 ON T3.user_id = T1.user_id WHERE T2.movie_title = 'Innocence Unprotected' AND T3.list_title = '250 Favourite Films'"
  },
  {
    "idx": 5,
    "relevant_table_schema": {
      "ratings": {
        "columns": [
          {
            "field": "foreign key(movie_id) references movies(movie_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "rating_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_score",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_timestamp_utc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic_likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic_comments",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(user_id) references lists_users(user_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "user_trialist",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_subscriber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_eligible_for_trial",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_has_payment_method",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movies": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "movie_title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_release_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_title_language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_popularity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the name of the movie whose critic received the highest amount of likes? Indicate the URL to the rating on Mubi.",
    "gold_sql": "SELECT T2.movie_title, T1.rating_url FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id ORDER BY T1.critic_likes DESC LIMIT 1",
    "predicted_sql": "SELECT T2.movie_title, T1.rating_url FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.critic_likes = ( SELECT MAX(critic_likes) FROM ratings )"
  },
  {
    "idx": 6,
    "relevant_table_schema": {
      "movies": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "movie_title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_release_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_title_language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_popularity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please give me the url of the movie \"La Antena\".",
    "gold_sql": "SELECT movie_url FROM movies WHERE movie_title = 'La Antena'",
    "predicted_sql": "SELECT movie_url FROM movies WHERE movie_title = 'La Antena'"
  },
  {
    "idx": 7,
    "relevant_table_schema": {
      "ratings": {
        "columns": [
          {
            "field": "foreign key(movie_id) references movies(movie_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "rating_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_score",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_timestamp_utc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic_likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic_comments",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(user_id) references lists_users(user_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "user_trialist",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_subscriber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_eligible_for_trial",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_has_payment_method",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movies": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "movie_title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_release_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_title_language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_popularity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Who gave a \"4\" rating to the movie \"Freaks\" at 2013/5/4 6:33:32? Give his/her user id.",
    "gold_sql": "SELECT T1.user_id FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE rating_score = 4 AND rating_timestamp_utc LIKE '2013-05-04 06:33:32' AND T2.movie_title LIKE 'Freaks'",
    "predicted_sql": "SELECT T1.user_id FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_score = 4 AND T1.rating_timestamp_utc = '2013-05-04 06:33:32' AND T2.movie_title = 'Freaks'"
  },
  {
    "idx": 8,
    "relevant_table_schema": {
      "ratings": {
        "columns": [
          {
            "field": "foreign key(movie_id) references movies(movie_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "rating_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_score",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_timestamp_utc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic_likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic_comments",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(user_id) references lists_users(user_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "user_trialist",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_subscriber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_eligible_for_trial",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_has_payment_method",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movies": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "movie_title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_release_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_title_language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_popularity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many critics were given to the movie that got the most movie popularity number.",
    "gold_sql": "SELECT COUNT(T1.critic) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_popularity = ( SELECT MAX(movie_popularity) FROM movies )",
    "predicted_sql": "SELECT COUNT(T1.critic) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_popularity = ( SELECT MAX(movie_popularity) FROM movies )"
  },
  {
    "idx": 9,
    "relevant_table_schema": {
      "ratings": {
        "columns": [
          {
            "field": "foreign key(movie_id) references movies(movie_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "rating_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_score",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating_timestamp_utc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic_likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "critic_comments",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(user_id) references lists_users(user_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "user_trialist",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_subscriber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_eligible_for_trial",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_has_payment_method",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movies": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "movie_title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_release_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_title_language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_popularity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_image_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "director_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What's the average rating score of the movie \"A Way of Life\"?",
    "gold_sql": "SELECT AVG(T1.rating_score) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life'",
    "predicted_sql": "SELECT AVG(T1.rating_score) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life'"
  },
  {
    "idx": 10,
    "relevant_table_schema": {
      "sales": {
        "columns": [
          {
            "field": "foreign key(stor_id) references stores(stor_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ord_num",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ord_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "qty",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payterms",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(title_id) references titles(title_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "titles": {
        "columns": [
          {
            "field": "title_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(pub_id) references publishers(pub_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "advance",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "royalty",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ytd_sales",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pubdate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the price of the book that sells the best?",
    "gold_sql": "SELECT T2.price FROM sales AS T1 INNER JOIN titles AS T2 ON T1.title_id = T2.title_id ORDER BY T1.qty DESC LIMIT 1",
    "predicted_sql": "SELECT T2.price FROM sales AS T1 INNER JOIN titles AS T2 ON T1.title_id = T2.title_id ORDER BY T1.qty DESC LIMIT 1"
  },
  {
    "idx": 11,
    "relevant_table_schema": {
      "pub_info": {
        "columns": [
          {
            "field": "pub_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(pub_id) references publishers(pub_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "logo",
            "type": "blob",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pr_info",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "publishers": {
        "columns": [
          {
            "field": "pub_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "pub_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the publisher's information of New Moon Books?",
    "gold_sql": "SELECT T1.pr_info FROM pub_info AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T2.pub_name = 'New Moon Books'",
    "predicted_sql": "SELECT T2.pub_name, T2.city, T2.state, T2.country FROM pub_info AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T1.pr_info = 'New Moon Books'"
  },
  {
    "idx": 12,
    "relevant_table_schema": {
      "sales": {
        "columns": [
          {
            "field": "foreign key(stor_id) references stores(stor_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ord_num",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ord_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "qty",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payterms",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(title_id) references titles(title_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "stores": {
        "columns": [
          {
            "field": "stor_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "stor_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stor_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "For the quantities, what percent more did the store in Fremont sell than the store in Portland in 1993?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T2.city = 'Fremont' THEN qty END) - SUM(CASE WHEN T2.city = 'Portland' THEN qty END) AS REAL) * 100 / SUM(CASE WHEN T2.city = 'Fremont' THEN qty END) FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id WHERE STRFTIME('%Y', T1.ord_date) = '1993'",
    "predicted_sql": "SELECT 100.0 * (SUM(CASE WHEN SUBSTR(T1.ord_date, -4) = '1993' THEN T1.qty ELSE 0 END) - ( SELECT SUM(T1.qty) FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id WHERE T2.stor_name = 'Fremont' ) ) / ( SELECT SUM(T1.qty) FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id WHERE T2.stor_name = 'Portland' ) FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id WHERE SUBSTR(T1.ord_date, -4) = '1993'"
  },
  {
    "idx": 13,
    "relevant_table_schema": {
      "titles": {
        "columns": [
          {
            "field": "title_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(pub_id) references publishers(pub_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "advance",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "royalty",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ytd_sales",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pubdate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "titleauthor": {
        "columns": [
          {
            "field": "foreign key(au_id) references authors(au_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(title_id) references titles(title_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "au_ord",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "royaltyper",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "authors": {
        "columns": [
          {
            "field": "au_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "au_lname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "au_fname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contract",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Name all the authors for all business titles.",
    "gold_sql": "SELECT T3.au_fname, T3.au_lname FROM titles AS T1 INNER JOIN titleauthor AS T2 ON T1.title_id = T2.title_id INNER JOIN authors AS T3 ON T2.au_id = T3.au_id WHERE T1.type = 'business'",
    "predicted_sql": "SELECT T3.au_fname, T3.au_lname FROM titles AS T1 INNER JOIN titleauthor AS T2 ON T1.title_id = T2.title_id INNER JOIN authors AS T3 ON T3.au_id = T2.au_id WHERE T1.type = 'business'"
  },
  {
    "idx": 14,
    "relevant_table_schema": {
      "titles": {
        "columns": [
          {
            "field": "title_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(pub_id) references publishers(pub_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "advance",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "royalty",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ytd_sales",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pubdate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "publishers": {
        "columns": [
          {
            "field": "pub_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "pub_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all titles which have year to date sales higher than the average order by pubisher name.",
    "gold_sql": "SELECT T1.title FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T1.ytd_sales > ( SELECT AVG(ytd_sales) FROM titles )",
    "predicted_sql": "SELECT T1.title FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T1.ytd_sales > ( SELECT CAST(SUM(royalty) AS REAL) / COUNT(title_id) FROM titles ) ORDER BY T2.pub_name"
  },
  {
    "idx": 15,
    "relevant_table_schema": {
      "sales": {
        "columns": [
          {
            "field": "foreign key(stor_id) references stores(stor_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ord_num",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ord_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "qty",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payterms",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(title_id) references titles(title_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Which date has the most ordered quantity? What is the total order quantity on that day?",
    "gold_sql": "SELECT ord_date, SUM(qty) FROM sales GROUP BY ord_date ORDER BY SUM(qty) DESC LIMIT 1",
    "predicted_sql": "SELECT ord_date, SUM(qty) FROM sales GROUP BY ord_date ORDER BY SUM(qty) DESC LIMIT 1"
  },
  {
    "idx": 16,
    "relevant_table_schema": {
      "pub_info": {
        "columns": [
          {
            "field": "pub_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(pub_id) references publishers(pub_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "logo",
            "type": "blob",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pr_info",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "publishers": {
        "columns": [
          {
            "field": "pub_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "pub_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Tell me about the information of the French publisher.",
    "gold_sql": "SELECT T1.pr_info FROM pub_info AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T2.country = 'France'",
    "predicted_sql": "SELECT T1.pr_info FROM pub_info AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T2.country = 'France'"
  },
  {
    "idx": 17,
    "relevant_table_schema": {
      "titles": {
        "columns": [
          {
            "field": "title_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(pub_id) references publishers(pub_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "advance",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "royalty",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ytd_sales",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pubdate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "titleauthor": {
        "columns": [
          {
            "field": "foreign key(au_id) references authors(au_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(title_id) references titles(title_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "au_ord",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "royaltyper",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "authors": {
        "columns": [
          {
            "field": "au_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "au_lname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "au_fname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contract",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Name all the authors for 'Sushi, Anyone?'.",
    "gold_sql": "SELECT T3.au_fname, T3.au_lname FROM titles AS T1 INNER JOIN titleauthor AS T2 ON T1.title_id = T2.title_id INNER JOIN authors AS T3 ON T2.au_id = T3.au_id WHERE T1.title = 'Sushi, Anyone?'",
    "predicted_sql": "SELECT T3.au_fname, T3.au_lname FROM titles AS T1 INNER JOIN titleauthor AS T2 ON T1.title_id = T2.title_id INNER JOIN authors AS T3 ON T3.au_id = T2.au_id WHERE T1.title = 'Sushi, Anyone?'"
  },
  {
    "idx": 18,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "emp_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "fname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "minit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(job_id) references jobs(job_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "job_lvl",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(pub_id) references publishers(pub_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "hire_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Find and list the full name of employees who were hired between 1990 and 1995. Also, arrange them in the descending order of job level.",
    "gold_sql": "SELECT fname, minit, lname FROM employee WHERE STRFTIME('%Y', hire_date) BETWEEN '1990' AND '1995' ORDER BY job_lvl DESC",
    "predicted_sql": "SELECT fname, minit, lname FROM employee WHERE STRFTIME('%Y', hire_date) BETWEEN '1990' AND '1995' ORDER BY job_lvl DESC"
  },
  {
    "idx": 19,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "emp_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "fname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "minit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(job_id) references jobs(job_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "job_lvl",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(pub_id) references publishers(pub_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "hire_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "jobs": {
        "columns": [
          {
            "field": "job_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "job_desc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_lvl",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_lvl",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which publisher had the highest job level? Give his/her full name.",
    "gold_sql": "SELECT T1.fname, T1.minit, T1.lname FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id ORDER BY T1.job_lvl DESC LIMIT 1",
    "predicted_sql": "SELECT T1.fname, T1.minit, T1.lname FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.job_lvl = T2.max_lvl"
  },
  {
    "idx": 20,
    "relevant_table_schema": {
      "client": {
        "columns": [
          {
            "field": "client_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "sex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "month",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "social",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zipcode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_id) references district(district_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "events": {
        "columns": [
          {
            "field": "Date received",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Product",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-product",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Issue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-issue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer complaint narrative",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer consent provided?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Submitted via",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date sent to company",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Company response to consumer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Timely response?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer disputed?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Complaint ID) references callcenterlogs(Complaint ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Client_ID) references client(client_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "How many clients who live in New York City submitted their complaints via fax?",
    "gold_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'New York City' AND T2.`Submitted via` = 'Fax'",
    "predicted_sql": "SELECT COUNT(T2.Client_ID) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'New York City' AND T2.Submitted via = 'Fax'"
  },
  {
    "idx": 21,
    "relevant_table_schema": {
      "client": {
        "columns": [
          {
            "field": "client_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "sex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "month",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "social",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zipcode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_id) references district(district_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "district": {
        "columns": [
          {
            "field": "district_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state_abbrev) references state(StateCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "division",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the clients in Middle Atlantic, how many are them are female and no more than 18 years old?",
    "gold_sql": "SELECT COUNT(T1.sex) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.division = 'Middle Atlantic' AND T1.sex = 'Female' AND T1.age < 18",
    "predicted_sql": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.division = 'Middle Atlantic' AND T1.sex = 'F' AND T1.age < 18"
  },
  {
    "idx": 22,
    "relevant_table_schema": {
      "reviews": {
        "columns": [
          {
            "field": "Date",
            "type": "date",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Stars",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reviews",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Product",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_id) references district(district_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "client": {
        "columns": [
          {
            "field": "client_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "sex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "month",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "social",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zipcode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_id) references district(district_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "How many reviews by people between 30 and 50 years include the word 'great'?",
    "gold_sql": "SELECT COUNT(T1.Reviews) FROM reviews AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.age BETWEEN 30 AND 50 AND T1.Reviews LIKE '%great%'",
    "predicted_sql": "SELECT COUNT(T1.Reviews) FROM reviews AS T1 INNER JOIN client AS T2 ON T2.client_id = T1.district_id WHERE T2.age BETWEEN 30 AND 50 AND T1.Reviews LIKE '%great%'"
  },
  {
    "idx": 23,
    "relevant_table_schema": {
      "client": {
        "columns": [
          {
            "field": "client_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "sex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "month",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "social",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zipcode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_id) references district(district_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "district": {
        "columns": [
          {
            "field": "district_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state_abbrev) references state(StateCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "division",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "state": {
        "columns": [
          {
            "field": "StateCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which city in the Midwest region has the least number of clients?",
    "gold_sql": "SELECT T2.city FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN state AS T3 ON T2.state_abbrev = T3.StateCode WHERE T3.Region = 'Midwest' GROUP BY T2.city ORDER BY COUNT(T2.city) LIMIT 1",
    "predicted_sql": "SELECT T2.city FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN state AS T3 ON T2.state_abbrev = T3.StateCode WHERE T3.Region = 'Midwest' GROUP BY T2.city ORDER BY COUNT(T1.client_id) ASC LIMIT 1"
  },
  {
    "idx": 24,
    "relevant_table_schema": {
      "client": {
        "columns": [
          {
            "field": "client_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "sex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "month",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "social",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zipcode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_id) references district(district_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "events": {
        "columns": [
          {
            "field": "Date received",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Product",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-product",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Issue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-issue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer complaint narrative",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer consent provided?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Submitted via",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date sent to company",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Company response to consumer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Timely response?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer disputed?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Complaint ID) references callcenterlogs(Complaint ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Client_ID) references client(client_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "callcenterlogs": {
        "columns": [
          {
            "field": "Date received",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Complaint ID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(rand client) references client(client_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "phonefinal",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vru+line",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "call_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "priority",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "outcome",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "server",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ser_start",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ser_exit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ser_time",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the female clients that age between 20 to 40, list the date when their complaints were received.",
    "gold_sql": "SELECT DISTINCT T3.`Date received` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID INNER JOIN callcenterlogs AS T3 ON T2.`Complaint ID` = T3.`Complaint ID` WHERE T1.age BETWEEN 20 AND 40 AND T1.sex = 'Female'",
    "predicted_sql": "SELECT DISTINCT T2.`Date received` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID INNER JOIN callcenterlogs AS T3 ON T2.Complaint ID = T3.Complaint ID WHERE T1.sex = 'F' AND T1.age BETWEEN 20 AND 40"
  },
  {
    "idx": 25,
    "relevant_table_schema": {
      "client": {
        "columns": [
          {
            "field": "client_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "sex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "month",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "social",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zipcode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_id) references district(district_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "events": {
        "columns": [
          {
            "field": "Date received",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Product",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-product",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Issue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-issue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer complaint narrative",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer consent provided?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Submitted via",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date sent to company",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Company response to consumer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Timely response?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer disputed?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Complaint ID) references callcenterlogs(Complaint ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Client_ID) references client(client_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Which detailed product did Mr Lennox Oliver Drake complain about?",
    "gold_sql": "SELECT DISTINCT T2.`Sub-product` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Lennox' AND T1.middle = 'Oliver' AND T1.last = 'Drake' AND T1.sex = 'Male'",
    "predicted_sql": "SELECT DISTINCT T2.Product FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Lennox' AND T1.middle = 'Oliver' AND T1.last = 'Drake'"
  },
  {
    "idx": 26,
    "relevant_table_schema": {
      "callcenterlogs": {
        "columns": [
          {
            "field": "Date received",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Complaint ID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(rand client) references client(client_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "phonefinal",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vru+line",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "call_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "priority",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "outcome",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "server",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ser_start",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ser_exit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ser_time",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "events": {
        "columns": [
          {
            "field": "Date received",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Product",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-product",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Issue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-issue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer complaint narrative",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer consent provided?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Submitted via",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date sent to company",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Company response to consumer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Timely response?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer disputed?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Complaint ID) references callcenterlogs(Complaint ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Client_ID) references client(client_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "How many complaints were served in 5 minutes or less by DORIT and responded to the customer with an explanation, were made by phone?",
    "gold_sql": "SELECT COUNT(T1.`Complaint ID`) FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T1.ser_time < '00:05:00' AND T1.server = 'DORIT' AND T2.`Submitted via` = 'Phone' AND T2.`Company response to consumer` = 'Closed with explanation'",
    "predicted_sql": "SELECT COUNT(T1.`Complaint ID`) FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.Complaint ID WHERE T1.priority = 5 AND T1.outcome = 'Explanation' AND T1.phonefinal = 'Phone' AND T1.server = 'DORIT' AND T1.ser_time < '00:05:00'"
  },
  {
    "idx": 27,
    "relevant_table_schema": {
      "client": {
        "columns": [
          {
            "field": "client_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "sex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "month",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "social",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zipcode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_id) references district(district_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "callcenterlogs": {
        "columns": [
          {
            "field": "Date received",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Complaint ID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(rand client) references client(client_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "phonefinal",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vru+line",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "call_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "priority",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "outcome",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "server",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ser_start",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ser_exit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ser_time",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the email id of clients whose calls were hung?",
    "gold_sql": "SELECT T1.email FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.outcome = 'HANG'",
    "predicted_sql": "SELECT T1.email FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.rand client WHERE T2.outcome = 'hung up'"
  },
  {
    "idx": 28,
    "relevant_table_schema": {
      "callcenterlogs": {
        "columns": [
          {
            "field": "Date received",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Complaint ID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(rand client) references client(client_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "phonefinal",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vru+line",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "call_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "priority",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "outcome",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "server",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ser_start",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ser_exit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ser_time",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List priority 2 complaints by date received.",
    "gold_sql": "SELECT DISTINCT `Complaint ID` FROM callcenterlogs WHERE priority = 2 ORDER BY `Date received` DESC",
    "predicted_sql": "SELECT `Date received` FROM callcenterlogs WHERE priority = 2 GROUP BY `Date received`"
  },
  {
    "idx": 29,
    "relevant_table_schema": {
      "client": {
        "columns": [
          {
            "field": "client_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "sex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "month",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "social",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zipcode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_id) references district(district_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "events": {
        "columns": [
          {
            "field": "Date received",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Product",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-product",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Issue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-issue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer complaint narrative",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer consent provided?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Submitted via",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date sent to company",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Company response to consumer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Timely response?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Consumer disputed?",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Complaint ID) references callcenterlogs(Complaint ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Client_ID) references client(client_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Among all the clients from the New York city, how many of them have filed a complaint on the issue of Deposits and withdrawals?",
    "gold_sql": "SELECT COUNT(T2.Issue) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.Issue = 'Deposits and withdrawals' AND T1.city = 'New York City'",
    "predicted_sql": "SELECT COUNT(T2.Client_ID) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'New York City' AND T2.Issue = 'Deposits and withdrawals'"
  },
  {
    "idx": 30,
    "relevant_table_schema": {
      "movie": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "budget",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "homepage",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overview",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "popularity",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "release_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "revenue",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "runtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tagline",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vote_average",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vote_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movie_crew": {
        "columns": [
          {
            "field": "foreign key(movie_id) references movie(movie_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(person_id) references person(person_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(department_id) references department(department_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "job",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "person_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "person_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What are the top 5 most popular movie directors?",
    "gold_sql": "SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T2.job = 'Director' ORDER BY T1.popularity DESC LIMIT 5",
    "predicted_sql": "SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T2.job = 'Director' ORDER BY T1.popularity DESC LIMIT 5"
  },
  {
    "idx": 31,
    "relevant_table_schema": {
      "production_company": {
        "columns": [
          {
            "field": "company_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "company_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movie_company": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "company_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the names of the production companies that made at least 200 movies.",
    "gold_sql": "SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id HAVING COUNT(T2.movie_id) > 200",
    "predicted_sql": "SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id HAVING COUNT(T2.movie_id) > 200"
  },
  {
    "idx": 32,
    "relevant_table_schema": {
      "person": {
        "columns": [
          {
            "field": "person_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "person_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movie_crew": {
        "columns": [
          {
            "field": "foreign key(movie_id) references movie(movie_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(person_id) references person(person_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(department_id) references department(department_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "job",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the job titles of Sally Menke in the crew.",
    "gold_sql": "SELECT DISTINCT T2.job FROM person AS T1 INNER JOIN movie_crew AS T2 ON T1.person_id = T2.person_id WHERE T1.person_name = 'Sally Menke'",
    "predicted_sql": "SELECT T2.job FROM person AS T1 INNER JOIN movie_crew AS T2 ON T1.person_id = T2.person_id WHERE T1.person_name = 'Sally Menke'"
  },
  {
    "idx": 33,
    "relevant_table_schema": {
      "movie": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "budget",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "homepage",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overview",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "popularity",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "release_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "revenue",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "runtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tagline",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vote_average",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vote_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "production_country": {
        "columns": [
          {
            "field": "foreign key(movie_id) references movie(movie_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(country_id) references country(country_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "country_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "country_iso_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List 10 movie titles that were produced in France.",
    "gold_sql": "SELECT T1.title FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE T3.COUNTry_name = 'France' LIMIT 10",
    "predicted_sql": "SELECT T1.title FROM movie AS T1 INNER JOIN production_country AS T2 ON T1.movie_id = T2.movie_id INNER JOIN country AS T3 ON T3.country_id = T2.country_id WHERE T3.country_name = 'France' LIMIT 10"
  },
  {
    "idx": 34,
    "relevant_table_schema": {
      "movie": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "budget",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "homepage",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overview",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "popularity",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "release_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "revenue",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "runtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tagline",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vote_average",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vote_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movie_genres": {
        "columns": [
          {
            "field": "foreign key(movie_id) references movie(movie_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(genre_id) references genre(genre_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "genre": {
        "columns": [
          {
            "field": "genre_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "genre_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What are the genres of Sky Captain and the World of Tomorrow?",
    "gold_sql": "SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T1.title = 'Sky Captain and the World of Tomorrow'",
    "predicted_sql": "SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T1.title = 'Sky Captain and the World of Tomorrow'"
  },
  {
    "idx": 35,
    "relevant_table_schema": {
      "movie": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "budget",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "homepage",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overview",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "popularity",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "release_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "revenue",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "runtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tagline",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vote_average",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vote_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movie_keywords": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "keyword_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "keyword": {
        "columns": [
          {
            "field": "keyword_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "keyword_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Calculate the average income made by movies using the keyword \"paris\". List the title of the movies.",
    "gold_sql": "SELECT AVG(T1.revenue), T1.title FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T3.keyword_name = 'paris'",
    "predicted_sql": "SELECT AVG(T1.revenue), T1.title FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T3.keyword_name = 'paris'"
  },
  {
    "idx": 36,
    "relevant_table_schema": {
      "movie": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "budget",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "homepage",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overview",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "popularity",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "release_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "revenue",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "runtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tagline",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vote_average",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vote_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movie_cast": {
        "columns": [
          {
            "field": "foreign key(movie_id) references movie(movie_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(person_id) references person(person_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "character_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(gender_id) references gender(gender_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "cast_order",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "person_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "person_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many movies released in 1995 did Quentin Tarantino appear in?",
    "gold_sql": "SELECT COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Quentin Tarantino' AND CAST(STRFTIME('%Y', T1.release_date) AS INT) = 1995",
    "predicted_sql": "SELECT COUNT(T2.movie_id) FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T3.person_id = T2.person_id WHERE T1.release_date LIKE '1995%' AND T3.person_name = 'Quentin Tarantino'"
  },
  {
    "idx": 37,
    "relevant_table_schema": {
      "person": {
        "columns": [
          {
            "field": "person_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "person_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Who is the person associated with the crew id 1325273?",
    "gold_sql": "SELECT person_name FROM person WHERE person_id = 1325273",
    "predicted_sql": "SELECT T1.person_name FROM crew AS T1 INNER JOIN person AS T2 ON T1.person_id = T2.person_id WHERE T1.crew_id = '1325273'"
  },
  {
    "idx": 38,
    "relevant_table_schema": {
      "movie": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "budget",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "homepage",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overview",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "popularity",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "release_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "revenue",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "runtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tagline",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vote_average",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vote_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movie_keywords": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "keyword_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "keyword": {
        "columns": [
          {
            "field": "keyword_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "keyword_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What keyword can the user use to search for the movie Finding Nemo?",
    "gold_sql": "SELECT T3.keyword_name FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T1.title = 'Finding Nemo'",
    "predicted_sql": "SELECT T3.keyword_name FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T1.title = 'Finding Nemo'"
  },
  {
    "idx": 39,
    "relevant_table_schema": {
      "movie": {
        "columns": [
          {
            "field": "movie_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "budget",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "homepage",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overview",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "popularity",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "release_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "revenue",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "runtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movie_status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tagline",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vote_average",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vote_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movie_languages": {
        "columns": [
          {
            "field": "foreign key(movie_id) references movie(movie_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(language_id) references language(language_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(language_role_id) references language_role(role_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "What is the language ID of the movie \"Walk the Line\"?",
    "gold_sql": "SELECT T2.language_id FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title = 'Walk the Line'",
    "predicted_sql": "SELECT T2.language_id FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title = 'Walk the Line'"
  },
  {
    "idx": 40,
    "relevant_table_schema": {
      "solution": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "RepoId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Path",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcessedTime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WasCompiled",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "method": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FullComment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ApiCalls",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CommentIsXml",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SampledAt",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SolutionId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NameTokenized",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the percentage of the methods' solutions that need to be compiled among the methods whose comments is XML format?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T1.WasCompiled = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.SolutionId) FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.CommentIsXml = 1",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN T2.CommentIsXml = 0 THEN 0 ELSE 1 END) AS REAL) * 100 / COUNT(T2.CommentIsXml) FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.WasCompiled = 0"
  },
  {
    "idx": 41,
    "relevant_table_schema": {
      "solution": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "RepoId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Path",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcessedTime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WasCompiled",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "method": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FullComment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ApiCalls",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CommentIsXml",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SampledAt",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SolutionId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NameTokenized",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the repository id of the method with tokenized name \"crc parameters get hash code\"?",
    "gold_sql": "SELECT T1.RepoId FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.NameTokenized = 'crc parameters get hash code'",
    "predicted_sql": "SELECT T1.RepoId FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.NameTokenized = 'crc parameters get hash code'"
  },
  {
    "idx": 42,
    "relevant_table_schema": {
      "repo": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Stars",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Forks",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Watchers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcessedTime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "solution": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "RepoId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Path",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcessedTime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WasCompiled",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "method": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FullComment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ApiCalls",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CommentIsXml",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SampledAt",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SolutionId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NameTokenized",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In the \"https://github.com/wallerdev/htmlsharp.git\", give all the linearized sequenced of API calls.",
    "gold_sql": "SELECT T3.ApiCalls FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId INNER JOIN Method AS T3 ON T2.Id = T3.SolutionId WHERE T1.Url = 'https://github.com/wallerdev/htmlsharp.git'",
    "predicted_sql": "SELECT T3.ApiCalls FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId INNER JOIN Method AS T3 ON T2.Id = T3.SolutionId WHERE T1.Url = 'https://github.com/wallerdev/htmlsharp.git' AND T3.Id = ( SELECT MAX(T3.Id) FROM Solution AS T2 INNER JOIN Method AS T3 ON T2.Id = T3.SolutionId WHERE T2.RepoId = T1.Id )"
  },
  {
    "idx": 43,
    "relevant_table_schema": {
      "repo": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Stars",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Forks",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Watchers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcessedTime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "solution": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "RepoId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Path",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcessedTime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WasCompiled",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many solution path does the repository with 111 stars, 58 forks, and 111 watchers?",
    "gold_sql": "SELECT COUNT(T2.Path) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars = 111 AND T1.Forks = 58 AND T1.Watchers = 111",
    "predicted_sql": "SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars = 111 AND T1.Forks = 58 AND T1.Watchers = 111"
  },
  {
    "idx": 44,
    "relevant_table_schema": {
      "method": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FullComment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ApiCalls",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CommentIsXml",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SampledAt",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SolutionId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NameTokenized",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Are the comments for the method \"HtmlSharp.HtmlParser.Feed\" in XML format?",
    "gold_sql": "SELECT CASE WHEN CommentIsXml = 0 THEN 'No' WHEN CommentIsXml = 1 THEN 'Yes' END isXMLFormat FROM Method WHERE Name = 'HtmlSharp.HtmlParser.Feed'",
    "predicted_sql": "SELECT CommentIsXml FROM Method WHERE Name = 'HtmlSharp.HtmlParser.Feed'"
  },
  {
    "idx": 45,
    "relevant_table_schema": {
      "solution": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "RepoId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Path",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcessedTime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WasCompiled",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "method": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FullComment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ApiCalls",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CommentIsXml",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SampledAt",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SolutionId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NameTokenized",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all the methods with a solution with a \"636449700980488000\" processed time.",
    "gold_sql": "SELECT DISTINCT T2.Name FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.ProcessedTime = 636449700980488000",
    "predicted_sql": "SELECT T2.Name FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.ProcessedTime = 636449700980488000"
  },
  {
    "idx": 46,
    "relevant_table_schema": {
      "method": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FullComment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ApiCalls",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CommentIsXml",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SampledAt",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SolutionId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NameTokenized",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the task method of the tokenized name \"string extensions to pascal case\n\"?",
    "gold_sql": "SELECT DISTINCT SUBSTR(SUBSTR(Name, INSTR(Name, '.') + 1), 1, INSTR(SUBSTR(Name, INSTR(Name, '.') + 1), '.') - 1) task FROM Method WHERE NameTokenized = 'string extensions to pascal case'",
    "predicted_sql": "SELECT Name FROM Method WHERE NameTokenized = 'string extensions to pascal case'"
  },
  {
    "idx": 47,
    "relevant_table_schema": {
      "repo": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Stars",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Forks",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Watchers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcessedTime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "solution": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "RepoId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Path",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcessedTime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WasCompiled",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all the solutions of repositories with the Forks higher than half of the watchers.",
    "gold_sql": "SELECT DISTINCT T2.Id FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Forks > T1.Watchers / 2",
    "predicted_sql": "SELECT T2.Path FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Forks > T1.Watchers / 2"
  },
  {
    "idx": 48,
    "relevant_table_schema": {
      "method": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FullComment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ApiCalls",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CommentIsXml",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SampledAt",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SolutionId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NameTokenized",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What the percentage of the english methods among the methods whose comments is XML format?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN Lang = 'en' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Name) FROM Method WHERE CommentIsXml = 1",
    "predicted_sql": "SELECT CAST(COUNT(CASE WHEN CommentIsXml = 1 THEN Id ELSE NULL END) AS REAL) * 100 / COUNT(Id) FROM Method WHERE Lang = 'en'"
  },
  {
    "idx": 49,
    "relevant_table_schema": {
      "solution": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "RepoId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Path",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcessedTime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WasCompiled",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "method": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FullComment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ApiCalls",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CommentIsXml",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SampledAt",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SolutionId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NameTokenized",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all the ids of repositories for solutions with \"ro\" methods.",
    "gold_sql": "SELECT DISTINCT T1.RepoId FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Lang = 'ro'",
    "predicted_sql": "SELECT DISTINCT T1.RepoId FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Lang = 'ro'"
  },
  {
    "idx": 50,
    "relevant_table_schema": {
      "trains": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "direction",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "cars": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(train_id) references trains(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "len",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sides",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "roof",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wheels",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many cars running east have double-sided tail cars?",
    "gold_sql": "SELECT COUNT(T1.id) FROM trains AS T1 INNER JOIN cars AS T2 ON T1.id = T2.train_id INNER JOIN ( SELECT train_id, MAX(position) AS trailPosi FROM cars GROUP BY train_id ) AS T3 ON T1.id = T3.train_id WHERE T1.direction = 'east' AND T2.position = T3.trailPosi AND T2.sides = 'double'",
    "predicted_sql": "SELECT COUNT(T2.train_id) FROM trains AS T1 INNER JOIN cars AS T2 ON T1.id = T2.train_id WHERE T1.direction = 'east' AND T2.sides = 'double'"
  },
  {
    "idx": 51,
    "relevant_table_schema": {
      "cars": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(train_id) references trains(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "len",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sides",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "roof",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wheels",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "trains": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "direction",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the shapes of all the head cars on the trains that run in the east direction.",
    "gold_sql": "SELECT T1.shape FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east' AND T1.position = 1 GROUP BY T1.shape",
    "predicted_sql": "SELECT T1.shape FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east' AND T1.position = 1"
  },
  {
    "idx": 52,
    "relevant_table_schema": {
      "trains": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "direction",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "cars": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(train_id) references trains(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "len",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sides",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "roof",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wheels",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Trains that run in which direction have more rectangle-shaped cars in total?",
    "gold_sql": "SELECT T1.direction FROM trains AS T1 INNER JOIN ( SELECT train_id, COUNT(id) AS rectCarsNum FROM cars WHERE shape = 'rectangle' GROUP BY train_id ) AS T2 ON T1.id = T2.train_id ORDER BY T2.rectCarsNum DESC",
    "predicted_sql": "SELECT T1.direction FROM trains AS T1 INNER JOIN ( SELECT train_id, MAX(position) AS trailPosi FROM cars GROUP BY train_id ) AS T2 ON T1.id = T2.train_id WHERE T2.trailPosi = 4"
  },
  {
    "idx": 53,
    "relevant_table_schema": {
      "cars": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(train_id) references trains(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "len",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sides",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "roof",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wheels",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "trains": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "direction",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the directions in which the trains with at least one empty-loaded car run.",
    "gold_sql": "SELECT T2.direction FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.load_num = 0",
    "predicted_sql": "SELECT T2.direction FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.position = 0 AND T1.load_num = 0 GROUP BY T2.direction"
  },
  {
    "idx": 54,
    "relevant_table_schema": {
      "cars": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(train_id) references trains(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "len",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sides",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "roof",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wheels",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the shape of the tail car on train no.1?",
    "gold_sql": "SELECT shape FROM cars WHERE train_id = 1 AND position = 4",
    "predicted_sql": "SELECT T1.shape FROM cars AS T1 WHERE T1.train_id = 1 AND T1.position = 5"
  },
  {
    "idx": 55,
    "relevant_table_schema": {
      "cars": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(train_id) references trains(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "len",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sides",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "roof",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wheels",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "trains": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "direction",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many eastbound trains have rectangular-shaped head cars?",
    "gold_sql": "SELECT COUNT(T.train_id) FROM (SELECT T1.train_id FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.position = 1 AND T2.direction = 'east' AND T1.shape = 'rectangle' GROUP BY T1.train_id)as T",
    "predicted_sql": "SELECT COUNT(T.train_id) FROM (SELECT T1.train_id FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.position = 1 AND T2.direction = 'east' AND T1.shape = 'rectangle' GROUP BY T1.train_id)as T"
  },
  {
    "idx": 56,
    "relevant_table_schema": {
      "cars": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(train_id) references trains(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "len",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sides",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "roof",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wheels",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "trains": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "direction",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which direction do most of the trains with rectangle-shaped second cars run?",
    "gold_sql": "SELECT T2.direction FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.position = 2 AND T1.shape = 'rectangle' GROUP BY T2.direction ORDER BY COUNT(T2.id) DESC LIMIT 1",
    "predicted_sql": "SELECT T2.direction FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.position = 2 AND T1.shape = 'rectangle' GROUP BY T2.direction ORDER BY COUNT(T2.id) DESC LIMIT 1"
  },
  {
    "idx": 57,
    "relevant_table_schema": {
      "cars": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(train_id) references trains(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "len",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sides",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "roof",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wheels",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "trains": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "direction",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the IDs of all the cars with double sides on trains that run in the west direction.",
    "gold_sql": "SELECT T1.id FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east' AND T1.sides = 'double'",
    "predicted_sql": "SELECT T1.id FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'west' AND T1.sides = 'double'"
  },
  {
    "idx": 58,
    "relevant_table_schema": {
      "cars": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(train_id) references trains(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "len",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sides",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "roof",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wheels",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "trains": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "direction",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the total number of short cars on all the trains that run in the east direction?",
    "gold_sql": "SELECT SUM(CASE WHEN T1.len = 'short' then 1 ELSE 0 END)as count FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east'",
    "predicted_sql": "SELECT SUM(CASE WHEN T2.direction = 'east' AND T1.position = 1 THEN 1 ELSE 0 END) FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id"
  },
  {
    "idx": 59,
    "relevant_table_schema": {
      "trains": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "direction",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "cars": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(train_id) references trains(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "len",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sides",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "roof",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wheels",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_shape",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "load_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the percentage of all the trains with at least 4 cars? List the directions of the said trains.",
    "gold_sql": "SELECT CAST(COUNT(CASE WHEN T2.trailPosi >= 4 THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM trains AS T1 INNER JOIN ( SELECT train_id, MAX(position) AS trailPosi FROM cars GROUP BY train_id ) AS T2 ON T1.id = T2.train_id UNION ALL SELECT T1.direction FROM trains AS T1 INNER JOIN ( SELECT train_id, MAX(position) AS trailPosi FROM cars t GROUP BY train_id ) AS T2 ON T1.id = T2.train_id AND T2.trailPosi >= 4",
    "predicted_sql": "SELECT CAST(COUNT(CASE WHEN T2.position >= 4 THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id), T1.direction FROM trains AS T1 INNER JOIN ( SELECT train_id, MAX(position) AS trailPosi FROM cars GROUP BY train_id ) AS T2 ON T1.id = T2.train_id"
  },
  {
    "idx": 60,
    "relevant_table_schema": {
      "movie": {
        "columns": [
          {
            "field": "MovieID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MPAA Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Budget",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gross",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Release Date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genre",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Runtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating Count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "characters": {
        "columns": [
          {
            "field": "foreign key(MovieID) references movie(MovieID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ActorID) references actor(ActorID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Character Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "creditOrder",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "screentime",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "actor": {
        "columns": [
          {
            "field": "ActorID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date of Birth",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Height (Inches)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Biography",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NetWorth",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the MPAA rating and title of the movie starred by Leonardo DiCaprio with highest budget?",
    "gold_sql": "SELECT T1.`MPAA Rating`, T1.Title FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Leonardo DiCaprio' ORDER BY T1.Budget DESC LIMIT 1",
    "predicted_sql": "SELECT T1.MPAA Rating, T1.Title FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Leonardo DiCaprio' ORDER BY T1.Budget DESC LIMIT 1"
  },
  {
    "idx": 61,
    "relevant_table_schema": {
      "movie": {
        "columns": [
          {
            "field": "MovieID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MPAA Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Budget",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gross",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Release Date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genre",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Runtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating Count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List down the movie ID of movie with a budget of 15000000 and a rating between 7 to 8.",
    "gold_sql": "SELECT MovieID FROM movie WHERE Rating BETWEEN 7 AND 8 AND Budget = 15000000",
    "predicted_sql": "SELECT MovieID FROM movie WHERE Budget = 15000000 AND Rating BETWEEN 7 AND 8"
  },
  {
    "idx": 62,
    "relevant_table_schema": {
      "characters": {
        "columns": [
          {
            "field": "foreign key(MovieID) references movie(MovieID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ActorID) references actor(ActorID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Character Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "creditOrder",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "screentime",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "actor": {
        "columns": [
          {
            "field": "ActorID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date of Birth",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Height (Inches)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Biography",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NetWorth",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the names of all the characters played by Tom Cruise.",
    "gold_sql": "SELECT T1.`Character Name` FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T2.Name = 'Tom Cruise'",
    "predicted_sql": "SELECT T1.`Character Name` FROM characters AS T1 INNER JOIN actor AS T2 ON T2.ActorID = T1.ActorID WHERE T2.Name = 'Tom Cruise'"
  },
  {
    "idx": 63,
    "relevant_table_schema": {
      "characters": {
        "columns": [
          {
            "field": "foreign key(MovieID) references movie(MovieID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ActorID) references actor(ActorID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Character Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "creditOrder",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "screentime",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "actor": {
        "columns": [
          {
            "field": "ActorID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date of Birth",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Height (Inches)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Biography",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NetWorth",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many movies star a male African American actor?",
    "gold_sql": "SELECT COUNT(*) FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T2.Gender = 'Male' AND T2.Ethnicity = 'African American'",
    "predicted_sql": "SELECT COUNT(T1.MovieID) FROM characters AS T1 INNER JOIN actor AS T2 ON T2.ActorID = T1.ActorID WHERE T2.Ethnicity = 'African American' AND T1.`Character Name` = 'Lead' AND T2.Gender = 'Male'"
  },
  {
    "idx": 64,
    "relevant_table_schema": {
      "movie": {
        "columns": [
          {
            "field": "MovieID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MPAA Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Budget",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gross",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Release Date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genre",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Runtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating Count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "characters": {
        "columns": [
          {
            "field": "foreign key(MovieID) references movie(MovieID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ActorID) references actor(ActorID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Character Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "creditOrder",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "screentime",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "actor": {
        "columns": [
          {
            "field": "ActorID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date of Birth",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Height (Inches)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Biography",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NetWorth",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Find the actor's name that played as Don Altobello in a drama movie that has a gross of 136766062.",
    "gold_sql": "SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Gross = 136766062 AND T2.`Character Name` = 'Don Altobello' AND T1.Genre = 'Drama'",
    "predicted_sql": "SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Gross = 136766062 AND T2.`Character Name` = 'Don Altobello' AND T1.Genre = 'Drama'"
  },
  {
    "idx": 65,
    "relevant_table_schema": {
      "movie": {
        "columns": [
          {
            "field": "MovieID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MPAA Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Budget",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gross",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Release Date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genre",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Runtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating Count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "characters": {
        "columns": [
          {
            "field": "foreign key(MovieID) references movie(MovieID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ActorID) references actor(ActorID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Character Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "creditOrder",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "screentime",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "actor": {
        "columns": [
          {
            "field": "ActorID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date of Birth",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Height (Inches)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Biography",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NetWorth",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the names of the actors who played a role in the movie Batman.",
    "gold_sql": "SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Batman'",
    "predicted_sql": "SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Batman'"
  },
  {
    "idx": 66,
    "relevant_table_schema": {
      "characters": {
        "columns": [
          {
            "field": "foreign key(MovieID) references movie(MovieID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ActorID) references actor(ActorID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Character Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "creditOrder",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "screentime",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "actor": {
        "columns": [
          {
            "field": "ActorID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date of Birth",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Height (Inches)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Biography",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NetWorth",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many movies has the highest networth actor acted in?",
    "gold_sql": "SELECT COUNT(*) FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE CAST(REPLACE(REPLACE(T2.NetWorth, ',', ''), '$', '') AS REAL) = ( SELECT MAX(CAST(REPLACE(REPLACE(NetWorth, ',', ''), '$', '') AS REAL)) FROM actor)",
    "predicted_sql": "SELECT COUNT(T1.MovieID) FROM characters AS T1 INNER JOIN actor AS T2 ON T2.ActorID = T1.ActorID ORDER BY T2.NetWorth DESC LIMIT 1"
  },
  {
    "idx": 67,
    "relevant_table_schema": {
      "movie": {
        "columns": [
          {
            "field": "MovieID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MPAA Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Budget",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gross",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Release Date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genre",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Runtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating Count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "characters": {
        "columns": [
          {
            "field": "foreign key(MovieID) references movie(MovieID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ActorID) references actor(ActorID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Character Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "creditOrder",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "screentime",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "actor": {
        "columns": [
          {
            "field": "ActorID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date of Birth",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Height (Inches)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Biography",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NetWorth",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the net worth of the actor starred in Misery who has a height ranging from 60 to 70 inches tall?",
    "gold_sql": "SELECT T3.NetWorth FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Misery' AND T3.`Height (Inches)` BETWEEN 60 AND 70 AND T3.Gender = 'Male'",
    "predicted_sql": "SELECT T3.NetWorth FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Misery' AND T3.Height (Inches) BETWEEN 60 AND 70"
  },
  {
    "idx": 68,
    "relevant_table_schema": {
      "characters": {
        "columns": [
          {
            "field": "foreign key(MovieID) references movie(MovieID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ActorID) references actor(ActorID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Character Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "creditOrder",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "screentime",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "actor": {
        "columns": [
          {
            "field": "ActorID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date of Birth",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Height (Inches)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Biography",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NetWorth",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How tall is the actor who played \"Lurch\"?",
    "gold_sql": "SELECT T2.`Height (Inches)` FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T1.`Character Name` = 'Lurch'",
    "predicted_sql": "SELECT T2.Height (Inches) FROM characters AS T1 INNER JOIN actor AS T2 ON T2.ActorID = T1.ActorID WHERE T1.`Character Name` = 'Lurch'"
  },
  {
    "idx": 69,
    "relevant_table_schema": {
      "movie": {
        "columns": [
          {
            "field": "MovieID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MPAA Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Budget",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gross",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Release Date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genre",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Runtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating Count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "characters": {
        "columns": [
          {
            "field": "foreign key(MovieID) references movie(MovieID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ActorID) references actor(ActorID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Character Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "creditOrder",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "screentime",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "actor": {
        "columns": [
          {
            "field": "ActorID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date of Birth",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Birth Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Height (Inches)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Biography",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NetWorth",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In romantic movies, how many of them starred by John Travolta?",
    "gold_sql": "SELECT COUNT(*) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Genre = 'Romance' AND T3.Name = 'John Travolta'",
    "predicted_sql": "SELECT COUNT(T2.MovieID) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'John Travolta' AND T1.Genre = 'Romantic'"
  },
  {
    "idx": 70,
    "relevant_table_schema": {
      "twitter": {
        "columns": [
          {
            "field": "TweetID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Weekday",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Hour",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsReshare",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reach",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "RetweetCount",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Klout",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "text",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(UserID) references user(UserID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "LocationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StateCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the percentage of the tweets from California are positive?",
    "gold_sql": "SELECT SUM(CASE WHEN T1.Sentiment > 0 THEN 1.0 ELSE 0 END) / COUNT(T1.TweetID) AS percentage FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE State = 'California'",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN T1.Sentiment > 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Sentiment) FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.State = 'California'"
  },
  {
    "idx": 71,
    "relevant_table_schema": {
      "user": {
        "columns": [
          {
            "field": "UserID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "twitter": {
        "columns": [
          {
            "field": "TweetID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Weekday",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Hour",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsReshare",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reach",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "RetweetCount",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Klout",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "text",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(UserID) references user(UserID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "LocationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StateCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among all the tweets sent by male users in Argentina, what is the text of the one with the most number of likes?",
    "gold_sql": "SELECT T2.text FROM user AS T1 INNER JOIN twitter AS T2 ON T1.UserID = T2.UserID INNER JOIN location AS T3 ON T2.LocationID = T3.LocationID WHERE T3.Country = 'Argentina' AND T1.Gender = 'Male' ORDER BY T2.Likes DESC LIMIT 1",
    "predicted_sql": "SELECT T2.text FROM user AS T1 INNER JOIN twitter AS T2 ON T1.UserID = T2.UserID INNER JOIN location AS T3 ON T3.LocationID = T2.LocationID WHERE T3.Country = 'Argentina' AND T1.Gender = 'M' ORDER BY T2.Likes DESC LIMIT 1"
  },
  {
    "idx": 72,
    "relevant_table_schema": {
      "twitter": {
        "columns": [
          {
            "field": "TweetID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Weekday",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Hour",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsReshare",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reach",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "RetweetCount",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Klout",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "text",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(UserID) references user(UserID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "LocationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StateCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "For the tweet which got a reach number of 547851, which country did it come from?",
    "gold_sql": "SELECT T2.Country FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T1.Reach = 547851",
    "predicted_sql": "SELECT T2.Country FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.Reach = 547851"
  },
  {
    "idx": 73,
    "relevant_table_schema": {
      "twitter": {
        "columns": [
          {
            "field": "TweetID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Weekday",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Hour",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsReshare",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reach",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "RetweetCount",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Klout",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "text",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(UserID) references user(UserID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "LocationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StateCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "From which country is the tweet with the most likes posted?",
    "gold_sql": "SELECT T2.Country FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID ORDER BY T1.Likes DESC LIMIT 1",
    "predicted_sql": "SELECT T2.Country FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.Likes = ( SELECT MAX(T1.Likes) FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID )"
  },
  {
    "idx": 74,
    "relevant_table_schema": {
      "twitter": {
        "columns": [
          {
            "field": "TweetID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Weekday",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Hour",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsReshare",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reach",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "RetweetCount",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Klout",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "text",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(UserID) references user(UserID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "LocationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StateCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the tweets posted from Santa Fe state in Argentina, how many of them were posted on 31st?",
    "gold_sql": "SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.Day = 31 AND T2.State = 'Santa' AND T2.Country = 'Argentina'",
    "predicted_sql": "SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.State = 'Santa Fe' AND T1.Weekday = 'Thursday' AND T1.Day = 31 AND T1.Hour = 23"
  },
  {
    "idx": 75,
    "relevant_table_schema": {
      "twitter": {
        "columns": [
          {
            "field": "TweetID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Weekday",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Hour",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsReshare",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reach",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "RetweetCount",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Klout",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "text",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(UserID) references user(UserID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "LocationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StateCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "user": {
        "columns": [
          {
            "field": "UserID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the percentage of male Twitter users from Florida?",
    "gold_sql": "SELECT SUM(CASE WHEN T3.Gender = 'Male' THEN 1.0 ELSE 0 END) / COUNT(T1.TweetID) AS percentage FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID INNER JOIN user AS T3 ON T3.UserID = T1.UserID WHERE T2.State = 'Florida'",
    "predicted_sql": "SELECT CAST(COUNT(CASE WHEN T3.Gender = 'M' THEN T1.UserID ELSE NULL END) AS REAL) * 100 / COUNT(T1.UserID) FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID INNER JOIN user AS T3 ON T1.UserID = T3.UserID WHERE T2.State = 'Florida'"
  },
  {
    "idx": 76,
    "relevant_table_schema": {
      "twitter": {
        "columns": [
          {
            "field": "TweetID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Weekday",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Hour",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsReshare",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reach",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "RetweetCount",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Klout",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "text",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(UserID) references user(UserID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "LocationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StateCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "user": {
        "columns": [
          {
            "field": "UserID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many female Twitter users are there from Wisconsin?",
    "gold_sql": "SELECT COUNT(T1.Likes) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID INNER JOIN user AS T3 ON T3.UserID = T1.UserID WHERE T2.State = 'Wisconsin' AND T3.Gender = 'Female'",
    "predicted_sql": "SELECT COUNT(T3.UserID) FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID INNER JOIN user AS T3 ON T1.UserID = T3.UserID WHERE T2.State = 'Wisconsin' AND T3.Gender = 'F'"
  },
  {
    "idx": 77,
    "relevant_table_schema": {
      "twitter": {
        "columns": [
          {
            "field": "TweetID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Weekday",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Hour",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsReshare",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reach",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "RetweetCount",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Klout",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "text",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(UserID) references user(UserID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "LocationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StateCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the top 3 cities with the most number of tweets posted in Canada.",
    "gold_sql": "SELECT T.City FROM ( SELECT T2.City, COUNT(T1.TweetID) AS num FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.Country = 'Canada' GROUP BY T2.City ) T ORDER BY T.num DESC LIMIT 3",
    "predicted_sql": "SELECT T2.City FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.Country = 'Canada' GROUP BY T2.City ORDER BY COUNT(T1.TweetID) DESC LIMIT 3"
  },
  {
    "idx": 78,
    "relevant_table_schema": {
      "twitter": {
        "columns": [
          {
            "field": "TweetID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Weekday",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Hour",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsReshare",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reach",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "RetweetCount",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Klout",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "text",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(UserID) references user(UserID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "user": {
        "columns": [
          {
            "field": "UserID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "For the tweet which got the most likes, state the gender of the user who tweeted it.",
    "gold_sql": "SELECT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID ORDER BY T1.Likes DESC LIMIT 1",
    "predicted_sql": "SELECT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID ORDER BY T1.Likes DESC LIMIT 1"
  },
  {
    "idx": 79,
    "relevant_table_schema": {
      "twitter": {
        "columns": [
          {
            "field": "TweetID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Weekday",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Hour",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Day",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsReshare",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reach",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "RetweetCount",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Likes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Klout",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "text",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(UserID) references user(UserID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "LocationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StateCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "user": {
        "columns": [
          {
            "field": "UserID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among all the tweets with a positive sentiment, how many of them were posted by male users in Australia?",
    "gold_sql": "SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID INNER JOIN user AS T3 ON T3.UserID = T1.UserID WHERE T2.Country = 'Australia' AND T3.Gender = 'Male' AND T1.Sentiment > 0",
    "predicted_sql": "SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID INNER JOIN user AS T3 ON T1.UserID = T3.UserID WHERE T2.Country = 'Australia' AND T3.Gender = 'M' AND T1.Sentiment > 0"
  },
  {
    "idx": 80,
    "relevant_table_schema": {
      "registration": {
        "columns": [
          {
            "field": "foreign key(course_id) references course(course_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(student_id) references student(student_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "grade",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "course": {
        "columns": [
          {
            "field": "course_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "credit",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "diff",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average number of students who registered for the courses with a difficulty of 4?",
    "gold_sql": "SELECT CAST(COUNT(T1.student_id) AS REAL) / COUNT(DISTINCT T2.course_id) FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.diff = 4",
    "predicted_sql": "SELECT CAST(COUNT(T1.student_id) AS REAL) / COUNT(DISTINCT T2.course_id) FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.diff = 4"
  },
  {
    "idx": 81,
    "relevant_table_schema": {
      "prof": {
        "columns": [
          {
            "field": "prof_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "popularity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teachingability",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "graduate_from",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the male and female ratio among the professors?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN gender = 'Male' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN gender = 'Female' THEN 1 ELSE 0 END) FROM prof",
    "predicted_sql": "SELECT CAST(COUNT(CASE WHEN gender = 'M' THEN 1 ELSE NULL END) AS REAL) / COUNT(CASE WHEN gender = 'F' THEN 1.0 ELSE NULL END) FROM prof"
  },
  {
    "idx": 82,
    "relevant_table_schema": {
      "ra": {
        "columns": [
          {
            "field": "foreign key(student_id) references student(student_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "capability",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(prof_id) references prof(prof_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "prof": {
        "columns": [
          {
            "field": "prof_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "popularity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teachingability",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "graduate_from",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "student": {
        "columns": [
          {
            "field": "student_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "f_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "intelligence",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gpa",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the percentage of Professor Ogdon Zywicki's research assistants are taught postgraduate students?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T3.type = 'TPG' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.student_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T1.student_id = T3.student_id WHERE T2.first_name = 'Ogdon' AND T2.last_name = 'Zywicki'",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN T1.capability = 3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.prof_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T1.student_id = T3.student_id WHERE T2.first_name = 'Ogdon' AND T2.last_name = 'Zywicki' AND T3.type = 'postgrad'"
  },
  {
    "idx": 83,
    "relevant_table_schema": {
      "ra": {
        "columns": [
          {
            "field": "foreign key(student_id) references student(student_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "capability",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(prof_id) references prof(prof_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "student": {
        "columns": [
          {
            "field": "student_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "f_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "intelligence",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gpa",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among students with low salary, how many of them have a gpa of 3.5?",
    "gold_sql": "SELECT COUNT(T1.student_id) FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T2.gpa = 3.5 AND T1.salary = 'low'",
    "predicted_sql": "SELECT COUNT(T2.student_id) FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.salary = 'low' AND T2.gpa = 3.5"
  },
  {
    "idx": 84,
    "relevant_table_schema": {
      "ra": {
        "columns": [
          {
            "field": "foreign key(student_id) references student(student_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "capability",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(prof_id) references prof(prof_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "student": {
        "columns": [
          {
            "field": "student_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "f_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "intelligence",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gpa",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the students with high salary, what is total number of students with a GPA higher than 3?",
    "gold_sql": "SELECT COUNT(T1.student_id) FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.salary = 'high' AND T2.gpa > 3",
    "predicted_sql": "SELECT COUNT(T2.student_id) FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.salary = 'high' AND T2.gpa > 3"
  },
  {
    "idx": 85,
    "relevant_table_schema": {
      "ra": {
        "columns": [
          {
            "field": "foreign key(student_id) references student(student_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "capability",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(prof_id) references prof(prof_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "prof": {
        "columns": [
          {
            "field": "prof_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "popularity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teachingability",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "graduate_from",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "student": {
        "columns": [
          {
            "field": "student_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "f_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "intelligence",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gpa",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "registration": {
        "columns": [
          {
            "field": "foreign key(course_id) references course(course_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(student_id) references student(student_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "grade",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "course": {
        "columns": [
          {
            "field": "course_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "credit",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "diff",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Mention the names and credits of course registered by the students who were under the supervision of female professor with the highest teaching ability.",
    "gold_sql": "SELECT T5.name, T5.credit FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T1.student_id = T3.student_id INNER JOIN registration AS T4 ON T3.student_id = T4.student_id INNER JOIN course AS T5 ON T4.course_id = T5.course_id WHERE T2.gender = 'Female' ORDER BY T2.teachingability DESC LIMIT 1",
    "predicted_sql": "SELECT T5.name, T6.credit FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T1.student_id = T3.student_id INNER JOIN registration AS T4 ON T1.student_id = T4.student_id INNER JOIN course AS T5 ON T4.course_id = T5.course_id INNER JOIN ( SELECT prof_id, teachingability FROM prof ORDER BY teachingability DESC LIMIT 1 ) AS T6 ON T1.prof_id = T6.prof_id WHERE T2.gender = 'F'"
  },
  {
    "idx": 86,
    "relevant_table_schema": {
      "student": {
        "columns": [
          {
            "field": "student_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "f_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "intelligence",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gpa",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "registration": {
        "columns": [
          {
            "field": "foreign key(course_id) references course(course_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(student_id) references student(student_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "grade",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "course": {
        "columns": [
          {
            "field": "course_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "credit",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "diff",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the difference in the average GPA of students who took the hardest and easiest courses?",
    "gold_sql": "SELECT AVG(T1.gpa) FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.diff IN (2, 1) GROUP BY T3.diff",
    "predicted_sql": "SELECT AVG(T2.grade) - ( SELECT AVG(T2.grade) FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T3.course_id = T2.course_id WHERE T3.diff = 5 ) FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T3.course_id = T2.course_id WHERE T3.diff = 1"
  },
  {
    "idx": 87,
    "relevant_table_schema": {
      "ra": {
        "columns": [
          {
            "field": "foreign key(student_id) references student(student_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "capability",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(prof_id) references prof(prof_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "student": {
        "columns": [
          {
            "field": "student_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "f_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "intelligence",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gpa",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Provide the full names and emails of unpaid research assistants.",
    "gold_sql": "SELECT T2.f_name, T2.l_name, T2.email FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.salary = 'free'",
    "predicted_sql": "SELECT T2.f_name, T2.l_name, T2.email FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.salary = 'T2'"
  },
  {
    "idx": 88,
    "relevant_table_schema": {
      "student": {
        "columns": [
          {
            "field": "student_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "f_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "intelligence",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gpa",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "registration": {
        "columns": [
          {
            "field": "foreign key(course_id) references course(course_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(student_id) references student(student_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "grade",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many students taking a bachelor's degree received an A in all of the courses that they took?",
    "gold_sql": "SELECT COUNT(T2.student_id) FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id WHERE T2.grade = 'A' AND T1.type = 'UG'",
    "predicted_sql": "SELECT COUNT(T1.student_id) FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id WHERE T2.grade = 'A' AND T1.type = 'Bachelor\\'s'"
  },
  {
    "idx": 89,
    "relevant_table_schema": {
      "prof": {
        "columns": [
          {
            "field": "prof_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "popularity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teachingability",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "graduate_from",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "ra": {
        "columns": [
          {
            "field": "foreign key(student_id) references student(student_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "capability",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(prof_id) references prof(prof_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "student": {
        "columns": [
          {
            "field": "student_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "f_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "intelligence",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gpa",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Describe the students' full names and GPAs under the supervision of the most popular professor.",
    "gold_sql": "SELECT T3.f_name, T3.l_name, T3.gpa FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id ORDER BY T1.popularity DESC LIMIT 1",
    "predicted_sql": "SELECT T3.f_name, T3.l_name, T3.gpa FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id ORDER BY T1.popularity DESC LIMIT 1"
  },
  {
    "idx": 90,
    "relevant_table_schema": {
      "course": {
        "columns": [
          {
            "field": "course_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "courseLevel",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "taughtby": {
        "columns": [
          {
            "field": "foreign key(course_id) references course(course_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(p_id) references person(p_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "What is the average number of professional or master/undergraduate courses being taught by each professor?",
    "gold_sql": "SELECT CAST(COUNT(T1.course_id) AS REAL) / COUNT(DISTINCT T2.p_id) FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T1.courseLevel = 'Level_500'",
    "predicted_sql": "SELECT CAST(COUNT(T2.course_id) AS REAL) / COUNT(DISTINCT T1.p_id) FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T1.courseLevel = 'Level_500'"
  },
  {
    "idx": 91,
    "relevant_table_schema": {
      "person": {
        "columns": [
          {
            "field": "p_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "professor",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hasPosition",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inPhase",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "yearsInProgram",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many non-faculty members are not undergoing the phase of qualifications?",
    "gold_sql": "SELECT COUNT(*) FROM person WHERE hasPosition = 0 AND inPhase = 0",
    "predicted_sql": "SELECT COUNT(p_id) FROM person WHERE hasPosition = 'false' AND inPhase = 'false'"
  },
  {
    "idx": 92,
    "relevant_table_schema": {
      "course": {
        "columns": [
          {
            "field": "course_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "courseLevel",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the total of professional courses available at the university? List out all the course id.",
    "gold_sql": "SELECT COUNT(course_id) FROM course WHERE courseLevel = 'Level_500'",
    "predicted_sql": "SELECT SUM(CASE WHEN courseLevel = 'Level_500' THEN 1 ELSE 0 END) , course_id FROM course"
  },
  {
    "idx": 93,
    "relevant_table_schema": {
      "person": {
        "columns": [
          {
            "field": "p_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "professor",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hasPosition",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inPhase",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "yearsInProgram",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "taughtby": {
        "columns": [
          {
            "field": "foreign key(course_id) references course(course_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(p_id) references person(p_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "course": {
        "columns": [
          {
            "field": "course_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "courseLevel",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Between the faculty employee professors, how many teaches high-level or harder undergraduate courses? Indicate each of the professors unique identifying number.",
    "gold_sql": "SELECT COUNT(*) FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id INNER JOIN course AS T3 ON T3.course_id = T2.course_id WHERE T1.hasPosition = 'Faculty_eme' AND T1.professor = 1 AND T3.courseLevel = 'Level_400'",
    "predicted_sql": "SELECT COUNT(DISTINCT T1.p_id) , T1.p_id FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.courseLevel = 'Level_500'"
  },
  {
    "idx": 94,
    "relevant_table_schema": {
      "course": {
        "columns": [
          {
            "field": "course_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "courseLevel",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "taughtby": {
        "columns": [
          {
            "field": "foreign key(course_id) references course(course_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(p_id) references person(p_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Please list the levels of the all courses taught by teacher no.79.",
    "gold_sql": "SELECT T1.courseLevel FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T2.p_id = 79",
    "predicted_sql": "SELECT T1.courseLevel FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T2.p_id = 79"
  },
  {
    "idx": 95,
    "relevant_table_schema": {
      "advisedby": {
        "columns": [
          {
            "field": "foreign key(p_id) references person(p_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(p_id_dummy) references person(p_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "p_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "professor",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hasPosition",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inPhase",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "yearsInProgram",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "taughtby": {
        "columns": [
          {
            "field": "foreign key(course_id) references course(course_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(p_id) references person(p_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "What are the courses taught by the advisors who gave advice to student with ID 376?",
    "gold_sql": "SELECT T3.course_id FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id INNER JOIN taughtBy AS T3 ON T2.p_id = T3.p_id WHERE T1.p_id = 141",
    "predicted_sql": "SELECT T3.course_id FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id INNER JOIN taughtBy AS T3 ON T2.p_id = T3.p_id WHERE T1.p_id_dummy = 376"
  },
  {
    "idx": 96,
    "relevant_table_schema": {
      "person": {
        "columns": [
          {
            "field": "p_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "professor",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hasPosition",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inPhase",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "yearsInProgram",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "taughtby": {
        "columns": [
          {
            "field": "foreign key(course_id) references course(course_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(p_id) references person(p_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Which professor taught the most courses and what is the position of this person in the university?",
    "gold_sql": "SELECT T1.p_id, T1.hasPosition FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id GROUP BY T1.p_id ORDER BY COUNT(T2.course_id) DESC LIMIT 1",
    "predicted_sql": "SELECT T1.p_id, T1.hasPosition FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id GROUP BY T1.p_id ORDER BY COUNT(T2.course_id) DESC LIMIT 1"
  },
  {
    "idx": 97,
    "relevant_table_schema": {
      "advisedby": {
        "columns": [
          {
            "field": "foreign key(p_id) references person(p_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(p_id_dummy) references person(p_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "p_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "professor",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hasPosition",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inPhase",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "yearsInProgram",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the IDs of the advisors of the students who are in the 5th year of their program.",
    "gold_sql": "SELECT T1.p_id_dummy FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.yearsInProgram = 'Year_5'",
    "predicted_sql": "SELECT T1.p_id_dummy FROM advisedBy AS T1 INNER JOIN person AS T2 ON T1.p_id = T2.p_id WHERE T2.yearsInProgram = 'Year_5'"
  },
  {
    "idx": 98,
    "relevant_table_schema": {
      "course": {
        "columns": [
          {
            "field": "course_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "courseLevel",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many professional or master/graduate courses are there?",
    "gold_sql": "SELECT COUNT(*) FROM course WHERE courseLevel = 'Level_500'",
    "predicted_sql": "SELECT COUNT(course_id) FROM course WHERE courseLevel = 'Level_500'"
  },
  {
    "idx": 99,
    "relevant_table_schema": {
      "advisedby": {
        "columns": [
          {
            "field": "foreign key(p_id) references person(p_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(p_id_dummy) references person(p_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "How many students are under advisor 415?",
    "gold_sql": "SELECT COUNT(*) FROM advisedBy WHERE p_id_dummy = 415",
    "predicted_sql": "SELECT COUNT(*) FROM advisedBy WHERE p_id_dummy = 415"
  },
  {
    "idx": 100,
    "relevant_table_schema": {
      "phone_brand_device_model2": {
        "columns": [
          {
            "field": "device_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_brand",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "device_model",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many OPPO devices are there?",
    "gold_sql": "SELECT COUNT(device_id) FROM phone_brand_device_model2 WHERE phone_brand = 'OPPO'",
    "predicted_sql": "SELECT COUNT(device_id) FROM phone_brand_device_model2 WHERE phone_brand = 'OPPO'"
  },
  {
    "idx": 101,
    "relevant_table_schema": {
      "gender_age": {
        "columns": [
          {
            "field": "device_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(device_id) references phone_brand_device_model2(device_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "group",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "phone_brand_device_model2": {
        "columns": [
          {
            "field": "device_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_brand",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "device_model",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What age group is the most using SM-T2558 model phones?",
    "gold_sql": "SELECT T.`group` FROM ( SELECT T1.`group`, COUNT(T1.device_id) AS num FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'SM-T2558' GROUP BY T1.`group` ) AS T ORDER BY T.num DESC LIMIT 1",
    "predicted_sql": "SELECT T1.group FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'SM-T2558' GROUP BY T1.group ORDER BY COUNT(T1.group) DESC LIMIT 1"
  },
  {
    "idx": 102,
    "relevant_table_schema": {
      "gender_age": {
        "columns": [
          {
            "field": "device_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(device_id) references phone_brand_device_model2(device_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "group",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "phone_brand_device_model2": {
        "columns": [
          {
            "field": "device_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_brand",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "device_model",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among all the users who use a vivo device, what is the percentage of the users in the M23-26 user group?",
    "gold_sql": "SELECT SUM(IIF(T1.`group` = 'M23-26', 1.0, 0)) / COUNT(T1.device_id) AS per FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'vivo'",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN T1.group = 'M23-26' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'vivo'"
  },
  {
    "idx": 103,
    "relevant_table_schema": {
      "gender_age": {
        "columns": [
          {
            "field": "device_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(device_id) references phone_brand_device_model2(device_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "group",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "events_relevant": {
        "columns": [
          {
            "field": "event_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(device_id) references gender_age(device_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "timestamp",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which gender logged in the most to an event in the first 10 days of May 2016?",
    "gold_sql": "SELECT T.gender FROM ( SELECT T1.gender, COUNT(T1.device_id) AS num FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id WHERE date(T2.timestamp) BETWEEN '2016-05-01' AND '2016-05-10' GROUP BY T1.gender ) AS T ORDER BY T.num DESC LIMIT 1",
    "predicted_sql": "SELECT T1.gender FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id WHERE SUBSTR(T2.timestamp, 1, 10) = '2016-05-01' AND T2.gender IS NOT NULL GROUP BY T1.gender ORDER BY COUNT(T1.gender) DESC LIMIT 1"
  },
  {
    "idx": 104,
    "relevant_table_schema": {
      "events": {
        "columns": [
          {
            "field": "event_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "device_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "timestamp",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What were the locations of the events on 8th May, 2016?",
    "gold_sql": "SELECT longitude, latitude FROM `events` WHERE SUBSTR(`timestamp`, 1, 10) = '2016-05-08'",
    "predicted_sql": "SELECT DISTINCT longitude, latitude FROM events WHERE `timestamp` LIKE '2016-05-08%'"
  },
  {
    "idx": 105,
    "relevant_table_schema": {
      "events": {
        "columns": [
          {
            "field": "event_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "device_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "timestamp",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list any three events that have the longitude and latitude of 0.",
    "gold_sql": "SELECT event_id FROM events WHERE longitude = 0 AND latitude = 0 LIMIT 3",
    "predicted_sql": "SELECT event_id FROM events WHERE longitude = 0 AND latitude = 0 LIMIT 3"
  },
  {
    "idx": 106,
    "relevant_table_schema": {
      "events": {
        "columns": [
          {
            "field": "event_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "device_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "timestamp",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "app_events": {
        "columns": [
          {
            "field": "foreign key(event_id) references events(event_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "app_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "is_installed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "is_active",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Provide the locations and times of the events of app ID \"8715964299802120000\".",
    "gold_sql": "SELECT T1.longitude, T1.latitude, T1.timestamp FROM events AS T1 INNER JOIN app_events AS T2 ON T1.event_id = T2.event_id WHERE T2.app_id = 8715964299802120000",
    "predicted_sql": "SELECT T1.longitude, T1.latitude, T1.timestamp FROM events AS T1 INNER JOIN app_events AS T2 ON T1.event_id = T2.event_id WHERE T2.app_id = 8715964299802120000"
  },
  {
    "idx": 107,
    "relevant_table_schema": {
      "events": {
        "columns": [
          {
            "field": "event_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "device_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "timestamp",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many events did the device ID \"3915082290673130000\" join?",
    "gold_sql": "SELECT COUNT(event_id) FROM events WHERE device_id = 3915082290673130000",
    "predicted_sql": "SELECT COUNT(device_id) FROM events WHERE device_id = '3915082290673130000'"
  },
  {
    "idx": 108,
    "relevant_table_schema": {
      "gender_age": {
        "columns": [
          {
            "field": "device_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(device_id) references phone_brand_device_model2(device_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "group",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "events": {
        "columns": [
          {
            "field": "event_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "device_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "timestamp",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many events did the 88-years-old male users participate on 4th May,2016?",
    "gold_sql": "SELECT COUNT(T2.event_id) FROM gender_age AS T1 INNER JOIN events AS T2 ON T2.device_id = T1.device_id WHERE T1.gender = 'M' AND SUBSTR(`timestamp`, 1, 10) = '2016-05-04' AND T1.age = 88",
    "predicted_sql": "SELECT COUNT(T2.event_id) FROM gender_age AS T1 INNER JOIN events AS T2 ON T1.device_id = T2.device_id WHERE T1.age = 88 AND T1.gender = 'M' AND strftime('%Y-%m-%d', T2.timestamp) = '2016-05-04'"
  },
  {
    "idx": 109,
    "relevant_table_schema": {
      "app_events": {
        "columns": [
          {
            "field": "foreign key(event_id) references events(event_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "app_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "is_installed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "is_active",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "events": {
        "columns": [
          {
            "field": "event_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "device_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "timestamp",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "gender_age": {
        "columns": [
          {
            "field": "device_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(device_id) references phone_brand_device_model2(device_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "group",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Give the number of 30-year-old users who were active in the events on 2016/5/2.",
    "gold_sql": "SELECT COUNT(T3.device_id) FROM app_events AS T1 INNER JOIN events AS T2 ON T1.event_id = T2.event_id INNER JOIN gender_age AS T3 ON T2.device_id = T3.device_id WHERE SUBSTR(`timestamp`, 1, 10) = '2016-05-02' AND T1.is_active = 1 AND T3.age = '30'",
    "predicted_sql": "SELECT COUNT(T3.device_id) FROM app_events AS T1 INNER JOIN events AS T2 ON T1.event_id = T2.event_id INNER JOIN gender_age AS T3 ON T3.device_id = T1.app_id WHERE T2.timestamp = '2016-05-02' AND T3.age = 30 AND T1.is_active = 1"
  },
  {
    "idx": 110,
    "relevant_table_schema": {
      "award": {
        "columns": [
          {
            "field": "award_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "series",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(person_id) references Person(person_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "result",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "credit": {
        "columns": [
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(person_id) references Person(person_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "credited",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "episode": {
        "columns": [
          {
            "field": "episode_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "series",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "number_in_series",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "air_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode_image",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "person_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height_meters",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the ratio of American casts on episode 2 of the series? Please include their roles.",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T2.category = 'Cast' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.category), T1.role FROM Award AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Episode AS T3 ON T2.episode_id = T3.episode_id INNER JOIN Person AS T4 ON T2.person_id = T4.person_id WHERE T3.episode = 2 AND T4.birth_country = 'USA'",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN T1.role = 'American' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.person_id) FROM Award AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Episode AS T3 ON T2.episode_id = T3.episode_id INNER JOIN Person AS T4 ON T1.person_id = T4.person_id WHERE T3.episode_id = '2' AND T3.series = 'The Office'"
  },
  {
    "idx": 111,
    "relevant_table_schema": {
      "episode": {
        "columns": [
          {
            "field": "episode_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "series",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "number_in_series",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "air_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode_image",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "keyword": {
        "columns": [
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "keyword",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which episode has the two keywords \"nun\" and \"priest\"?",
    "gold_sql": "SELECT T1.title FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T2.keyword IN ('nun', 'priest')",
    "predicted_sql": "SELECT T1.episode FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T2.Keyword = 'nun' OR T2.Keyword = 'priest'"
  },
  {
    "idx": 112,
    "relevant_table_schema": {
      "award": {
        "columns": [
          {
            "field": "award_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "series",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(person_id) references Person(person_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "result",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "person_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height_meters",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Who was the nominee playing the role of Katrina Ludlow in the Law & Order series?",
    "gold_sql": "SELECT T2.name FROM Award AS T1 INNER JOIN Person AS T2 ON T1.person_id = T2.person_id WHERE T1.result = 'Nominee' AND T1.role = 'Katrina Ludlow' AND T1.series = 'Law and Order'",
    "predicted_sql": "SELECT T2.name FROM Award AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T1.role = 'Katrina Ludlow' AND T1.series = 'Law & Order'"
  },
  {
    "idx": 113,
    "relevant_table_schema": {
      "episode": {
        "columns": [
          {
            "field": "episode_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "series",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "number_in_series",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "air_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode_image",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "award": {
        "columns": [
          {
            "field": "award_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "series",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(person_id) references Person(person_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "result",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many times was episode 20 of the Law and Order series nominated for the Primetime Emmy Awards in 1999?",
    "gold_sql": "SELECT COUNT(T2.award_id) FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE T2.year = 1999 AND T2.result = 'Nominee' AND T1.episode = 20 AND T2.organization = 'Primetime Emmy Awards' AND T1.series = 'Law and Order'",
    "predicted_sql": "SELECT COUNT(T2.episode_id) FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE T1.episode_id = 'Law & Order: Special Victims Unit' AND T2.year = 1999 AND T2.award_category = 'Primetime Emmy Award' AND T2.episode_id = '20'"
  },
  {
    "idx": 114,
    "relevant_table_schema": {
      "credit": {
        "columns": [
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(person_id) references Person(person_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "credited",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "person_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height_meters",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many roles did Julia Roberts play in the series?",
    "gold_sql": "SELECT COUNT(T1.role) FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T2.name = 'Julia Roberts'",
    "predicted_sql": "SELECT COUNT(T1.role) FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T2.name = 'Julia Roberts' AND T1.category = 'series'"
  },
  {
    "idx": 115,
    "relevant_table_schema": {
      "award": {
        "columns": [
          {
            "field": "award_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "series",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(person_id) references Person(person_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "result",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which episodes of the Law & Order have been nominated for the Primetime Emmy Awards?",
    "gold_sql": "SELECT DISTINCT episode_id FROM Award WHERE award_category = 'Primetime Emmy'",
    "predicted_sql": "SELECT DISTINCT T1.episode_id FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.award_category = 'Outstanding Episodic Drama Series' AND T1.result = 'Nominee' AND T2.series = 'Law & Order'"
  },
  {
    "idx": 116,
    "relevant_table_schema": {
      "credit": {
        "columns": [
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(person_id) references Person(person_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "credited",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "person_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height_meters",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What are the names of the person that were not credited at the end of episode tt0629391?",
    "gold_sql": "SELECT T2.name FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T1.credited = 'false' AND T1.episode_id = 'tt0629391'",
    "predicted_sql": "SELECT T2.name FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T1.credited = 'false' AND T1.episode_id = 'tt0629391'"
  },
  {
    "idx": 117,
    "relevant_table_schema": {
      "person": {
        "columns": [
          {
            "field": "person_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height_meters",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "award": {
        "columns": [
          {
            "field": "award_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "series",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(person_id) references Person(person_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "result",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many people have won at least 3 awards?",
    "gold_sql": "SELECT COUNT(T1.person_id) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.result = 'Winner' GROUP BY T1.person_id HAVING COUNT(T2.award_id) >= 3",
    "predicted_sql": "SELECT COUNT(T1.person_id) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.result = 'Winner' GROUP BY T1.person_id HAVING COUNT(T2.award_id) >= 3"
  },
  {
    "idx": 118,
    "relevant_table_schema": {
      "episode": {
        "columns": [
          {
            "field": "episode_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "series",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "number_in_series",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "air_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode_image",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the title of the 3 worst rated episodes?",
    "gold_sql": "SELECT title FROM Episode ORDER BY rating LIMIT 3",
    "predicted_sql": "SELECT title FROM Episode WHERE rating = ( SELECT MIN(rating) FROM Episode )"
  },
  {
    "idx": 119,
    "relevant_table_schema": {
      "vote": {
        "columns": [
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "stars",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "episode": {
        "columns": [
          {
            "field": "episode_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "series",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "number_in_series",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "air_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode_image",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the difference of 10 stars votes between the first episode and the last episode?",
    "gold_sql": "SELECT SUM(CASE WHEN T2.episode = 24 THEN T1.votes ELSE 0 END) - SUM(CASE WHEN T2.episode = 1 THEN T1.votes ELSE 0 END) FROM Vote AS T1 INNER JOIN Episode AS T2 ON T2.episode_id = T1.episode_id WHERE T1.stars = 10",
    "predicted_sql": "SELECT SUM(CASE WHEN t1.episode_id = '1' THEN t1.votes ELSE 0 END) - SUM(CASE WHEN t1.episode_id = '10' THEN t1.votes ELSE 0 END) FROM Vote AS t1 INNER JOIN Episode AS t2 ON t1.episode_id = t2.episode_id"
  },
  {
    "idx": 120,
    "relevant_table_schema": {
      "all_prevalences": {
        "columns": [
          {
            "field": "ITEM",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "POPULATION TYPE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OCCURRENCES",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "POPULATION COUNT",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PREVALENCE RATE",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PREVALENCE PERCENTAGE",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "conditions": {
        "columns": [
          {
            "field": "START",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "STOP",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(PATIENT) references patients(patient)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ENCOUNTER) references encounters(ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CODE",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(DESCRIPTION) references all_prevalences(ITEM)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "What is the code of the prevalent disease with the highest occurrences?",
    "gold_sql": "SELECT T2.code FROM all_prevalences AS T1 INNER JOIN conditions AS T2 ON T1.ITEM = T2.DESCRIPTION ORDER BY T1.OCCURRENCES DESC LIMIT 1",
    "predicted_sql": "SELECT T1.ITEM FROM all_prevalences AS T1 INNER JOIN conditions AS T2 ON T1.ITEM = T2.DESCRIPTION GROUP BY T1.ITEM ORDER BY T1.OCCURRENCES DESC LIMIT 1"
  },
  {
    "idx": 121,
    "relevant_table_schema": {
      "patients": {
        "columns": [
          {
            "field": "patient",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "drivers",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "passport",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "prefix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maiden",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "marital",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "observations": {
        "columns": [
          {
            "field": "DATE",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(PATIENT) references patients(patient)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ENCOUNTER) references encounters(ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CODE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DESCRIPTION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VALUE",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "UNITS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Indicate the patient's full name with the lowest body mass index in kg/m2.",
    "gold_sql": "SELECT T1.first, T1.last FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Body Mass Index' AND T2.UNITS = 'kg/m2' ORDER BY T2.VALUE LIMIT 1",
    "predicted_sql": "SELECT T1.first, T1.last FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Body mass index' ORDER BY T2.VALUE ASC LIMIT 1"
  },
  {
    "idx": 122,
    "relevant_table_schema": {
      "allergies": {
        "columns": [
          {
            "field": "START",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "STOP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(PATIENT) references patients(patient)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ENCOUNTER) references encounters(ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CODE",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DESCRIPTION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "patients": {
        "columns": [
          {
            "field": "patient",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "drivers",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "passport",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "prefix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maiden",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "marital",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the total number of Asian patients who are allergic to peanuts?",
    "gold_sql": "SELECT COUNT(T2.patient) FROM allergies AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Allergy to peanuts' AND T2.race = 'asian'",
    "predicted_sql": "SELECT COUNT(T1.PATIENT) FROM allergies AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Allergy to peanuts' AND T2.ethnicity = 'Asian'"
  },
  {
    "idx": 123,
    "relevant_table_schema": {
      "procedures": {
        "columns": [
          {
            "field": "DATE",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(PATIENT) references patients(patient)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ENCOUNTER) references encounters(ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CODE",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DESCRIPTION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "REASONCODE",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "REASONDESCRIPTION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many patients on average receive combined chemotherapy and radiation therapy procedures each year?",
    "gold_sql": "SELECT CAST(COUNT(PATIENT) AS REAL) / COUNT(DISTINCT strftime('%Y', DATE)) FROM procedures WHERE DESCRIPTION = 'Combined chemotherapy and radiation therapy (procedure)'",
    "predicted_sql": "SELECT CAST(COUNT(PATIENT) AS REAL) / COUNT(DISTINCT DATE) FROM procedures WHERE DESCRIPTION = 'Combined chemotherapy and radiation therapy'"
  },
  {
    "idx": 124,
    "relevant_table_schema": {
      "careplans": {
        "columns": [
          {
            "field": "ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "START",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "STOP",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(PATIENT) references patients(patient)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ENCOUNTER) references encounters(ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CODE",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DESCRIPTION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "REASONCODE",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "REASONDESCRIPTION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "patients": {
        "columns": [
          {
            "field": "patient",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "drivers",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "passport",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "prefix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maiden",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "marital",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the care plan for the patient with social security number 999-15-3685?",
    "gold_sql": "SELECT DISTINCT T1.DESCRIPTION FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.ssn = '999-15-3685'",
    "predicted_sql": "SELECT T1.DESCRIPTION FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.ssn = '999-15-3685'"
  },
  {
    "idx": 125,
    "relevant_table_schema": {
      "patients": {
        "columns": [
          {
            "field": "patient",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "drivers",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "passport",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "prefix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maiden",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "marital",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "encounters": {
        "columns": [
          {
            "field": "ID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "DATE",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(PATIENT) references patients(patient)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CODE",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DESCRIPTION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "REASONCODE",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "REASONDESCRIPTION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List down the first name of patients who encountered normal pregnancy.",
    "gold_sql": "SELECT DISTINCT T1.first FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T2.REASONDESCRIPTION = 'Normal pregnancy'",
    "predicted_sql": "SELECT T1.first FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'Normal Pregnancy'"
  },
  {
    "idx": 126,
    "relevant_table_schema": {
      "patients": {
        "columns": [
          {
            "field": "patient",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "drivers",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "passport",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "prefix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maiden",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "marital",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "conditions": {
        "columns": [
          {
            "field": "START",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "STOP",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(PATIENT) references patients(patient)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ENCOUNTER) references encounters(ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CODE",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(DESCRIPTION) references all_prevalences(ITEM)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "For how long did Elly Koss's cystitis last?",
    "gold_sql": "SELECT strftime('%J', T2.STOP) - strftime('%J', T2.START) AS days FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.description = 'Cystitis'",
    "predicted_sql": "SELECT T2.STOP - T2.START FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.DESCRIPTION = 'Cystitis'"
  },
  {
    "idx": 127,
    "relevant_table_schema": {
      "allergies": {
        "columns": [
          {
            "field": "START",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "STOP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(PATIENT) references patients(patient)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ENCOUNTER) references encounters(ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CODE",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DESCRIPTION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many patients are allergic to eggs?",
    "gold_sql": "SELECT COUNT(PATIENT) FROM allergies WHERE DESCRIPTION = 'Allergy to eggs'",
    "predicted_sql": "SELECT COUNT(PATIENT) FROM allergies WHERE DESCRIPTION = 'Allergy to eggs'"
  },
  {
    "idx": 128,
    "relevant_table_schema": {
      "patients": {
        "columns": [
          {
            "field": "patient",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "drivers",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "passport",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "prefix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maiden",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "marital",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "medications": {
        "columns": [
          {
            "field": "START",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "STOP",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(PATIENT) references patients(patient)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ENCOUNTER) references encounters(ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CODE",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DESCRIPTION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "REASONCODE",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "REASONDESCRIPTION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Why did Elly Koss need to take Acetaminophen?",
    "gold_sql": "SELECT T2.REASONDESCRIPTION FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.description LIKE 'Acetaminophen%'",
    "predicted_sql": "SELECT T2.DESCRIPTION FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.DESCRIPTION = 'Acetaminophen'"
  },
  {
    "idx": 129,
    "relevant_table_schema": {
      "patients": {
        "columns": [
          {
            "field": "patient",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "drivers",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "passport",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "prefix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maiden",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "marital",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ethnicity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "immunizations": {
        "columns": [
          {
            "field": "DATE",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(PATIENT) references patients(patient)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ENCOUNTER) references encounters(ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CODE",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DESCRIPTION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Give me the immunization codes and dates on which Ms. Jacquelyn Shanahan was immunized with influenza seasonal injectable preservative-free vaccine.",
    "gold_sql": "SELECT DISTINCT T2.CODE, T2.DATE FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Ms.' AND T1.first = 'Jacquelyn' AND T1.last = 'Shanahan' AND T2.DESCRIPTION = 'Influenza  seasonal  injectable  preservative free'",
    "predicted_sql": "SELECT DISTINCT T2.CODE, T2.DATE FROM patients AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Jacquelyn' AND T1.last = 'Shanahan' AND T2.DESCRIPTION = 'Influenza seasonal injectable preservative-free vaccine'"
  },
  {
    "idx": 130,
    "relevant_table_schema": {
      "orders": {
        "columns": [
          {
            "field": "orderNumber",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "orderDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "requiredDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shippedDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "comments",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(customerNumber) references customers(customerNumber)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "orderdetails": {
        "columns": [
          {
            "field": "orderNumber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "productCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "quantityOrdered",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "priceEach",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "orderLineNumber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "products": {
        "columns": [
          {
            "field": "productCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "productName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(productLine) references productlines(productLine)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "productScale",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "productVendor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "productDescription",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "quantityInStock",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "buyPrice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MSRP",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many motorcycles have been ordered in 2004?",
    "gold_sql": "SELECT SUM(t2.quantityOrdered) FROM orders AS t1 INNER JOIN orderdetails AS t2 ON t1.orderNumber = t2.orderNumber INNER JOIN products AS t3 ON t2.productCode = t3.productCode WHERE t3.productLine = 'motorcycles' AND STRFTIME('%Y', t1.orderDate) = '2004'",
    "predicted_sql": "SELECT SUM(IF(SUBSTR(T1.orderDate, -4) = '2004', 1, 0)) FROM orders AS T1 INNER JOIN orderdetails AS T2 ON T1.orderNumber = T2.orderNumber INNER JOIN products AS T3 ON T2.productCode = T3.productCode WHERE T3.productName = 'Motorcycle'"
  },
  {
    "idx": 131,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "customerNumber",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "customerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contactLastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contactFirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "addressLine1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "addressLine2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postalCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(salesRepEmployeeNumber) references employees(employeeNumber)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "creditLimit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "orders": {
        "columns": [
          {
            "field": "orderNumber",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "orderDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "requiredDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shippedDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "comments",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(customerNumber) references customers(customerNumber)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "How many countries from the USA have an In Process order status?",
    "gold_sql": "SELECT COUNT(t2.orderNumber) FROM customers AS t1 INNER JOIN orders AS t2 ON t1.customerNumber = t2.customerNumber WHERE t2.status = 'On Hold' AND t1.country = 'USA'",
    "predicted_sql": "SELECT COUNT(T1.country) FROM customers AS T1 INNER JOIN orders AS T2 ON T1.customerNumber = T2.customerNumber WHERE T2.status = 'In Process' AND T1.country != 'USA'"
  },
  {
    "idx": 132,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "customerNumber",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "customerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contactLastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contactFirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "addressLine1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "addressLine2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postalCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(salesRepEmployeeNumber) references employees(employeeNumber)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "creditLimit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the German customers, how many of the them has credit limit of zero?",
    "gold_sql": "SELECT COUNT(customerNumber) FROM customers WHERE creditLimit = 0 AND country = 'Germany'",
    "predicted_sql": "SELECT COUNT(customernumber) FROM customers WHERE creditLimit = 0 AND country = 'GERMANY'"
  },
  {
    "idx": 133,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "customerNumber",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "customerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contactLastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contactFirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "addressLine1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "addressLine2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postalCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(salesRepEmployeeNumber) references employees(employeeNumber)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "creditLimit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "payments": {
        "columns": [
          {
            "field": "foreign key(customerNumber) references customers(customerNumber)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "checkNumber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "paymentDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "amount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the percentage of the payment amount in 2004 was made by Atelier graphique?",
    "gold_sql": "SELECT SUM(CASE WHEN t1.customerName = 'Atelier graphique' THEN t2.amount ELSE 0 END) * 100 / SUM(t2.amount) FROM customers AS t1 INNER JOIN payments AS t2 ON t1.customerNumber = t2.customerNumber WHERE STRFTIME('%Y', t2.paymentDate) = '2004'",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN strftime('%Y', T2.paymentDate) = '2004' AND T1.customerName = 'Atelier graphique' THEN T2.amount ELSE 0 END) AS REAL) * 100 / SUM(T1.creditLimit) FROM customers AS T1 INNER JOIN payments AS T2 ON T1.customerNumber = T2.customerNumber"
  },
  {
    "idx": 134,
    "relevant_table_schema": {
      "employees": {
        "columns": [
          {
            "field": "employeeNumber",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "lastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "extension",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(officeCode) references offices(officeCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(reportsTo) references employees(employeeNumber)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "jobTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How do I contact the President of the company?",
    "gold_sql": "SELECT t.email FROM employees t WHERE t.jobTitle = 'President'",
    "predicted_sql": "SELECT T1.firstName, T1.lastName FROM employees AS T1 WHERE T1.employeeNumber = ( SELECT reportsTo FROM employees WHERE firstName = 'George' AND lastName = 'Bush' )"
  },
  {
    "idx": 135,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "customerNumber",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "customerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contactLastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contactFirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "addressLine1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "addressLine2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postalCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(salesRepEmployeeNumber) references employees(employeeNumber)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "creditLimit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "employees": {
        "columns": [
          {
            "field": "employeeNumber",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "lastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "extension",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(officeCode) references offices(officeCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(reportsTo) references employees(employeeNumber)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "jobTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the phone numbers of the top 3 customers that have the highest credit limit and have Leslie Jennings as their sales representitive.",
    "gold_sql": "SELECT t1.phone FROM customers AS t1 INNER JOIN employees AS t2 ON t1.salesRepEmployeeNumber = t2.employeeNumber WHERE t2.firstName = 'Leslie' AND t2.lastName = 'Jennings' ORDER BY t1.creditLimit DESC LIMIT 3",
    "predicted_sql": "SELECT t1.phone FROM customers AS t1 INNER JOIN employees AS t2 ON t1.salesRepEmployeeNumber = t2.employeeNumber WHERE t2.firstName = 'Leslie' AND t2.lastName = 'Jennings' ORDER BY t1.creditLimit DESC LIMIT 3"
  },
  {
    "idx": 136,
    "relevant_table_schema": {
      "employees": {
        "columns": [
          {
            "field": "employeeNumber",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "lastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "extension",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(officeCode) references offices(officeCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(reportsTo) references employees(employeeNumber)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "jobTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "offices": {
        "columns": [
          {
            "field": "officeCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "addressLine1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "addressLine2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postalCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "territory",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Determine the email and Code of employee who are working at United State, state CA",
    "gold_sql": "SELECT T1.email, T1.employeeNumber FROM employees AS T1 INNER JOIN offices AS T2 ON T1.officeCode = T2.officeCode WHERE T2.country = 'USA' AND T2.state = 'CA' GROUP BY T1.email, T1.officeCode",
    "predicted_sql": "SELECT T1.email, T1.employeeNumber FROM employees AS T1  INNER JOIN offices AS T2  ON T1.officeCode = T2.officeCode WHERE T2.state = 'CA' AND T2.country = 'United States'"
  },
  {
    "idx": 137,
    "relevant_table_schema": {
      "payments": {
        "columns": [
          {
            "field": "foreign key(customerNumber) references customers(customerNumber)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "checkNumber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "paymentDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "amount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "customers": {
        "columns": [
          {
            "field": "customerNumber",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "customerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contactLastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contactFirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "addressLine1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "addressLine2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postalCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(salesRepEmployeeNumber) references employees(employeeNumber)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "creditLimit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average, highest and lowest annual payments collected between 1/1/2003 to 12/31/2005?",
    "gold_sql": "SELECT CAST(SUM(T1.amount) AS REAL) / 3, MAX(T1.amount) , MIN(T1.amount) FROM payments AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE T1.paymentDate BETWEEN '2003-01-01' AND '2005-12-31'",
    "predicted_sql": "SELECT AVG(T1.amount), MAX(T1.amount), MIN(T1.amount) FROM payments AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE T1.paymentDate BETWEEN '2003-01-01' AND '2005-12-31'"
  },
  {
    "idx": 138,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "customerNumber",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "customerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contactLastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contactFirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "addressLine1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "addressLine2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postalCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(salesRepEmployeeNumber) references employees(employeeNumber)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "creditLimit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "employees": {
        "columns": [
          {
            "field": "employeeNumber",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "lastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "extension",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(officeCode) references offices(officeCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(reportsTo) references employees(employeeNumber)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "jobTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many customers have an employee who reports to William Patterson as their sales representitive?",
    "gold_sql": "SELECT COUNT(t1.customerNumber) FROM customers AS t1 INNER JOIN employees AS t2 ON t1.salesRepEmployeeNumber = t2.employeeNumber WHERE t2.firstName = 'William' AND t2.lastName = 'Patterson'",
    "predicted_sql": "SELECT COUNT(T1.customerNumber) FROM customers AS T1 INNER JOIN employees AS T2 ON T1.salesRepEmployeeNumber = T2.employeeNumber WHERE T2.reportsTo = ( SELECT employeeNumber FROM employees WHERE firstName = 'William' AND lastName = 'Patterson' )"
  },
  {
    "idx": 139,
    "relevant_table_schema": {
      "orderdetails": {
        "columns": [
          {
            "field": "orderNumber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "productCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "quantityOrdered",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "priceEach",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "orderLineNumber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the total price of the order 10100?",
    "gold_sql": "SELECT SUM(t.priceEach * t.quantityOrdered) FROM orderdetails t WHERE t.orderNumber = '10100'",
    "predicted_sql": "SELECT SUM(T1.quantityOrdered * T1.priceEach) FROM orders AS T1 INNER JOIN orderdetails AS T2 ON T1.orderNumber = T2.orderNumber WHERE T2.orderNumber = 10100"
  },
  {
    "idx": 140,
    "relevant_table_schema": {
      "generalinfo": {
        "columns": [
          {
            "field": "id_restaurant",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "label",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "food_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(city) references geographic(city)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "review",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "geographic": {
        "columns": [
          {
            "field": "city",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In which regions are there no pizza restaurants?",
    "gold_sql": "SELECT DISTINCT T2.region FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.food_type = 'pizza' AND T2.region != 'unknown'",
    "predicted_sql": "SELECT T2.region FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.food_type != 'pizza' GROUP BY T2.region HAVING COUNT(T2.region) = 0"
  },
  {
    "idx": 141,
    "relevant_table_schema": {
      "location": {
        "columns": [
          {
            "field": "id_restaurant",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(id_restaurant) references generalinfo(id_restaurant)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "street_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "street_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(city) references geographic(city)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "generalinfo": {
        "columns": [
          {
            "field": "id_restaurant",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "label",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "food_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(city) references geographic(city)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "review",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the restaurants located on the street number ranges from 1000 to 2000, what is the percentage of Afghani restaurants are there?",
    "gold_sql": "SELECT CAST(SUM(IIF(T2.food_type = 'afghani', 1, 0)) AS REAL) * 100 / COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE 1000 <= T1.street_num <= 2000",
    "predicted_sql": "SELECT CAST(COUNT(CASE WHEN T2.food_type = 'Afghan' THEN T1.id_restaurant ELSE NULL END) AS REAL) * 100 / COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.street_num BETWEEN 1000 AND 2000"
  },
  {
    "idx": 142,
    "relevant_table_schema": {
      "geographic": {
        "columns": [
          {
            "field": "city",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "generalinfo": {
        "columns": [
          {
            "field": "id_restaurant",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "label",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "food_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(city) references geographic(city)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "review",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What type of restaurant is most common in Monterey county?",
    "gold_sql": "SELECT T2.food_type FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.county = 'Monterey' GROUP BY T2.food_type ORDER BY COUNT(T2.food_type) DESC LIMIT 1",
    "predicted_sql": "SELECT T2.food_type FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.county = 'Monterey' GROUP BY T2.food_type ORDER BY COUNT(T2.food_type) DESC LIMIT 1"
  },
  {
    "idx": 143,
    "relevant_table_schema": {
      "geographic": {
        "columns": [
          {
            "field": "city",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "generalinfo": {
        "columns": [
          {
            "field": "id_restaurant",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "label",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "food_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(city) references geographic(city)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "review",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many Indian restaurants are there in the Los Angeles area?",
    "gold_sql": "SELECT COUNT(T1.city) FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T2.food_type = 'indian' AND T1.region = 'los angeles area'",
    "predicted_sql": "SELECT COUNT(T2.id_restaurant) FROM geographic AS T1 INNER JOIN generalinfo AS T2 ON T1.city = T2.city WHERE T1.city = 'Los Angeles' AND T2.label = 'Indian'"
  },
  {
    "idx": 144,
    "relevant_table_schema": {
      "generalinfo": {
        "columns": [
          {
            "field": "id_restaurant",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "label",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "food_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(city) references geographic(city)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "review",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "id_restaurant",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(id_restaurant) references generalinfo(id_restaurant)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "street_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "street_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(city) references geographic(city)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "What are the restaurants that are located at \"19th St. Oakland\"?",
    "gold_sql": "SELECT T1.id_restaurant FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.city = 'Oakland' AND T2.street_name = '19th St'",
    "predicted_sql": "SELECT T1.label FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.street_name = '19th St. Oakland'"
  },
  {
    "idx": 145,
    "relevant_table_schema": {
      "generalinfo": {
        "columns": [
          {
            "field": "id_restaurant",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "label",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "food_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(city) references geographic(city)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "review",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "id_restaurant",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(id_restaurant) references generalinfo(id_restaurant)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "street_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "street_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(city) references geographic(city)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "On which streets in the city of San Francisco are there restaurants with a review of 1.7?",
    "gold_sql": "SELECT T2.street_name FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.city = 'san francisco' AND T1.review = 1.7",
    "predicted_sql": "SELECT T2.street_name FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.review = 1.7 AND T1.city = 'San Francisco'"
  },
  {
    "idx": 146,
    "relevant_table_schema": {
      "location": {
        "columns": [
          {
            "field": "id_restaurant",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(id_restaurant) references generalinfo(id_restaurant)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "street_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "street_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(city) references geographic(city)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "generalinfo": {
        "columns": [
          {
            "field": "id_restaurant",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "label",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "food_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(city) references geographic(city)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "review",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the review and label of the restaurants in Mission Blvd., Hayward.",
    "gold_sql": "SELECT T2.review, T2.label FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.city = 'hayward' AND T1.street_name = 'mission blvd'",
    "predicted_sql": "SELECT T2.review, T2.label FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.street_name = 'Mission Blvd.' AND T1.city = 'Hayward'"
  },
  {
    "idx": 147,
    "relevant_table_schema": {
      "generalinfo": {
        "columns": [
          {
            "field": "id_restaurant",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "label",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "food_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(city) references geographic(city)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "review",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "geographic": {
        "columns": [
          {
            "field": "city",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Identify all the restaurants in Marin County by their id.",
    "gold_sql": "SELECT T1.id_restaurant FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'marin county'",
    "predicted_sql": "SELECT T1.id_restaurant FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'marin county'"
  },
  {
    "idx": 148,
    "relevant_table_schema": {
      "generalinfo": {
        "columns": [
          {
            "field": "id_restaurant",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "label",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "food_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(city) references geographic(city)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "review",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many restaurants in the city of Richmond serve Mediterranean food?",
    "gold_sql": "SELECT COUNT(id_restaurant) FROM generalinfo WHERE food_type = 'mediterranean' AND city = 'richmond'",
    "predicted_sql": "SELECT COUNT(id_restaurant) FROM generalinfo WHERE city = 'Richmond' AND food_type = 'Mediterranean'"
  },
  {
    "idx": 149,
    "relevant_table_schema": {
      "location": {
        "columns": [
          {
            "field": "id_restaurant",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(id_restaurant) references generalinfo(id_restaurant)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "street_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "street_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(city) references geographic(city)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Among the restaurants on street number below 1000, how many of them are in Railroad St.?",
    "gold_sql": "SELECT COUNT(city) FROM location WHERE street_name = 'railroad' AND street_num < 1000",
    "predicted_sql": "SELECT COUNT(*) FROM location WHERE street_num < 1000 AND street_name = 'Railroad St'"
  },
  {
    "idx": 150,
    "relevant_table_schema": {
      "batsman_scored": {
        "columns": [
          {
            "field": "foreign key(Match_Id) references Match(Match_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Over_Id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ball_Id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Runs_Scored",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Innings_No",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Between match nos. 335989 and 337000, how many times did a batsman score more than 3 runs during over no. 1, ball no. 1, and inning no. 1 of the matches?",
    "gold_sql": "SELECT SUM(CASE WHEN Runs_Scored > 3 THEN 1 ELSE 0 END) FROM Batsman_Scored WHERE 335989 < Match_Id < 337000 AND Innings_No = 1 AND Over_Id = 1 AND Ball_Id = 1",
    "predicted_sql": "SELECT COUNT(Match_Id) FROM Batsman_Scored WHERE Over_Id = 1 AND Ball_Id = 1 AND Innings_No = 1 AND Runs_Scored > 3 AND Match_Id BETWEEN 335989 AND 337000"
  },
  {
    "idx": 151,
    "relevant_table_schema": {
      "city": {
        "columns": [
          {
            "field": "City_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "City_Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "Country_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Country_Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the cities located in U.A.E.",
    "gold_sql": "SELECT T1.City_Name FROM City AS T1 INNER JOIN Country AS T2 ON T2.Country_Id = T1.Country_id WHERE T2.Country_Name = 'U.A.E'",
    "predicted_sql": "SELECT T1.City_Name FROM city AS T1 INNER JOIN country AS T2 ON T1.Country_id = T2.Country_Id WHERE T2.Country_Name = 'United Arab Emirates'"
  },
  {
    "idx": 152,
    "relevant_table_schema": {
      "player": {
        "columns": [
          {
            "field": "Player_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Player_Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DOB",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Batting_hand) references Batting_Style(Batting_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Bowling_skill) references Bowling_Style(Bowling_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Country_Name) references Country(Country_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "season": {
        "columns": [
          {
            "field": "Season_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Man_of_the_Series",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Orange_Cap",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Purple_Cap",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Season_Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Who among the players won both \"Man of the Series\" and \"Orange Cap\" in the same season?",
    "gold_sql": "SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Season AS T2 ON T1.Player_Id = T2.Man_of_the_Series = T2.Orange_Cap",
    "predicted_sql": "SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Season AS T2 ON T1.Player_Id = T2.Man_of_the_Series = T2.Orange_Cap"
  },
  {
    "idx": 153,
    "relevant_table_schema": {
      "player": {
        "columns": [
          {
            "field": "Player_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Player_Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DOB",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Batting_hand) references Batting_Style(Batting_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Bowling_skill) references Bowling_Style(Bowling_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Country_Name) references Country(Country_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "bowling_style": {
        "columns": [
          {
            "field": "Bowling_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Bowling_skill",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many players bowl in the legbreak style?",
    "gold_sql": "SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Bowling_Style AS T2 ON T1.Bowling_skill = T2.Bowling_Id WHERE T2.Bowling_skill = 'Legbreak'",
    "predicted_sql": "SELECT COUNT(T1.Player_Name) FROM Player AS T1 INNER JOIN Bowling_Style AS T2 ON T2.Bowling_Id = T1.Bowling_skill WHERE T2.Bowling_skill = 'Legbreak'"
  },
  {
    "idx": 154,
    "relevant_table_schema": {
      "match": {
        "columns": [
          {
            "field": "Match_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Team_1) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Team_2) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Match_Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Season_Id) references Season(Season_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Venue_Id) references Venue(Venue_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Toss_Winner) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Toss_Decide) references Toss_Decision(Toss_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Win_Type) references Win_By(Win_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Win_Margin",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Outcome_type) references Out_Type(Out_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Match_Winner) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Man_of_the_Match) references Player(Player_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "player_match": {
        "columns": [
          {
            "field": "foreign key(Match_Id) references Match(Match_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Player_Id) references Player(Player_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Role_Id) references Rolee(Role_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Team_Id) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "player": {
        "columns": [
          {
            "field": "Player_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Player_Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DOB",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Batting_hand) references Batting_Style(Batting_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Bowling_skill) references Bowling_Style(Bowling_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Country_Name) references Country(Country_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "List all the names of the winning team's players in the first match of season 1.",
    "gold_sql": "SELECT T3.Player_Name FROM `Match` AS T1 INNER JOIN Player_Match AS T2 ON T1.Match_Winner = T2.Team_Id INNER JOIN Player AS T3 ON T2.Player_Id = T3.Player_Id WHERE T1.Season_Id = 1 ORDER BY T1.Match_Date LIMIT 1",
    "predicted_sql": "SELECT T3.Player_Name FROM Match AS T1 INNER JOIN Player_Match AS T2 ON T1.Match_Id = T2.Match_Id INNER JOIN Player AS T3 ON T2.Player_Id = T3.Player_Id WHERE T1.Season_Id = 1 AND T1.Match_Date = '2001-03-23' AND T1.Match_Winner = T1.Team_1"
  },
  {
    "idx": 155,
    "relevant_table_schema": {
      "player": {
        "columns": [
          {
            "field": "Player_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Player_Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DOB",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Batting_hand) references Batting_Style(Batting_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Bowling_skill) references Bowling_Style(Bowling_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Country_Name) references Country(Country_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "match": {
        "columns": [
          {
            "field": "Match_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Team_1) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Team_2) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Match_Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Season_Id) references Season(Season_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Venue_Id) references Venue(Venue_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Toss_Winner) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Toss_Decide) references Toss_Decision(Toss_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Win_Type) references Win_By(Win_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Win_Margin",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Outcome_type) references Out_Type(Out_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Match_Winner) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Man_of_the_Match) references Player(Player_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "season": {
        "columns": [
          {
            "field": "Season_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Man_of_the_Series",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Orange_Cap",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Purple_Cap",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Season_Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Who got the Man of the Series Award in 2010?",
    "gold_sql": "SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Match AS T2 ON T2.Man_of_the_Match = T1.Player_Id INNER JOIN Season AS T3 ON T3.Season_Id = T2.Season_Id WHERE T3.Season_Year = 2010 GROUP BY T1.Player_Name",
    "predicted_sql": "SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Match AS T2 ON T1.Player_Id = T2.Man_of_the_Match INNER JOIN Season AS T3 ON T2.Season_Id = T3.Season_Id WHERE T3.Season_Year = 2010"
  },
  {
    "idx": 156,
    "relevant_table_schema": {
      "match": {
        "columns": [
          {
            "field": "Match_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Team_1) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Team_2) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Match_Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Season_Id) references Season(Season_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Venue_Id) references Venue(Venue_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Toss_Winner) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Toss_Decide) references Toss_Decision(Toss_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Win_Type) references Win_By(Win_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Win_Margin",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Outcome_type) references Out_Type(Out_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Match_Winner) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Man_of_the_Match) references Player(Player_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "List down the ID of toss winners who decided to bat after winning the \"toss of the coin\".",
    "gold_sql": "SELECT Toss_Winner FROM Match WHERE Toss_Decide = 2",
    "predicted_sql": "SELECT T1.Team_1 FROM Match AS T1 WHERE T1.Toss_Decide = 1 AND T1.Win_Type = 1"
  },
  {
    "idx": 157,
    "relevant_table_schema": {
      "player": {
        "columns": [
          {
            "field": "Player_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Player_Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DOB",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Batting_hand) references Batting_Style(Batting_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Bowling_skill) references Bowling_Style(Bowling_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Country_Name) references Country(Country_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "batting_style": {
        "columns": [
          {
            "field": "Batting_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Batting_hand",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many players bat with their left hands?",
    "gold_sql": "SELECT SUM(CASE WHEN T2.Batting_hand = 'Left-hand bat' THEN 1 ELSE 0 END) FROM Player AS T1 INNER JOIN Batting_Style AS T2 ON T1.Batting_hand = T2.Batting_Id",
    "predicted_sql": "SELECT COUNT(T1.Player_Name) FROM Player AS T1 INNER JOIN Batting_Style AS T2 ON T1.Batting_hand = T2.Batting_Id WHERE T2.Batting_hand = 'Left-handed'"
  },
  {
    "idx": 158,
    "relevant_table_schema": {
      "match": {
        "columns": [
          {
            "field": "Match_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Team_1) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Team_2) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Match_Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Season_Id) references Season(Season_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Venue_Id) references Venue(Venue_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Toss_Winner) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Toss_Decide) references Toss_Decision(Toss_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Win_Type) references Win_By(Win_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Win_Margin",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Outcome_type) references Out_Type(Out_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Match_Winner) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Man_of_the_Match) references Player(Player_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "team": {
        "columns": [
          {
            "field": "Team_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Team_Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List down the name of teams that won the toss of the coin from matches with ID from 336010 to 336020.",
    "gold_sql": "SELECT T2.Team_Name FROM Match AS T1 INNER JOIN Team AS T2 ON T2.Team_Id = T1.Toss_Winner WHERE T1.Match_Id BETWEEN 336010 AND 336020",
    "predicted_sql": "SELECT T2.Team_Name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.Team_1 = T2.Team_Id WHERE T1.Match_Id BETWEEN 336010 AND 336020 AND T1.Toss_Winner = T2.Team_Id"
  },
  {
    "idx": 159,
    "relevant_table_schema": {
      "player_match": {
        "columns": [
          {
            "field": "foreign key(Match_Id) references Match(Match_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Player_Id) references Player(Player_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Role_Id) references Rolee(Role_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Team_Id) references Team(Team_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "rolee": {
        "columns": [
          {
            "field": "Role_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Role_Desc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "player": {
        "columns": [
          {
            "field": "Player_Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Player_Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DOB",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Batting_hand) references Batting_Style(Batting_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Bowling_skill) references Bowling_Style(Bowling_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Country_Name) references Country(Country_Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "State the name of captain keeper of the match no.419117.",
    "gold_sql": "SELECT T3.Player_Name FROM Player_Match AS T1 INNER JOIN Rolee AS T2 ON T1.Role_Id = T2.Role_Id INNER JOIN Player AS T3 ON T1.Player_Id = T3.Player_Id WHERE T1.Match_Id = '419117' AND T2.Role_Desc = 'CaptainKeeper'",
    "predicted_sql": "SELECT T3.Player_Name FROM Player_Match AS T1 INNER JOIN Rolee AS T2 ON T1.Role_Id = T2.Role_Id INNER JOIN Player AS T3 ON T1.Player_Id = T3.Player_Id WHERE T1.Match_Id = 419117 AND T2.Role_Desc = 'Captain' AND T1.Team_Id = 1 AND T1.Player_Id = T3.Player_Id"
  },
  {
    "idx": 160,
    "relevant_table_schema": {
      "torrents": {
        "columns": [
          {
            "field": "groupName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "totalSnatched",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "artist",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "releaseType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the releases that have been downloaded for more than 20000 times.",
    "gold_sql": "SELECT groupName FROM torrents WHERE totalSnatched > 20000",
    "predicted_sql": "SELECT groupName FROM torrents WHERE totalSnatched > 20000"
  },
  {
    "idx": 161,
    "relevant_table_schema": {
      "torrents": {
        "columns": [
          {
            "field": "groupName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "totalSnatched",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "artist",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "releaseType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      },
      "tags": {
        "columns": [
          {
            "field": "index",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many singles were released between 1979 and 1981 labeled as \"soul\"?",
    "gold_sql": "SELECT COUNT(T2.tag) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'soul' AND T1.groupYear BETWEEN 1979 AND 1981 AND T1.releaseType LIKE 'single'",
    "predicted_sql": "SELECT COUNT(T2.tag) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'soul' AND T1.groupYear BETWEEN 1979 AND 1981 AND T1.releaseType LIKE 'single'"
  },
  {
    "idx": 162,
    "relevant_table_schema": {
      "torrents": {
        "columns": [
          {
            "field": "groupName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "totalSnatched",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "artist",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "releaseType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Provide the name of the artist who released his or her Single-Table in 2012 with the highest number of downloads. Name the Single-Table title as well.",
    "gold_sql": "SELECT artist, groupName FROM torrents WHERE groupYear = 2012 AND releaseType LIKE 'Single' ORDER BY totalSnatched DESC LIMIT 1",
    "predicted_sql": "SELECT artist, groupName FROM torrents WHERE groupYear = 2012 AND releaseType = 'single' ORDER BY totalSnatched DESC LIMIT 1"
  },
  {
    "idx": 163,
    "relevant_table_schema": {
      "torrents": {
        "columns": [
          {
            "field": "groupName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "totalSnatched",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "artist",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "releaseType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In 1980, how many singles were released by sugar daddy?",
    "gold_sql": "SELECT COUNT(releaseType) FROM torrents WHERE artist LIKE 'sugar daddy' AND releaseType LIKE 'Single' AND groupYear = 1980",
    "predicted_sql": "SELECT COUNT(id) FROM torrents WHERE groupYear = 1980 AND releaseType = 'single' AND artist LIKE 'sugar daddy%'"
  },
  {
    "idx": 164,
    "relevant_table_schema": {
      "torrents": {
        "columns": [
          {
            "field": "groupName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "totalSnatched",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "artist",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "releaseType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      },
      "tags": {
        "columns": [
          {
            "field": "index",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Provide the title, release year and the tag associated with the live album that has the highest number of downloads?",
    "gold_sql": "SELECT T1.groupName, T1.groupYear, T2.tag FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.releaseType = 'live album' ORDER BY T1.totalSnatched DESC LIMIT 1",
    "predicted_sql": "SELECT T1.groupName, T1.groupYear, T2.tag FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.releaseType = 'live album' ORDER BY T1.totalSnatched DESC LIMIT 1"
  },
  {
    "idx": 165,
    "relevant_table_schema": {
      "torrents": {
        "columns": [
          {
            "field": "groupName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "totalSnatched",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "artist",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "releaseType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which artist released singles between 1980 to 1982?",
    "gold_sql": "SELECT artist FROM torrents WHERE groupYear BETWEEN 1980 AND 1982 AND releaseType LIKE 'single'",
    "predicted_sql": "SELECT artist FROM torrents WHERE groupYear BETWEEN 1980 AND 1982 AND releaseType = 'single'"
  },
  {
    "idx": 166,
    "relevant_table_schema": {
      "torrents": {
        "columns": [
          {
            "field": "groupName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "totalSnatched",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "artist",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "releaseType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      },
      "tags": {
        "columns": [
          {
            "field": "index",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many releases by the artist michael jackson are tagged \"pop\"?",
    "gold_sql": "SELECT COUNT(T1.groupName) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'pop' AND T1.artist = 'michael jackson'",
    "predicted_sql": "SELECT COUNT(T2.tag) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'pop' AND T1.artist = 'michael jackson' AND T1.releaseType = 'album'"
  },
  {
    "idx": 167,
    "relevant_table_schema": {
      "torrents": {
        "columns": [
          {
            "field": "groupName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "totalSnatched",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "artist",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "releaseType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      },
      "tags": {
        "columns": [
          {
            "field": "index",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among id from 10 to 50. Which artist tagged as \"new.york\" has the most downloads?",
    "gold_sql": "SELECT T1.artist FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.id BETWEEN 10 AND 50 AND T2.tag LIKE 'new.york' ORDER BY T1.totalSnatched DESC LIMIT 1",
    "predicted_sql": "SELECT T1.artist FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'new.york' AND T1.id BETWEEN 10 AND 50 ORDER BY T1.totalSnatched DESC LIMIT 1"
  },
  {
    "idx": 168,
    "relevant_table_schema": {
      "torrents": {
        "columns": [
          {
            "field": "groupName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "totalSnatched",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "artist",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "releaseType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      },
      "tags": {
        "columns": [
          {
            "field": "index",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which artist has id \"16\"? Provide her or his tag genre.",
    "gold_sql": "SELECT T2.tag FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.id = 16",
    "predicted_sql": "SELECT T1.artist, T2.tag FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.id = 16"
  },
  {
    "idx": 169,
    "relevant_table_schema": {
      "torrents": {
        "columns": [
          {
            "field": "groupName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "totalSnatched",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "artist",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "releaseType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "groupId",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many albums and Single-Tables were released by the artist named '50 cent' between 2010 and 2015?",
    "gold_sql": "SELECT COUNT(id), ( SELECT COUNT(id) FROM torrents WHERE groupYear BETWEEN 2010 AND 2015 AND artist LIKE '50 cent' AND releaseType LIKE 'album' ) FROM torrents WHERE groupYear BETWEEN 2010 AND 2015 AND artist LIKE '50 cent' AND releaseType LIKE 'Single'",
    "predicted_sql": "SELECT COUNT(CASE WHEN releaseType = 'album' THEN 1 ELSE NULL END), COUNT(CASE WHEN releaseType = 'single' THEN 1 ELSE NULL END) FROM torrents WHERE artist = '50 cent' AND groupYear BETWEEN 2010 AND 2015"
  },
  {
    "idx": 170,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "CountryCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ShortName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "TableName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alpha2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyUnit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SpecialNotes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IncomeGroup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Wb2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsBaseYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsReferenceYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SnaPriceValuation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LendingCategory",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OtherGroups",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfNationalAccounts",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AlternativeConversionFactor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PppSurveyYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BalanceOfPaymentsManualInUse",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ExternalDebtReportingStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfTrade",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentAccountingConcept",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ImfDataDisseminationStandard",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestPopulationCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestHouseholdSurvey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceOfMostRecentIncomeAndExpenditureData",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VitalRegistrationComplete",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestAgriculturalCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestIndustrialData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestTradeData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestWaterWithdrawalData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "countrynotes": {
        "columns": [
          {
            "field": "foreign key(Countrycode) references Country(CountryCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Seriescode) references Series(SeriesCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List out the series code and country code of the poor countries that located in Latin American & Carribbean.",
    "gold_sql": "SELECT T2.SeriesCode, T2.CountryCode FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.Region = 'Latin America & Caribbean' AND t1.incomegroup = 'Low income'",
    "predicted_sql": "SELECT DISTINCT T2.Seriescode, T1.CountryCode FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.Region = 'Latin America & Caribbean' AND T2.Description = 'Poverty'"
  },
  {
    "idx": 171,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "CountryCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ShortName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "TableName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alpha2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyUnit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SpecialNotes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IncomeGroup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Wb2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsBaseYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsReferenceYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SnaPriceValuation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LendingCategory",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OtherGroups",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfNationalAccounts",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AlternativeConversionFactor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PppSurveyYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BalanceOfPaymentsManualInUse",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ExternalDebtReportingStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfTrade",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentAccountingConcept",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ImfDataDisseminationStandard",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestPopulationCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestHouseholdSurvey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceOfMostRecentIncomeAndExpenditureData",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VitalRegistrationComplete",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestAgriculturalCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestIndustrialData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestTradeData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestWaterWithdrawalData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "indicators": {
        "columns": [
          {
            "field": "CountryName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CountryCode) references Country(CountryCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "IndicatorName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndicatorCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "By how much did the indicator on Adolescent fertility rate increase from 1960 to 1961 in the country whose Alpha2Code is 1A?",
    "gold_sql": "SELECT ( SELECT T2.Value FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' AND T2.Year = 1961 ) - ( SELECT T2.Value FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' AND T2.Year = 1960 ) DIFF",
    "predicted_sql": "SELECT T2.Value - ( SELECT Value FROM Indicators WHERE Year = 1960 AND CountryCode = '1A' ) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Year = 1961 AND T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 girls ages 10 to 14)'"
  },
  {
    "idx": 172,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "CountryCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ShortName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "TableName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alpha2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyUnit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SpecialNotes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IncomeGroup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Wb2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsBaseYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsReferenceYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SnaPriceValuation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LendingCategory",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OtherGroups",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfNationalAccounts",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AlternativeConversionFactor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PppSurveyYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BalanceOfPaymentsManualInUse",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ExternalDebtReportingStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfTrade",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentAccountingConcept",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ImfDataDisseminationStandard",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestPopulationCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestHouseholdSurvey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceOfMostRecentIncomeAndExpenditureData",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VitalRegistrationComplete",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestAgriculturalCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestIndustrialData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestTradeData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestWaterWithdrawalData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "footnotes": {
        "columns": [
          {
            "field": "foreign key(Countrycode) references Country(CountryCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Seriescode) references Series(SeriesCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Year",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "On which years did Aruba got a footnote on the series code AG.LND.FRST.K2?",
    "gold_sql": "SELECT T2.Year FROM Country AS T1 INNER JOIN FootNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.ShortName = 'Aruba' AND T2.Seriescode = 'AG.LND.FRST.K2'",
    "predicted_sql": "SELECT DISTINCT T2.Year FROM Country AS T1 INNER JOIN Footnotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Seriescode = 'AG.LND.FRST.K2' AND T1.ShortName = 'Aruba'"
  },
  {
    "idx": 173,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "CountryCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ShortName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "TableName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alpha2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyUnit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SpecialNotes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IncomeGroup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Wb2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsBaseYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsReferenceYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SnaPriceValuation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LendingCategory",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OtherGroups",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfNationalAccounts",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AlternativeConversionFactor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PppSurveyYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BalanceOfPaymentsManualInUse",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ExternalDebtReportingStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfTrade",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentAccountingConcept",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ImfDataDisseminationStandard",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestPopulationCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestHouseholdSurvey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceOfMostRecentIncomeAndExpenditureData",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VitalRegistrationComplete",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestAgriculturalCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestIndustrialData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestTradeData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestWaterWithdrawalData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which countries use Euro as their currency? List down the table name.",
    "gold_sql": "SELECT TableName FROM Country WHERE CurrencyUnit = 'Euro'",
    "predicted_sql": "SELECT TableName FROM Country WHERE CurrencyUnit = 'Euro'"
  },
  {
    "idx": 174,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "CountryCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ShortName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "TableName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alpha2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyUnit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SpecialNotes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IncomeGroup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Wb2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsBaseYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsReferenceYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SnaPriceValuation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LendingCategory",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OtherGroups",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfNationalAccounts",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AlternativeConversionFactor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PppSurveyYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BalanceOfPaymentsManualInUse",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ExternalDebtReportingStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfTrade",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentAccountingConcept",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ImfDataDisseminationStandard",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestPopulationCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestHouseholdSurvey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceOfMostRecentIncomeAndExpenditureData",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VitalRegistrationComplete",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestAgriculturalCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestIndustrialData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestTradeData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestWaterWithdrawalData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many countries using the 1993 System of National Accounts methodology?",
    "gold_sql": "SELECT COUNT(CountryCode) FROM Country WHERE SystemOfNationalAccounts = 'Country uses the 1993 System of National Accounts methodology.'",
    "predicted_sql": "SELECT COUNT(CountryCode)  FROM Country WHERE SystemOfNationalAccounts = 'Country uses the 1993 System of National Accounts methodology.'"
  },
  {
    "idx": 175,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "CountryCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ShortName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "TableName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alpha2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyUnit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SpecialNotes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IncomeGroup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Wb2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsBaseYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsReferenceYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SnaPriceValuation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LendingCategory",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OtherGroups",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfNationalAccounts",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AlternativeConversionFactor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PppSurveyYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BalanceOfPaymentsManualInUse",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ExternalDebtReportingStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfTrade",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentAccountingConcept",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ImfDataDisseminationStandard",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestPopulationCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestHouseholdSurvey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceOfMostRecentIncomeAndExpenditureData",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VitalRegistrationComplete",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestAgriculturalCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestIndustrialData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestTradeData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestWaterWithdrawalData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "indicators": {
        "columns": [
          {
            "field": "CountryName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CountryCode) references Country(CountryCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "IndicatorName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndicatorCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "countrynotes": {
        "columns": [
          {
            "field": "foreign key(Countrycode) references Country(CountryCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Seriescode) references Series(SeriesCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What are the sources for the data of children who finished primary school education in North American countries?",
    "gold_sql": "SELECT DISTINCT T3.Description FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode INNER JOIN CountryNotes AS T3 ON T2.CountryCode = T3.Countrycode WHERE T1.Region = 'North America' AND T2.IndicatorName = 'Out-of-school children of primary school age, both sexes (number)'",
    "predicted_sql": "SELECT T3.Description FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode INNER JOIN CountryNotes AS T3 ON T3.Countrycode = T1.CountryCode WHERE T2.IndicatorName = 'Children ages 5-14 years: number (both sexes)' AND T2.Year = 2011 AND T1.Region = 'North America' AND T2.Value = 0"
  },
  {
    "idx": 176,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "CountryCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ShortName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "TableName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alpha2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyUnit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SpecialNotes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IncomeGroup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Wb2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsBaseYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsReferenceYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SnaPriceValuation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LendingCategory",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OtherGroups",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfNationalAccounts",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AlternativeConversionFactor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PppSurveyYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BalanceOfPaymentsManualInUse",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ExternalDebtReportingStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfTrade",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentAccountingConcept",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ImfDataDisseminationStandard",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestPopulationCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestHouseholdSurvey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceOfMostRecentIncomeAndExpenditureData",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VitalRegistrationComplete",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestAgriculturalCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestIndustrialData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestTradeData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestWaterWithdrawalData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "indicators": {
        "columns": [
          {
            "field": "CountryName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CountryCode) references Country(CountryCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "IndicatorName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndicatorCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In which years does the country whose Alpha2Code is 1A have a result of the indicator Adolescent fertility rate?",
    "gold_sql": "SELECT T2.Year FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'",
    "predicted_sql": "SELECT DISTINCT T2.Year FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate'"
  },
  {
    "idx": 177,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "CountryCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ShortName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "TableName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alpha2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyUnit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SpecialNotes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IncomeGroup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Wb2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsBaseYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsReferenceYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SnaPriceValuation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LendingCategory",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OtherGroups",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfNationalAccounts",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AlternativeConversionFactor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PppSurveyYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BalanceOfPaymentsManualInUse",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ExternalDebtReportingStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfTrade",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentAccountingConcept",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ImfDataDisseminationStandard",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestPopulationCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestHouseholdSurvey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceOfMostRecentIncomeAndExpenditureData",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VitalRegistrationComplete",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestAgriculturalCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestIndustrialData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestTradeData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestWaterWithdrawalData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "indicators": {
        "columns": [
          {
            "field": "CountryName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CountryCode) references Country(CountryCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "IndicatorName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndicatorCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the minimum of International migrant stock, total of heavily indebted poor countries?",
    "gold_sql": "SELECT MIN(T2.Value) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.OtherGroups = 'HIPC' AND T2.IndicatorName = 'International migrant stock, total'",
    "predicted_sql": "SELECT MIN(T2.Value) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.ShortName = 'International migrant stock, total of heavily indebted poor countries (annual %)'"
  },
  {
    "idx": 178,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "CountryCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ShortName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "TableName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alpha2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyUnit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SpecialNotes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IncomeGroup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Wb2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsBaseYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsReferenceYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SnaPriceValuation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LendingCategory",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OtherGroups",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfNationalAccounts",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AlternativeConversionFactor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PppSurveyYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BalanceOfPaymentsManualInUse",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ExternalDebtReportingStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfTrade",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentAccountingConcept",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ImfDataDisseminationStandard",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestPopulationCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestHouseholdSurvey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceOfMostRecentIncomeAndExpenditureData",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VitalRegistrationComplete",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestAgriculturalCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestIndustrialData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestTradeData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestWaterWithdrawalData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "indicators": {
        "columns": [
          {
            "field": "CountryName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CountryCode) references Country(CountryCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "IndicatorName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndicatorCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the long name of countries with indicator name in 1980.",
    "gold_sql": "SELECT DISTINCT T1.LongName FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Year = 1980 AND T2.IndicatorName IS NOT NULL",
    "predicted_sql": "SELECT DISTINCT T1.LongName FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Year = 1980 AND T2.IndicatorName = 'Country GDP (annual %)'"
  },
  {
    "idx": 179,
    "relevant_table_schema": {
      "indicators": {
        "columns": [
          {
            "field": "CountryName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CountryCode) references Country(CountryCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "IndicatorName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndicatorCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "CountryCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ShortName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "TableName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alpha2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyUnit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SpecialNotes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IncomeGroup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Wb2Code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsBaseYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NationalAccountsReferenceYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SnaPriceValuation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LendingCategory",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OtherGroups",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfNationalAccounts",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AlternativeConversionFactor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PppSurveyYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BalanceOfPaymentsManualInUse",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ExternalDebtReportingStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SystemOfTrade",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentAccountingConcept",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ImfDataDisseminationStandard",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestPopulationCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestHouseholdSurvey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceOfMostRecentIncomeAndExpenditureData",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VitalRegistrationComplete",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestAgriculturalCensus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestIndustrialData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestTradeData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LatestWaterWithdrawalData",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the short name of the country in which the \"Net bilateral aid flows from DAC donors, Sweden (current US$)\" indicator hit the 570,000 value in 1970?",
    "gold_sql": "SELECT T2.ShortName FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IndicatorName = 'Net bilateral aid flows FROM DAC donors, Sweden (current US$)' AND T1.Year = 1970 AND T1.Value = 570000",
    "predicted_sql": "SELECT T2.ShortName FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Year = 1970 AND T1.Value = 570000 AND T1.IndicatorName = 'Net bilateral aid flows from DAC donors, Sweden (current US$)'"
  },
  {
    "idx": 180,
    "relevant_table_schema": {
      "directors": {
        "columns": [
          {
            "field": "directorid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "d_quality",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_revenue",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movies2directors": {
        "columns": [
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "directorid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "genre",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many directors with average revenue of 4 have made either action or adventure films?",
    "gold_sql": "SELECT COUNT(T1.directorid) FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid WHERE T1.avg_revenue = 4 AND (T2.genre = 'Adventure' OR T2.genre = 'Action')",
    "predicted_sql": "SELECT COUNT(DISTINCT T1.directorid) FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid WHERE T1.avg_revenue = 4 AND T2.genre IN ('Action', 'Adventure')"
  },
  {
    "idx": 181,
    "relevant_table_schema": {
      "u2base": {
        "columns": [
          {
            "field": "userid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movies2actors": {
        "columns": [
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "actorid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cast_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many different actors have played a role in the highest rating movie?",
    "gold_sql": "SELECT COUNT(DISTINCT T2.actorid) FROM u2base AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid WHERE T1.rating = 5",
    "predicted_sql": "SELECT COUNT(DISTINCT T2.actorid) FROM u2base AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid WHERE T1.rating = ( SELECT MAX(rating) FROM u2base )"
  },
  {
    "idx": 182,
    "relevant_table_schema": {
      "movies": {
        "columns": [
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "isEnglish",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "runningtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movies2directors": {
        "columns": [
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "directorid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "genre",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the action movies from the USA, how many of them are not in English?",
    "gold_sql": "SELECT COUNT(T1.movieid) FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.country = 'USA' AND T1.isEnglish = 'F' AND T2.genre = 'Action'",
    "predicted_sql": "SELECT COUNT(T1.movieid) FROM movies AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T2.genre = 'Action' AND T1.country = 'USA' AND T1.isEnglish = 'false'"
  },
  {
    "idx": 183,
    "relevant_table_schema": {
      "u2base": {
        "columns": [
          {
            "field": "userid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movies": {
        "columns": [
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "isEnglish",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "runningtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average rating of the newest movies from France?",
    "gold_sql": "SELECT AVG(T1.rating) FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'france' AND T2.year = 4",
    "predicted_sql": "SELECT AVG(T1.rating) FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'France' ORDER BY T2.year DESC LIMIT 1"
  },
  {
    "idx": 184,
    "relevant_table_schema": {
      "u2base": {
        "columns": [
          {
            "field": "userid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "users": {
        "columns": [
          {
            "field": "userid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "u_gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "occupation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the ID of the movie that has been mostly rated by female users.",
    "gold_sql": "SELECT T1.movieid FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T2.u_gender = 'F' GROUP BY T1.movieid ORDER BY COUNT(T2.userid) DESC LIMIT 1",
    "predicted_sql": "SELECT T1.movieid FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T2.u_gender = 'F' GROUP BY T1.movieid ORDER BY COUNT(T1.userid) DESC LIMIT 1"
  },
  {
    "idx": 185,
    "relevant_table_schema": {
      "movies": {
        "columns": [
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "isEnglish",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "runningtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movies2actors": {
        "columns": [
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "actorid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cast_num",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many American movies have cast number more than 1?",
    "gold_sql": "SELECT COUNT(T2.actorid) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid WHERE T1.country = 'USA' AND T2.cast_num > 1",
    "predicted_sql": "SELECT COUNT(T1.movieid) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid WHERE T2.cast_num > 1 AND T1.country = 'USA'"
  },
  {
    "idx": 186,
    "relevant_table_schema": {
      "movies2directors": {
        "columns": [
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "directorid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "genre",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movies": {
        "columns": [
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "isEnglish",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "runningtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many latest released dramas and action movies?",
    "gold_sql": "SELECT COUNT(T1.movieid) FROM movies2directors AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.year = 4 AND T1.genre IN ('Action', 'drama')",
    "predicted_sql": "SELECT COUNT(T1.movieid) FROM movies2directors AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.year = 4 AND T1.genre IN ('Action', 'drama')"
  },
  {
    "idx": 187,
    "relevant_table_schema": {
      "users": {
        "columns": [
          {
            "field": "userid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "u_gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "occupation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "u2base": {
        "columns": [
          {
            "field": "userid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the movie that has been rated most by 25 years old users.",
    "gold_sql": "SELECT T2.movieid FROM users AS T1 INNER JOIN u2base AS T2 ON T1.userid = T2.userid WHERE T1.age = 25 GROUP BY T2.movieid ORDER BY COUNT(T1.userid) DESC LIMIT 1",
    "predicted_sql": "SELECT T2.movieid FROM users AS T1 INNER JOIN u2base AS T2 ON T1.userid = T2.userid WHERE T1.age = 25 AND T2.rating = 5"
  },
  {
    "idx": 188,
    "relevant_table_schema": {
      "directors": {
        "columns": [
          {
            "field": "directorid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "d_quality",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_revenue",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movies2directors": {
        "columns": [
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "directorid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "genre",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which directors with the best quality directed the most films?",
    "gold_sql": "SELECT T1.directorid FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid WHERE T1.d_quality = 5 GROUP BY T1.directorid ORDER BY COUNT(T2.movieid) DESC LIMIT 1",
    "predicted_sql": "SELECT T1.directorid FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid GROUP BY T1.directorid ORDER BY COUNT(T2.movieid) DESC LIMIT 1"
  },
  {
    "idx": 189,
    "relevant_table_schema": {
      "u2base": {
        "columns": [
          {
            "field": "userid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "movies": {
        "columns": [
          {
            "field": "movieid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "isEnglish",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "runningtime",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "users": {
        "columns": [
          {
            "field": "userid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "u_gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "occupation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the id of male users who gave ratings of less than 3 to French movies with running time of 2.",
    "gold_sql": "SELECT T1.userid FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid INNER JOIN users AS T3 ON T1.userid = T3.userid WHERE T2.country = 'France' AND T2.runningtime = 2 AND T1.rating < 3 AND T3.u_gender = 'M'",
    "predicted_sql": "SELECT T1.userid FROM u2base AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid INNER JOIN users AS T3 ON T1.userid = T3.userid WHERE T2.country = 'France' AND T2.runningtime = 2 AND T1.rating < 3 AND T3.u_gender = 'M'"
  },
  {
    "idx": 190,
    "relevant_table_schema": {
      "west_superstore": {
        "columns": [
          {
            "field": "Row ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Order ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Order Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Mode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Customer ID) references people(Customer ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Region) references people(Region)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Product ID) references product(Product ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Sales",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Profit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "product": {
        "columns": [
          {
            "field": "Product ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Product Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What are the names of the products with a profit of no less than 1,000 in one single order?",
    "gold_sql": "SELECT DISTINCT T2.`Product Name` FROM west_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.Profit > 1000",
    "predicted_sql": "SELECT T2.`Product Name` FROM west_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.Profit > 1000"
  },
  {
    "idx": 191,
    "relevant_table_schema": {
      "south_superstore": {
        "columns": [
          {
            "field": "Row ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Order ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Order Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Mode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Customer ID) references people(Customer ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Region) references people(Region)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Product ID) references product(Product ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Sales",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Profit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "product": {
        "columns": [
          {
            "field": "Product ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Product Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What product category got the highest profit in the south superstore?",
    "gold_sql": "SELECT T2.Category FROM south_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` ORDER BY T1.Profit DESC LIMIT 1",
    "predicted_sql": "SELECT T2.Category FROM south_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.Region = 'South' ORDER BY T1.Sales / (1 - T1.Discount) DESC LIMIT 1"
  },
  {
    "idx": 192,
    "relevant_table_schema": {
      "east_superstore": {
        "columns": [
          {
            "field": "Row ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Order ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Order Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Mode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Customer ID) references people(Customer ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Region) references people(Region)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Product ID) references product(Product ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Sales",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Profit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "product": {
        "columns": [
          {
            "field": "Product ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Product Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many art products were ordered in 2013 in the east superstore?",
    "gold_sql": "SELECT COUNT(DISTINCT T1.`Product ID`) FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Sub-Category` = 'Art' AND T1.Region = 'East' AND STRFTIME('%Y', T1.`Order Date`) = '2013'",
    "predicted_sql": "SELECT COUNT(T1.`Product ID`) FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Region = 'East' AND strftime('%Y', T1.`Order Date`) = '2013' AND T1.`Product Name` = 'Art'"
  },
  {
    "idx": 193,
    "relevant_table_schema": {
      "central_superstore": {
        "columns": [
          {
            "field": "Row ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Order ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Order Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Mode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Customer ID) references people(Customer ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Region) references people(Region)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Product ID) references product(Product ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Sales",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Profit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "product": {
        "columns": [
          {
            "field": "Product ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Product Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the names of all the products ordered in order CA-2011-112326 in superstores in the center.",
    "gold_sql": "SELECT DISTINCT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Order ID` = 'CA-2011-112326'",
    "predicted_sql": "SELECT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Order ID` = 'CA-2011-112326' AND T2.Region = 'Central' AND T1.Region = 'Central' AND T1.`Ship Mode` = 'Superstore'"
  },
  {
    "idx": 194,
    "relevant_table_schema": {
      "people": {
        "columns": [
          {
            "field": "Customer ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Customer Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Segment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Postal Code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "central_superstore": {
        "columns": [
          {
            "field": "Row ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Order ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Order Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Mode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Customer ID) references people(Customer ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Region) references people(Region)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Product ID) references product(Product ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Sales",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Profit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "product": {
        "columns": [
          {
            "field": "Product ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Product Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What was the quantity of Xerox 1952 ordered by Aimee Bixby on 2014/9/10?",
    "gold_sql": "SELECT SUM(T2.Quantity) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.`Customer Name` = 'Aimee Bixby' AND T3.`Product Name` = 'Xerox 1952' AND T2.`Order Date` = '2014-09-10'",
    "predicted_sql": "SELECT T2.Quantity FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T2.`Product ID` = T3.`Product ID` WHERE T1.`Customer Name` = 'Aimee Bixby' AND T2.`Order Date` = '2014-09-10' AND T3.Product Name = 'Xerox 1952'"
  },
  {
    "idx": 195,
    "relevant_table_schema": {
      "central_superstore": {
        "columns": [
          {
            "field": "Row ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Order ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Order Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Mode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Customer ID) references people(Customer ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Region) references people(Region)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Product ID) references product(Product ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Sales",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Profit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "product": {
        "columns": [
          {
            "field": "Product ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Product Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the orders in Central superstore, which art product were ordered the most?",
    "gold_sql": "SELECT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Sub-Category` = 'Art' GROUP BY T2.`Product Name` ORDER BY COUNT(T2.`Product ID`) DESC LIMIT 1",
    "predicted_sql": "SELECT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Region = 'East' GROUP BY T2.`Product Name` ORDER BY COUNT(T1.`Product ID`) DESC LIMIT 1"
  },
  {
    "idx": 196,
    "relevant_table_schema": {
      "people": {
        "columns": [
          {
            "field": "Customer ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Customer Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Segment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Postal Code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "central_superstore": {
        "columns": [
          {
            "field": "Row ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Order ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Order Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Mode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Customer ID) references people(Customer ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Region) references people(Region)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Product ID) references product(Product ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Sales",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Profit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the percentage of orders with 0.2 discount in the Central superstore were purchased by customers who live in Texas?",
    "gold_sql": "SELECT CAST(SUM(CASE  WHEN T2.Discount = 0.2 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.State = 'Texas'",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN T2.Region = 'Central' AND T2.Discount = 0.2 AND T1.State = 'TX' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Customer ID) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID`"
  },
  {
    "idx": 197,
    "relevant_table_schema": {
      "south_superstore": {
        "columns": [
          {
            "field": "Row ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Order ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Order Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Mode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Customer ID) references people(Customer ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Region) references people(Region)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Product ID) references product(Product ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Sales",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Profit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "product": {
        "columns": [
          {
            "field": "Product ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Product Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Indicate the profit of product Sauder Camden County Barrister Bookcase, Planked Cherry Finish.",
    "gold_sql": "SELECT DISTINCT T1.Profit FROM south_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Product Name` = 'Sauder Camden County Barrister Bookcase, Planked Cherry Finish'",
    "predicted_sql": "SELECT T1.Profit FROM south_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Product Name` = 'Sauder Camden County Barrister Bookcase, Planked Cherry Finish'"
  },
  {
    "idx": 198,
    "relevant_table_schema": {
      "east_superstore": {
        "columns": [
          {
            "field": "Row ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Order ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Order Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Mode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Customer ID) references people(Customer ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Region) references people(Region)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Product ID) references product(Product ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Sales",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Profit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "west_superstore": {
        "columns": [
          {
            "field": "Row ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Order ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Order Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Mode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Customer ID) references people(Customer ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Region) references people(Region)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Product ID) references product(Product ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Sales",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Profit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Compare the numbers of orders between the Eastern and Western stores in 2015.",
    "gold_sql": "SELECT east, west FROM ( SELECT COUNT(`Order ID`) AS east , ( SELECT COUNT(`Order ID`) FROM west_superstore WHERE `Order Date` LIKE '2015%' ) AS west FROM east_superstore WHERE `Order Date` LIKE '2015%' )",
    "predicted_sql": "SELECT COUNT(T1.`Customer ID`) - COUNT(T2.`Customer ID`) FROM east_superstore AS T1 INNER JOIN west_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE strftime('%Y', T1.`Order Date`) = '2015' AND T1.Region = 'East' AND T2.Region = 'West'"
  },
  {
    "idx": 199,
    "relevant_table_schema": {
      "people": {
        "columns": [
          {
            "field": "Customer ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Customer Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Segment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Postal Code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "central_superstore": {
        "columns": [
          {
            "field": "Row ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Order ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Order Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Ship Mode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(Customer ID) references people(Customer ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Region) references people(Region)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(Product ID) references product(Product ID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Sales",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Profit",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "product": {
        "columns": [
          {
            "field": "Product ID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Product Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sub-Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the customers from Houston, Texas, what is the total profit of their orders in the Central region?",
    "gold_sql": "SELECT SUM(T2.Profit) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.City = 'Houston' AND T1.State = 'Texas' AND T2.Region = 'Central'",
    "predicted_sql": "SELECT SUM(T2.Sales / (1 - T2.Discount)) * T2.Quantity - T2.Profit FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T2.`Product ID` = T3.`Product ID` WHERE T1.Region = 'Central' AND T1.City = 'Houston' AND T1.State = 'TX'"
  },
  {
    "idx": 200,
    "relevant_table_schema": {
      "incidents": {
        "columns": [
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_statuses",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_weapon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subjects",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "officers",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "officers": {
        "columns": [
          {
            "field": "foreign key(case_number) references incidents(case_number)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many incidents in which the subject's weapon was a vehicle were investigated by a female officer?",
    "gold_sql": "SELECT COUNT(T1.case_number) FROM incidents AS T1 INNER JOIN officers AS T2 ON T1.case_number = T2.case_number WHERE T1.subject_weapon = 'Vehicle' AND T2.gender = 'F'",
    "predicted_sql": "SELECT COUNT(T1.case_number) FROM incidents AS T1 INNER JOIN officers AS T2 ON T1.case_number = T2.case_number WHERE T2.gender = 'F' AND T1.subject_weapon = 'vehicle'"
  },
  {
    "idx": 201,
    "relevant_table_schema": {
      "incidents": {
        "columns": [
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_statuses",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_weapon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subjects",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "officers",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In which year has the greatest number of cases where Handgun was used as weapon?",
    "gold_sql": "SELECT STRFTIME('%Y', date) FROM incidents WHERE subject_weapon = 'Handgun' GROUP BY STRFTIME('%Y', date) ORDER BY COUNT(case_number) DESC LIMIT 1",
    "predicted_sql": "SELECT `date` FROM incidents WHERE subject_weapon = 'Handgun' GROUP BY `date` ORDER BY COUNT(case_number) DESC LIMIT 1"
  },
  {
    "idx": 202,
    "relevant_table_schema": {
      "officers": {
        "columns": [
          {
            "field": "foreign key(case_number) references incidents(case_number)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the proportion of white males and females in the police force?",
    "gold_sql": "SELECT CAST(SUM(gender = 'M') AS REAL) / SUM(gender = 'F') FROM officers WHERE race = 'W'",
    "predicted_sql": "SELECT CAST(SUM(gender = 'M') AS REAL) / SUM(gender = 'F') FROM officers WHERE race = 'W'"
  },
  {
    "idx": 203,
    "relevant_table_schema": {
      "officers": {
        "columns": [
          {
            "field": "foreign key(case_number) references incidents(case_number)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "incidents": {
        "columns": [
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_statuses",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_weapon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subjects",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "officers",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Of the black officers, how many of them investigated cases between the years 2010 and 2015?",
    "gold_sql": "SELECT COUNT(T1.case_number) FROM officers AS T1 INNER JOIN incidents AS T2 ON T2.case_number = T1.case_number WHERE T1.race = 'B' AND T2.date BETWEEN '2010-01-01' AND '2015-12-31'",
    "predicted_sql": "SELECT COUNT(T1.case_number) FROM officers AS T1 INNER JOIN incidents AS T2 ON T1.case_number = T2.case_number WHERE T1.race = 'B' AND T2.date BETWEEN '2010-01-01' AND '2015-12-31'"
  },
  {
    "idx": 204,
    "relevant_table_schema": {
      "officers": {
        "columns": [
          {
            "field": "foreign key(case_number) references incidents(case_number)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Of all male officers, what percentage are black officers?",
    "gold_sql": "SELECT CAST(SUM(race = 'B') AS REAL) * 100 / COUNT(case_number) FROM officers WHERE gender = 'M'",
    "predicted_sql": "SELECT CAST(SUM(race = 'B') AS REAL) * 100 / COUNT(case_number) FROM officers WHERE gender = 'M'"
  },
  {
    "idx": 205,
    "relevant_table_schema": {
      "officers": {
        "columns": [
          {
            "field": "foreign key(case_number) references incidents(case_number)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among all the male officers, what is the percentage of them are White?",
    "gold_sql": "SELECT CAST(SUM(IIF(race = 'W', 1, 0)) AS REAL) * 100 / COUNT(case_number) FROM officers WHERE gender = 'M'",
    "predicted_sql": "SELECT CAST(SUM(race = 'W') AS REAL) * 100 / COUNT(case_number) FROM officers WHERE gender = 'M'"
  },
  {
    "idx": 206,
    "relevant_table_schema": {
      "incidents": {
        "columns": [
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_statuses",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_weapon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subjects",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "officers",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many instances were found in June 2015?",
    "gold_sql": "SELECT COUNT(case_number) FROM incidents WHERE date BETWEEN '2015-06-01' AND '2015-06-30'",
    "predicted_sql": "SELECT SUM(subject_count) FROM incidents WHERE STRFTIME('%Y-%m', date) = '2015-06'"
  },
  {
    "idx": 207,
    "relevant_table_schema": {
      "incidents": {
        "columns": [
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_statuses",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_weapon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subjects",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "officers",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the percentage of the cases involved more than 3 officers from year 2010 to 2015?",
    "gold_sql": "SELECT CAST(SUM(IIF(officer_count > 3, 1, 0)) AS REAL) * 100 / COUNT(case_number) FROM incidents WHERE STRFTIME('%Y', date) BETWEEN '2010' AND '2015'",
    "predicted_sql": "SELECT CAST(SUM(subject_count > 3) AS REAL) * 100 / COUNT(case_number) FROM incidents WHERE officers LIKE '%201[0-5]%'"
  },
  {
    "idx": 208,
    "relevant_table_schema": {
      "incidents": {
        "columns": [
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_statuses",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_weapon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subjects",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "officers",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "subjects": {
        "columns": [
          {
            "field": "foreign key(case_number) references incidents(case_number)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "From the cases where the subject are male, list the case number and the location and subject status.",
    "gold_sql": "SELECT T1.case_number, T1.location, T1.subject_statuses FROM incidents AS T1 INNER JOIN subjects AS T2 ON T1.case_number = T2.case_number WHERE T2.gender = 'M'",
    "predicted_sql": "SELECT T1.case_number, T1.location, T1.subject_statuses FROM incidents AS T1 INNER JOIN subjects AS T2 ON T1.case_number = T2.case_number WHERE T2.gender = 'M'"
  },
  {
    "idx": 209,
    "relevant_table_schema": {
      "incidents": {
        "columns": [
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_statuses",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_weapon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subjects",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subject_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "officers",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Did the number of cases with Vehicle as subject weapon increase or decrease from year 2007 to 2008. State the difference.",
    "gold_sql": "SELECT SUM(IIF(STRFTIME('%Y', date) = '2007', 1, 0)) - SUM(IIF(STRFTIME('%Y', date) = '2008', 1, 0)) FROM incidents WHERE subject_weapon = 'Vehicle'",
    "predicted_sql": "SELECT CASE WHEN SUM(CASE WHEN SUBSTR(date, -4) = '2008' THEN 1 ELSE 0 END) > SUM(CASE WHEN SUBSTR(date, -4) = '2007' THEN 1 ELSE 0 END) THEN 'INCREASE' ELSE 'DECREASE' END, SUM(CASE WHEN SUBSTR(date, -4) = '2008' THEN 1 ELSE 0 END) - SUM(CASE WHEN SUBSTR(date, -4) = '2007' THEN 1 ELSE 0 END) FROM incidents WHERE subject_weapon = 'Vehicle'"
  },
  {
    "idx": 210,
    "relevant_table_schema": {
      "genes": {
        "columns": [
          {
            "field": "foreign key(GeneID) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Essential",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Class",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Complex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Phenotype",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Motif",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Chromosome",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Function",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Localization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "interactions": {
        "columns": [
          {
            "field": "foreign key(GeneID1) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(GeneID2) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Expression_Corr",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many pairs of positively correlated genes are both non-essential?",
    "gold_sql": "SELECT COUNT(T2.GeneID2) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T2.Expression_Corr > 0 AND T1.Essential = 'Non-Essential'",
    "predicted_sql": "SELECT COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Essential = 'Non-Essential' AND T2.Expression_Corr > 0"
  },
  {
    "idx": 211,
    "relevant_table_schema": {
      "genes": {
        "columns": [
          {
            "field": "foreign key(GeneID) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Essential",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Class",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Complex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Phenotype",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Motif",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Chromosome",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Function",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Localization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "classification": {
        "columns": [
          {
            "field": "GeneID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Localization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "For the genes that are located in the plasma membrane, please list their number of chromosomes.",
    "gold_sql": "SELECT T1.Chromosome FROM Genes AS T1 INNER JOIN Classification AS T2 ON T1.GeneID = T2.GeneID WHERE T2.Localization = 'plasma membrane'",
    "predicted_sql": "SELECT T1.Chromosome FROM Genes AS T1 INNER JOIN Classification AS T2 ON T1.GeneID = T2.GeneID WHERE T2.Localization = 'plasma membrane'"
  },
  {
    "idx": 212,
    "relevant_table_schema": {
      "genes": {
        "columns": [
          {
            "field": "foreign key(GeneID) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Essential",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Class",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Complex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Phenotype",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Motif",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Chromosome",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Function",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Localization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "classification": {
        "columns": [
          {
            "field": "GeneID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Localization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the genes with nucleic acid metabolism defects, how many of them can be found in the vacuole?",
    "gold_sql": "SELECT COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Classification AS T2 ON T1.GeneID = T2.GeneID WHERE T2.Localization = 'vacuole' AND T1.Phenotype = 'Nucleic acid metabolism defects'",
    "predicted_sql": "SELECT COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Classification AS T2 ON T1.GeneID = T2.GeneID WHERE T2.Localization = 'vacuole' AND T1.Phenotype = 'Nucleic acid metabolism defects'"
  },
  {
    "idx": 213,
    "relevant_table_schema": {
      "genes": {
        "columns": [
          {
            "field": "foreign key(GeneID) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Essential",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Class",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Complex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Phenotype",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Motif",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Chromosome",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Function",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Localization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "classification": {
        "columns": [
          {
            "field": "GeneID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Localization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many non-essential genes are located in the nucleus?",
    "gold_sql": "SELECT COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Classification AS T2 ON T1.GeneID = T2.GeneID WHERE T2.Localization = 'nucleus' AND T1.Essential = 'Non-Essential'",
    "predicted_sql": "SELECT COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Classification AS T2 ON T1.GeneID = T2.GeneID WHERE T2.Localization = 'nucleus' AND T1.Essential = 'Non-Essential'"
  },
  {
    "idx": 214,
    "relevant_table_schema": {
      "genes": {
        "columns": [
          {
            "field": "foreign key(GeneID) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Essential",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Class",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Complex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Phenotype",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Motif",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Chromosome",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Function",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Localization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "interactions": {
        "columns": [
          {
            "field": "foreign key(GeneID1) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(GeneID2) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Expression_Corr",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the motif of the genes that are located in the cytoplasm and have 7 chromosomes.",
    "gold_sql": "SELECT T2.GeneID1, T2.GeneID2 FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Localization = 'cytoplasm' AND T1.Chromosome = 7",
    "predicted_sql": "SELECT DISTINCT T1.Motif FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Localization = 'cytoplasm' AND T1.Chromosome = 7"
  },
  {
    "idx": 215,
    "relevant_table_schema": {
      "genes": {
        "columns": [
          {
            "field": "foreign key(GeneID) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Essential",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Class",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Complex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Phenotype",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Motif",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Chromosome",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Function",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Localization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "interactions": {
        "columns": [
          {
            "field": "foreign key(GeneID1) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(GeneID2) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Expression_Corr",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Taking all the essential genes of the transcription factors class located in the nucleus as a reference, how many of them carry out a genetic-type interaction with another gene? List them.",
    "gold_sql": "SELECT T2.GeneID1 FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Localization = 'nucleus' AND T1.Class = 'Transcription factors' AND T1.Essential = 'Essential' AND T2.Expression_Corr != 0",
    "predicted_sql": "SELECT T2.GeneID1 FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Localization = 'nucleus' AND T1.Class = 'Transcription factors' AND T1.Essential = 'Essential' AND T2.Expression_Corr != 0"
  },
  {
    "idx": 216,
    "relevant_table_schema": {
      "genes": {
        "columns": [
          {
            "field": "foreign key(GeneID) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Essential",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Class",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Complex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Phenotype",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Motif",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Chromosome",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Function",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Localization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "interactions": {
        "columns": [
          {
            "field": "foreign key(GeneID1) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(GeneID2) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Expression_Corr",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the pairs of genes that are not from the class of motorproteins, how many of them are negatively correlated?",
    "gold_sql": "SELECT COUNT(T1.GeneID) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T2.Expression_Corr < 0 AND T1.Class = 'Motorproteins'",
    "predicted_sql": "SELECT COUNT(T2.GeneID1) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Class = 'Motorproteins' AND T2.Expression_Corr < 0"
  },
  {
    "idx": 217,
    "relevant_table_schema": {
      "genes": {
        "columns": [
          {
            "field": "foreign key(GeneID) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Essential",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Class",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Complex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Phenotype",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Motif",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Chromosome",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Function",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Localization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "interactions": {
        "columns": [
          {
            "field": "foreign key(GeneID1) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(GeneID2) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Expression_Corr",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "For the pairs of genes both from the class ATPases, what is the average expression correlation score?",
    "gold_sql": "SELECT AVG(T2.Expression_Corr) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Class = 'ATPases'",
    "predicted_sql": "SELECT AVG(T2.Expression_Corr) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Class = 'ATPases'"
  },
  {
    "idx": 218,
    "relevant_table_schema": {
      "genes": {
        "columns": [
          {
            "field": "foreign key(GeneID) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Essential",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Class",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Complex",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Phenotype",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Motif",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Chromosome",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Function",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Localization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "interactions": {
        "columns": [
          {
            "field": "foreign key(GeneID1) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(GeneID2) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Expression_Corr",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "For the pairs of genes with one having 8 chromosomes and the other having 6 chromosomes, what is the highest expression correlation score?",
    "gold_sql": "SELECT T2.Expression_Corr FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Chromosome = 6 OR T1.Chromosome = 8 ORDER BY T2.Expression_Corr DESC LIMIT 1",
    "predicted_sql": "SELECT T2.Expression_Corr FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Chromosome = 8 AND T2.GeneID2 = 'T2' AND T2.Expression_Corr = ( SELECT MAX(T2.Expression_Corr) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Chromosome = 8 AND T2.GeneID2 = 'T2' )"
  },
  {
    "idx": 219,
    "relevant_table_schema": {
      "interactions": {
        "columns": [
          {
            "field": "foreign key(GeneID1) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(GeneID2) references Classification(GeneID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Expression_Corr",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What kind of expression correlation occurs in physical type interacting gene pairs and what percentage of these are negatively correlated?",
    "gold_sql": "SELECT Expression_Corr FROM Interactions WHERE Type = 'Physical' UNION ALL SELECT CAST(SUM(Expression_Corr < 0) AS REAL) * 100 / COUNT(*) FROM Interactions WHERE Type = 'Physical'",
    "predicted_sql": "SELECT Expression_Corr FROM Interactions WHERE Type = 'Physical' UNION ALL SELECT CAST(SUM(Expression_Corr < 0) AS REAL) * 100 / COUNT(*) FROM Interactions WHERE Type = 'Physical'"
  },
  {
    "idx": 220,
    "relevant_table_schema": {
      "playstore": {
        "columns": [
          {
            "field": "App",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reviews",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Size",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Installs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Content Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genres",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "user_reviews": {
        "columns": [
          {
            "field": "foreign key(App) references playstore(App)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Translated_Review",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Polarity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Subjectivity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the name and category of the app with the highest amount of -1 sentiment polarity score?",
    "gold_sql": "SELECT DISTINCT T1.App, T1.Category FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T2.Sentiment_Polarity = '-1.0'",
    "predicted_sql": "SELECT T1.App, T1.Category FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T2.Sentiment = '-1' ORDER BY T2.Sentiment_Polarity DESC LIMIT 1"
  },
  {
    "idx": 221,
    "relevant_table_schema": {
      "playstore": {
        "columns": [
          {
            "field": "App",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reviews",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Size",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Installs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Content Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genres",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average download for entertainment apps with size no more than 1.0 M?",
    "gold_sql": "SELECT AVG(CAST(REPLACE(REPLACE(Installs, ',', ''), '+', '') AS INTEGER)) FROM playstore WHERE Category = 'ENTERTAINMENT' AND Size < '1.0M'",
    "predicted_sql": "SELECT AVG(CAST(REPLACE(REPLACE(Size, ',', ''), ' MB', '') AS REAL)) FROM playstore WHERE Type = 'ENTERTAINMENT' AND Size < '1.0 MB'"
  },
  {
    "idx": 222,
    "relevant_table_schema": {
      "user_reviews": {
        "columns": [
          {
            "field": "foreign key(App) references playstore(App)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Translated_Review",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Polarity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Subjectivity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "playstore": {
        "columns": [
          {
            "field": "App",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reviews",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Size",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Installs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Content Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genres",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many apps that are only compatible with Android ver 8.0 and above? List down the users' sentiment of these apps.",
    "gold_sql": "SELECT DISTINCT Sentiment FROM user_reviews WHERE App IN ( SELECT App FROM playstore WHERE `Android Ver` = '8.0 and up' )",
    "predicted_sql": "SELECT COUNT(T1.App) FROM user_reviews AS T1 INNER JOIN playstore AS T2 ON T1.App = T2.App WHERE T2.Category = 'GAME' AND T2.Price = 0 AND T2.Content Rating = 'Teen' AND T2.Genres = 'Action' AND T2.Rating = 4.5 AND T2.Reviews = 10000 AND T2.Installs = '10,000+' AND T2.Type = 'Free' AND T2.Price = 0 AND T2.Content Rating = 'Teen' AND T2.Genres = 'Action' AND T2.Rating = 4.5 AND T2.Reviews = 10000 AND T2.Installs = '10,000+' AND T2.Type = 'Free' AND T2.Price = 0 AND T2.Content Rating = 'Teen' AND T2.Genres = 'Action' AND T2.Rating = 4.5 AND T2.Reviews = 10000 AND T2.Installs = '10,000+' AND T2.Type = 'Free' AND T2.Price = 0 AND T2.Content Rating = 'Teen' AND T2.Genres = 'Action' AND T2.Rating = 4.5 AND T2.Reviews = 10000 AND T2.Installs = '10,000+' AND T2.Type = 'Free' AND T2.Price = 0 AND T2.Content Rating = 'Teen' AND T2.Genres = 'Action' AND T2.Rating = 4.5 AND T2.Reviews = 10000 AND T2.Installs = '10,000+' AND T2.Type = 'Free' AND T2.Price = 0 AND T2.Content Rating = 'Teen' AND T2.Genres = 'Action' AND T2.Rating = 4.5 AND T2.Reviews = 10000 AND T2.Installs = '10,00"
  },
  {
    "idx": 223,
    "relevant_table_schema": {
      "playstore": {
        "columns": [
          {
            "field": "App",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reviews",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Size",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Installs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Content Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genres",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "user_reviews": {
        "columns": [
          {
            "field": "foreign key(App) references playstore(App)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Translated_Review",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Polarity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Subjectivity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which of the app is the best selling app and what is the sentiments polarity of it?",
    "gold_sql": "SELECT T1.App, T2.Sentiment_Polarity FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App ORDER BY T1.Price * CAST(REPLACE(REPLACE(Installs, ',', ''), '+', '') AS INTEGER) DESC LIMIT 1",
    "predicted_sql": "SELECT T1.App, T2.Sentiment_Polarity FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App ORDER BY T1.Price * CAST(REPLACE(REPLACE(Installs, ',', ''), '+', '') AS INTEGER) DESC LIMIT 1"
  },
  {
    "idx": 224,
    "relevant_table_schema": {
      "playstore": {
        "columns": [
          {
            "field": "App",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reviews",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Size",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Installs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Content Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genres",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "user_reviews": {
        "columns": [
          {
            "field": "foreign key(App) references playstore(App)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Translated_Review",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Polarity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Subjectivity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average rating of Apps falling under the racing genre and what is the percentage ratio of positive sentiment reviews?",
    "gold_sql": "SELECT AVG(T1.Rating), CAST(COUNT(CASE WHEN T2.Sentiment = 'Positive' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.Sentiment) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Genres = 'Racing'",
    "predicted_sql": "SELECT AVG(T1.Rating), CAST(SUM(CASE WHEN T2.Sentiment = 'Positive' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Sentiment) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Genres = 'Racing'"
  },
  {
    "idx": 225,
    "relevant_table_schema": {
      "playstore": {
        "columns": [
          {
            "field": "App",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reviews",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Size",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Installs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Content Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genres",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "user_reviews": {
        "columns": [
          {
            "field": "foreign key(App) references playstore(App)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Translated_Review",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Polarity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Subjectivity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which 1,000,000,000+ intalls apps has the most no comment reviews?",
    "gold_sql": "SELECT T1.App FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Installs = '1,000,000+' AND T2.Translated_Review = 'nan' GROUP BY T1.App ORDER BY COUNT(T2.Translated_Review) DESC LIMIT 1",
    "predicted_sql": "SELECT T1.App FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T2.Sentiment = 'Neutral' AND T1.Installs = '1,000,000,000+' GROUP BY T1.App ORDER BY COUNT(T2.Sentiment) DESC LIMIT 1"
  },
  {
    "idx": 226,
    "relevant_table_schema": {
      "playstore": {
        "columns": [
          {
            "field": "App",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reviews",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Size",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Installs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Content Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genres",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "user_reviews": {
        "columns": [
          {
            "field": "foreign key(App) references playstore(App)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Translated_Review",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Polarity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Subjectivity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all the comments on the lowest rated Mature 17+ app.",
    "gold_sql": "SELECT T2.Translated_Review FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.\"Content Rating\" = 'Mature 17+' ORDER BY T1.Rating LIMIT 1",
    "predicted_sql": "SELECT T2.Translated_Review FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.\"Content Rating\" = 'Mature 17+' ORDER BY T1.Rating LIMIT 1"
  },
  {
    "idx": 227,
    "relevant_table_schema": {
      "playstore": {
        "columns": [
          {
            "field": "App",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reviews",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Size",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Installs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Content Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genres",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Name the top 10 most reviewed apps.",
    "gold_sql": "SELECT DISTINCT App FROM playstore ORDER BY Reviews DESC LIMIT 10",
    "predicted_sql": "SELECT App FROM playstore GROUP BY App ORDER BY Reviews DESC LIMIT 10"
  },
  {
    "idx": 228,
    "relevant_table_schema": {
      "playstore": {
        "columns": [
          {
            "field": "App",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reviews",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Size",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Installs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Content Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genres",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "user_reviews": {
        "columns": [
          {
            "field": "foreign key(App) references playstore(App)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Translated_Review",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Polarity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Subjectivity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the number of installments of the app with the highest total Sentiment polarity score?",
    "gold_sql": "SELECT T1.Installs FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App GROUP BY T1.App ORDER BY SUM(T2.Sentiment_Polarity) DESC LIMIT 1",
    "predicted_sql": "SELECT COUNT(T1.App) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App ORDER BY T2.Sentiment_Polarity DESC LIMIT 1"
  },
  {
    "idx": 229,
    "relevant_table_schema": {
      "playstore": {
        "columns": [
          {
            "field": "App",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Reviews",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Size",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Installs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Content Rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Genres",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "user_reviews": {
        "columns": [
          {
            "field": "foreign key(App) references playstore(App)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Translated_Review",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Polarity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sentiment_Subjectivity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What are the content ratings for the apps that have \"gr8\" in their comments?",
    "gold_sql": "SELECT DISTINCT T1.`Content Rating` FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T2.Translated_Review LIKE '%gr8%'",
    "predicted_sql": "SELECT DISTINCT T1.Content Rating FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T2.Translated_Review LIKE '%gr8%'"
  },
  {
    "idx": 230,
    "relevant_table_schema": {
      "sales team": {
        "columns": [
          {
            "field": "SalesTeamID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Sales Team",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many sales team were from Northeast?",
    "gold_sql": "SELECT SUM(CASE WHEN Region = 'Northeast' THEN 1 ELSE 0 END) FROM `Sales Team`",
    "predicted_sql": "SELECT COUNT(SalesTeamID) FROM `Sales Team` WHERE Region = 'Northeast'"
  },
  {
    "idx": 231,
    "relevant_table_schema": {
      "sales orders": {
        "columns": [
          {
            "field": "OrderNumber",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Sales Channel",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WarehouseCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcuredDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrderDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ShipDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DeliveryDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(_SalesTeamID) references Sales Team(SalesTeamID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_StoreID) references Store Locations(StoreID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Order Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount Applied",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Unit Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Unit Cost",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "products": {
        "columns": [
          {
            "field": "ProductID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Product Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the name of the product with the highest net profit?",
    "gold_sql": "SELECT T2.`Product Name` FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID ORDER BY REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '') DESC LIMIT 1",
    "predicted_sql": "SELECT T2.`Product Name` FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID ORDER BY REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '') DESC LIMIT 1"
  },
  {
    "idx": 232,
    "relevant_table_schema": {
      "sales orders": {
        "columns": [
          {
            "field": "OrderNumber",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Sales Channel",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WarehouseCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcuredDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrderDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ShipDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DeliveryDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(_SalesTeamID) references Sales Team(SalesTeamID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_StoreID) references Store Locations(StoreID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Order Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount Applied",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Unit Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Unit Cost",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "store locations": {
        "columns": [
          {
            "field": "StoreID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "City Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "County",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(StateCode) references Regions(StateCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AreaCode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Household Income",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Median Income",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Land Area",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Water Area",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Time Zone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Calculate the total net profit of the store located in highest median income city.",
    "gold_sql": "SELECT SUM(REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '')) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID ORDER BY T2.`Median Income` DESC LIMIT 1",
    "predicted_sql": "SELECT SUM((CAST(REPLACE(SUBSTR(T1.Unit Price, 4), ',', '') AS REAL) / (1 - CAST(REPLACE(SUBSTR(T1.Discount Applied, 4), ',', '') AS REAL))) - CAST(REPLACE(SUBSTR(T1.Unit Cost, 4), ',', '') AS REAL)) AS net FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T2.City Name = ( SELECT City Name FROM `Store Locations` ORDER BY Median Income DESC LIMIT 1 )"
  },
  {
    "idx": 233,
    "relevant_table_schema": {
      "regions": {
        "columns": [
          {
            "field": "StateCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "store locations": {
        "columns": [
          {
            "field": "StoreID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "City Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "County",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(StateCode) references Regions(StateCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AreaCode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Household Income",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Median Income",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Land Area",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Water Area",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Time Zone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List out the city name of states located in South region.",
    "gold_sql": "SELECT T FROM ( SELECT DISTINCT CASE  WHEN T1.Region = 'South' THEN T2.`City Name` END AS T FROM Regions T1 INNER JOIN `Store Locations` T2 ON T2.StateCode = T1.StateCode ) WHERE T IS NOT NULL",
    "predicted_sql": "SELECT T2.`City Name` FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T1.StateCode = T2.StateCode WHERE T1.Region = 'South'"
  },
  {
    "idx": 234,
    "relevant_table_schema": {
      "regions": {
        "columns": [
          {
            "field": "StateCode",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "store locations": {
        "columns": [
          {
            "field": "StoreID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "City Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "County",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(StateCode) references Regions(StateCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AreaCode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Household Income",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Median Income",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Land Area",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Water Area",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Time Zone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In the West, how many stores are there in the city whose land area is below 20,000,000?",
    "gold_sql": "SELECT SUM(CASE WHEN T1.Region = 'West' AND T2.`Land Area` < 20000000 THEN 1 ELSE 0 END) FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StateCode = T1.StateCode",
    "predicted_sql": "SELECT SUM(CASE WHEN T1.Region = 'West' AND T2.`Land Area` < 20000000 THEN 1 ELSE 0 END) FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StateCode = T1.StateCode"
  },
  {
    "idx": 235,
    "relevant_table_schema": {
      "sales orders": {
        "columns": [
          {
            "field": "OrderNumber",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Sales Channel",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WarehouseCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcuredDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrderDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ShipDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DeliveryDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(_SalesTeamID) references Sales Team(SalesTeamID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_StoreID) references Store Locations(StoreID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Order Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount Applied",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Unit Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Unit Cost",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "sales team": {
        "columns": [
          {
            "field": "SalesTeamID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Sales Team",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which sales team name has the least orders in 2019?",
    "gold_sql": "SELECT T2.`Sales Team` FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.OrderDate LIKE '%/%/19' GROUP BY T2.`Sales Team` ORDER BY COUNT(T1.OrderNumber) ASC LIMIT 1",
    "predicted_sql": "SELECT T FROM ( SELECT DISTINCT CASE  WHEN T1.`OrderDate` LIKE '2/%/19' AND T2.`Sales Team` < ( SELECT T2.`Sales Team` FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.`OrderDate` LIKE '2/%/19' ORDER BY T1.`Order Quantity` ASC LIMIT 1 ) THEN T2.`Sales Team` ELSE NULL END AS T FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.`OrderDate` LIKE '2/%/19' ) WHERE T IS NOT NULL"
  },
  {
    "idx": 236,
    "relevant_table_schema": {
      "sales orders": {
        "columns": [
          {
            "field": "OrderNumber",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Sales Channel",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WarehouseCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcuredDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrderDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ShipDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DeliveryDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(_SalesTeamID) references Sales Team(SalesTeamID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_StoreID) references Store Locations(StoreID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Order Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount Applied",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Unit Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Unit Cost",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "sales team": {
        "columns": [
          {
            "field": "SalesTeamID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Sales Team",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Calculate the order percentage by \"Carlos Miller\" sales team.",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T2.`Sales Team` = 'Carlos Miller' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.OrderNumber) FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID",
    "predicted_sql": "SELECT CAST(COUNT(CASE WHEN T1.Sales Channel = 'Carlos Miller' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1._SalesTeamID) FROM `Sales Orders` T1 INNER JOIN `Sales Team` T2 ON T1._SalesTeamID = T2.SalesTeamID"
  },
  {
    "idx": 237,
    "relevant_table_schema": {
      "sales orders": {
        "columns": [
          {
            "field": "OrderNumber",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Sales Channel",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WarehouseCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcuredDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrderDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ShipDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DeliveryDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(_SalesTeamID) references Sales Team(SalesTeamID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_StoreID) references Store Locations(StoreID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Order Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount Applied",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Unit Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Unit Cost",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "sales team": {
        "columns": [
          {
            "field": "SalesTeamID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Sales Team",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In 2019, how many orders were shipped by the sales team with the highest number of orders in the said year? Provide the name of the sales team.",
    "gold_sql": "SELECT COUNT(T1.OrderNumber), T2.`Sales Team` FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.OrderDate LIKE '%/%/19' AND T1.ShipDate LIKE '%/%/19' GROUP BY T2.`Sales Team` ORDER BY COUNT(T1.OrderNumber) DESC LIMIT 1",
    "predicted_sql": "SELECT T2.`Sales Team`, T1.OrderNumber FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE SUBSTR(T1.ShipDate, -4) = '2019' GROUP BY T2.`Sales Team` ORDER BY COUNT(T1.OrderNumber) DESC LIMIT 1"
  },
  {
    "idx": 238,
    "relevant_table_schema": {
      "sales orders": {
        "columns": [
          {
            "field": "OrderNumber",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Sales Channel",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WarehouseCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcuredDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrderDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ShipDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DeliveryDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(_SalesTeamID) references Sales Team(SalesTeamID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_StoreID) references Store Locations(StoreID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Order Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount Applied",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Unit Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Unit Cost",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "store locations": {
        "columns": [
          {
            "field": "StoreID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "City Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "County",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(StateCode) references Regions(StateCode)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AreaCode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Household Income",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Median Income",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Land Area",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Water Area",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Time Zone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many stores procured products on October 27, 2018, in the city of Oregon?",
    "gold_sql": "SELECT SUM(CASE WHEN T1.ProcuredDate = '10/27/18' AND T2.`City Name` = 'Orlando' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID",
    "predicted_sql": "SELECT COUNT(T1._StoreID) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T1.ProcuredDate = '2018-10-27' AND T2.`City Name` = 'Oregon'"
  },
  {
    "idx": 239,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "CustomerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Customer Names",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "sales orders": {
        "columns": [
          {
            "field": "OrderNumber",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Sales Channel",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WarehouseCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ProcuredDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrderDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ShipDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DeliveryDate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrencyCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(_SalesTeamID) references Sales Team(SalesTeamID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_StoreID) references Store Locations(StoreID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(_ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Order Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Discount Applied",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Unit Price",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Unit Cost",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the name of the customer with the most number of order quantity from 2018 to 2020.",
    "gold_sql": "SELECT T1.`Customer Names` FROM Customers AS T1 INNER JOIN `Sales Orders` AS T2 ON T2._CustomerID = T1.CustomerID WHERE T2.OrderDate LIKE '%/%/18' OR T2.OrderDate LIKE '%/%/19' OR T2.OrderDate LIKE '%/%/20' ORDER BY T2.`Order Quantity` DESC LIMIT 1",
    "predicted_sql": "SELECT T FROM ( SELECT DISTINCT CASE  WHEN T3.OrderQuantity BETWEEN 2018 AND 2020 THEN T1.`Customer Names` ELSE NULL END AS T FROM Customers T1 INNER JOIN `Sales Orders` T2 ON T2._CustomerID = T1.CustomerID ) WHERE T IS NOT NULL"
  },
  {
    "idx": 240,
    "relevant_table_schema": {
      "matchs": {
        "columns": [
          {
            "field": "foreign key(Div) references divisions(division)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HomeTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AwayTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTHG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTAG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTR",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "divisions": {
        "columns": [
          {
            "field": "division",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which away team in the division of Bundesliga has the highest final time goals?",
    "gold_sql": "SELECT T1.AwayTeam FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div=T2.division WHERE T2.name = 'Bundesliga' ORDER BY T1.FTAG DESC LIMIT 1",
    "predicted_sql": "SELECT T1.AwayTeam FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Bundesliga' ORDER BY T1.FTAG DESC LIMIT 1"
  },
  {
    "idx": 241,
    "relevant_table_schema": {
      "matchs": {
        "columns": [
          {
            "field": "foreign key(Div) references divisions(division)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HomeTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AwayTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTHG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTAG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTR",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "divisions": {
        "columns": [
          {
            "field": "division",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many draw games happened on 2018/8/7 for National League?",
    "gold_sql": "SELECT COUNT(T1.FTR) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'National League' AND T1.Date = '2018-08-07' AND T1.FTR = 'D'",
    "predicted_sql": "SELECT COUNT(T1.FTR) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.Date = '2018-08-07' AND T2.name = 'National League' AND T1.FTR = 'D'"
  },
  {
    "idx": 242,
    "relevant_table_schema": {
      "matchs": {
        "columns": [
          {
            "field": "foreign key(Div) references divisions(division)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HomeTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AwayTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTHG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTAG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTR",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "divisions": {
        "columns": [
          {
            "field": "division",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many home victories does the Bundesliga division have in more or less than the Premier League division in the 2021 season?",
    "gold_sql": "SELECT COUNT(CASE WHEN T2.name = 'Bundesliga' THEN 1 ELSE NULL END) - COUNT(CASE WHEN T2.name = 'Premier League' THEN 1 ELSE NULL END) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2021 AND T1.FTR = 'H'",
    "predicted_sql": "SELECT COUNT(CASE WHEN T2.name = 'Bundesliga' THEN 1 ELSE NULL END) - COUNT(CASE WHEN T2.name = 'Premier League' THEN 1 ELSE NULL END) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2021 AND T1.FTR = 'H'"
  },
  {
    "idx": 243,
    "relevant_table_schema": {
      "matchs": {
        "columns": [
          {
            "field": "foreign key(Div) references divisions(division)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HomeTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AwayTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTHG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTAG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTR",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What percentage of games won, games lost and games drawn does Cittadella have as a home team in total?",
    "gold_sql": "SELECT CAST(COUNT(CASE WHEN FTR = 'H' THEN 1 ELSE NULL END) / COUNT(HomeTeam) AS REAL) * 100, CAST(COUNT(CASE WHEN FTR = 'A' THEN 1 ELSE NULL END) AS REAL) / COUNT(HomeTeam), CAST(COUNT(CASE WHEN FTR = 'D' THEN 1 ELSE NULL END) AS REAL) / COUNT(HomeTeam) FROM matchs WHERE HomeTeam = 'Cittadella'",
    "predicted_sql": "SELECT CAST(COUNT(CASE WHEN FTR = 'H' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(HomeTeam) , COUNT(CASE WHEN FTR = 'A' THEN 1 ELSE NULL END) * 100 / COUNT(HomeTeam) , COUNT(CASE WHEN FTR = 'D' THEN 1 ELSE NULL END) * 100 / COUNT(HomeTeam) FROM matchs WHERE HomeTeam = 'Cittadella'"
  },
  {
    "idx": 244,
    "relevant_table_schema": {
      "matchs": {
        "columns": [
          {
            "field": "foreign key(Div) references divisions(division)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HomeTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AwayTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTHG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTAG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTR",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "divisions": {
        "columns": [
          {
            "field": "division",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Give the full name of the divison that had the most 0-0 games.",
    "gold_sql": "SELECT T2.name FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.FTAG = 0 AND T1.FTHG = 0 GROUP BY T2.division ORDER BY COUNT(T1.FTAG) DESC LIMIT 1",
    "predicted_sql": "SELECT T2.name FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.FTR = 'D' GROUP BY T2.name ORDER BY COUNT(T2.name) DESC LIMIT 1"
  },
  {
    "idx": 245,
    "relevant_table_schema": {
      "matchs": {
        "columns": [
          {
            "field": "foreign key(Div) references divisions(division)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HomeTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AwayTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTHG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTAG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTR",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the name of the home team in division P1 with the highest final time goal in all seasons?",
    "gold_sql": "SELECT HomeTeam FROM matchs WHERE Div = 'P1' AND season = 2021 ORDER BY FTHG DESC LIMIT 1",
    "predicted_sql": "SELECT HomeTeam FROM matchs WHERE Div = 'P1' ORDER BY FTHG DESC LIMIT 1"
  },
  {
    "idx": 246,
    "relevant_table_schema": {
      "matchs": {
        "columns": [
          {
            "field": "foreign key(Div) references divisions(division)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HomeTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AwayTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTHG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTAG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTR",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "divisions": {
        "columns": [
          {
            "field": "division",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many times did Valencia's home team win in the LaLiga division?",
    "gold_sql": "SELECT COUNT(T1.HomeTeam) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'LaLiga' AND T1.HomeTeam = 'Valencia' AND T1.FTR = 'H'",
    "predicted_sql": "SELECT COUNT(CASE WHEN T1.FTR = 'H' THEN 1 ELSE NULL END) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'LaLiga' AND T1.HomeTeam = 'Valencia'"
  },
  {
    "idx": 247,
    "relevant_table_schema": {
      "divisions": {
        "columns": [
          {
            "field": "division",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What's the name of the football division in the Netherlands?",
    "gold_sql": "SELECT name FROM divisions WHERE country = 'Netherlands'",
    "predicted_sql": "SELECT name FROM divisions WHERE country = 'Netherlands' AND division = 'football'"
  },
  {
    "idx": 248,
    "relevant_table_schema": {
      "matchs": {
        "columns": [
          {
            "field": "foreign key(Div) references divisions(division)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HomeTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AwayTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTHG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTAG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTR",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "divisions": {
        "columns": [
          {
            "field": "division",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please provide the names of any three away teams that competed in the Italian divisions.",
    "gold_sql": "SELECT T1.AwayTeam FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div=T2.division WHERE T2.country = 'Italy' LIMIT 3",
    "predicted_sql": "SELECT T1.AwayTeam FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Seria A' OR T2.name = 'Seria B' OR T2.name = 'Seria C' OR T2.name = 'Seria D' OR T2.name = 'Seria E' OR T2.name = 'Seria F' OR T2.name = 'Seria G' OR T2.name = 'Seria H' OR T2.name = 'Seria I' OR T2.name = 'Seria L' OR T2.name = 'Seria M' OR T2.name = 'Seria N' OR T2.name = 'Seria O' OR T2.name = 'Seria P' OR T2.name = 'Seria Q' OR T2.name = 'Seria R' OR T2.name = 'Seria S' OR T2.name = 'Seria T' OR T2.name = 'Seria U' OR T2.name = 'Seria V' OR T2.name = 'Seria W' OR T2.name = 'Seria X' OR T2.name = 'Seria Y' OR T2.name = 'Seria Z'"
  },
  {
    "idx": 249,
    "relevant_table_schema": {
      "matchs": {
        "columns": [
          {
            "field": "foreign key(Div) references divisions(division)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HomeTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AwayTeam",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTHG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTAG",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FTR",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "divisions": {
        "columns": [
          {
            "field": "division",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many teams that played in the 2012 season belong to any of the English divisions and what percentage play in each of the divisions?",
    "gold_sql": "SELECT ( SELECT COUNT(T1.Div) AS total FROM matchs T1 INNER JOIN divisions T2 ON T2.division = T1.Div WHERE T2.country = 'England' AND T1.season = 2012 ) AS num , CASE WHEN 1 THEN T.result END AS percentage FROM ( SELECT 100.0 * COUNT(T1.Div) / ( SELECT COUNT(T1.Div) FROM matchs T1 INNER JOIN divisions T2 ON T2.division = T1.Div WHERE T2.country = 'England' AND T1.season = 2012 ) AS result FROM matchs T1 INNER JOIN divisions T2 ON T2.division = T1.Div WHERE T2.country = 'England' AND T1.season = 2012 GROUP BY T2.division ) AS T",
    "predicted_sql": "SELECT COUNT(T1.Div) , CAST(COUNT(CASE WHEN T1.Div = T2.division THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.division) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2012 AND T2.country = 'England'"
  },
  {
    "idx": 250,
    "relevant_table_schema": {
      "coaches": {
        "columns": [
          {
            "field": "coachID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(year) references teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(tmID) references teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "won",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lost",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "post_wins",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "post_losses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Who are the coaches for team with winning rate of 80% and above?",
    "gold_sql": "SELECT coachID FROM coaches GROUP BY tmID, coachID, won, lost HAVING CAST(won AS REAL) * 100 / (won + lost) > 80",
    "predicted_sql": "SELECT coachID FROM coaches GROUP BY tmID, coachID, won, lost HAVING CAST(won AS REAL) * 100 / (won + lost) > 80"
  },
  {
    "idx": 251,
    "relevant_table_schema": {
      "coaches": {
        "columns": [
          {
            "field": "coachID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(year) references teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(tmID) references teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "won",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lost",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "post_wins",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "post_losses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Who is the coach for 'BOS' team in year 1950. List the coach ID together with the number of game won and lost.",
    "gold_sql": "SELECT coachID, won, lost FROM coaches WHERE year = 1950 AND tmID = 'BOS'",
    "predicted_sql": "SELECT coachID, won, lost FROM coaches WHERE year = 1950 AND tmID = 'BOS'"
  },
  {
    "idx": 252,
    "relevant_table_schema": {
      "coaches": {
        "columns": [
          {
            "field": "coachID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(year) references teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(tmID) references teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "won",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lost",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "post_wins",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "post_losses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which coach has serviced in NBA for more than 10 years.",
    "gold_sql": "SELECT coachID FROM coaches WHERE lgID = 'NBA' GROUP BY coachID HAVING MAX(year) - MIN(year) > 10",
    "predicted_sql": "SELECT coachID FROM coaches WHERE year > 10 AND lgID = 'NBA'"
  },
  {
    "idx": 253,
    "relevant_table_schema": {
      "series_post": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(year) references teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "round",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "series",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(tmIDWinner) references teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgIDWinner",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(tmIDLoser) references teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgIDLoser",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "L",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "teams": {
        "columns": [
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "franchID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "confID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "divID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "confRank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "playoff",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_fgm",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_ftm",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_pts",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "d_pts",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "homeWon",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "homeLost",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awayWon",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awayLost",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "won",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lost",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "games",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "arena",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which winning team in the final round of the postseason series games against the LAL won more than 60 games in the NBA league during the year 1996?",
    "gold_sql": "SELECT DISTINCT T2.tmID FROM series_post AS T1 INNER JOIN teams AS T2 ON T1.tmIDWinner = T2.tmID WHERE T2.won > 60 AND T1.year = 1996 AND T1.round = 'CSF' AND T1.tmIDLoser = 'LAL'",
    "predicted_sql": "SELECT T1.tmIDWinner FROM series_post AS T1 INNER JOIN teams AS T2 ON T1.tmIDWinner = T2.tmID WHERE T1.year = 1996 AND T1.round = 'F' AND T1.series = 'LAL' AND T2.won > 60"
  },
  {
    "idx": 254,
    "relevant_table_schema": {
      "players": {
        "columns": [
          {
            "field": "playerID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "useFirst",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middleName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameGiven",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fullGivenName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameSuffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameNick",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pos",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstseason",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastseason",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "college",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "collegeOther",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "highSchool",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hsCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hsState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hsCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "players_teams": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "playerID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(year) references teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "stint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(tmID) references teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GS",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "minutes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "points",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "oRebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dRebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "assists",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "steals",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "blocks",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "turnovers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PF",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fgAttempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fgMade",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ftAttempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ftMade",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "threeAttempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "threeMade",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGS",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostMinutes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostPoints",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostoRebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostdRebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostRebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostAssists",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSteals",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostBlocks",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostTurnovers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostPF",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostfgAttempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostfgMade",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostftAttempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostftMade",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostthreeAttempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostthreeMade",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "note",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the first names of the players with the most personal fouls in the 'NBL' league.",
    "gold_sql": "SELECT T1.firstName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.lgID = 'NBL' GROUP BY T1.playerID, T1.firstName ORDER BY COUNT(PF) DESC LIMIT 1",
    "predicted_sql": "SELECT T1.firstName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.lgID = 'NBL' ORDER BY T2.PF DESC LIMIT 1"
  },
  {
    "idx": 255,
    "relevant_table_schema": {
      "draft": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(draftYear) references teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "draftRound",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftSelection",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftOverall",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(tmID) references teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "firstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffixName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "playerID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftFrom",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "teams": {
        "columns": [
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "franchID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "confID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "divID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "confRank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "playoff",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_fgm",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_ftm",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_pts",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "d_pts",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "homeWon",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "homeLost",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awayWon",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awayLost",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "won",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lost",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "games",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "arena",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In the year 1998, how many home wins did the team which had the 1st round, 12th pick have that year?",
    "gold_sql": "SELECT T2.homeWon FROM draft AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.draftYear = T2.year WHERE T1.draftRound = 1 AND T1.draftSelection = 12 AND T1.draftYear = 1998",
    "predicted_sql": "SELECT T2.homeWon FROM draft AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID WHERE T1.draftYear = 1998 AND T1.draftRound = 1 AND T1.draftSelection = 12"
  },
  {
    "idx": 256,
    "relevant_table_schema": {
      "players": {
        "columns": [
          {
            "field": "playerID",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "useFirst",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middleName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameGiven",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fullGivenName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameSuffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameNick",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pos",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstseason",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastseason",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "college",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "collegeOther",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "highSchool",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hsCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hsState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hsCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "players_teams": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "playerID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(year) references teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "stint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(tmID) references teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GS",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "minutes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "points",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "oRebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dRebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "assists",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "steals",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "blocks",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "turnovers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PF",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fgAttempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fgMade",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ftAttempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ftMade",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "threeAttempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "threeMade",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGS",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostMinutes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostPoints",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostoRebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostdRebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostRebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostAssists",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSteals",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostBlocks",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostTurnovers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostPF",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostfgAttempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostfgMade",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostftAttempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostftMade",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostthreeAttempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostthreeMade",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "note",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the players from the NBL league, how many of them were born in Spencer?",
    "gold_sql": "SELECT COUNT(DISTINCT T1.playerID) FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T1.birthCity = 'Spencer' AND T2.lgID = 'NBL'",
    "predicted_sql": "SELECT COUNT(T1.playerID) FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.lgID = 'NBL' AND T1.birthCity = 'Spencer'"
  },
  {
    "idx": 257,
    "relevant_table_schema": {
      "player_allstar": {
        "columns": [
          {
            "field": "foreign key(playerID) references players(playerID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "conference",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "league_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "games_played",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "minutes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "points",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_rebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "d_rebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rebounds",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "assists",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "steals",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "blocks",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "turnovers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "personal_fouls",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fg_attempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fg_made",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_attempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_made",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "three_attempted",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "three_made",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many players did not get more than 10 steals between the years 2000 and 2005?",
    "gold_sql": "SELECT COUNT(DISTINCT playerID) FROM player_allstar WHERE season_id BETWEEN 2000 AND 2005 AND steals <= 10",
    "predicted_sql": "SELECT COUNT(DISTINCT playerID) FROM player_allstar WHERE season_id BETWEEN 2000 AND 2005 AND steals <= 10"
  },
  {
    "idx": 258,
    "relevant_table_schema": {
      "awards_coaches": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(year) references coaches(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(coachID) references coaches(coachID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "award",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "note",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the coach IDs who received the award twice from 1970 to 1990.",
    "gold_sql": "SELECT coachID FROM awards_coaches WHERE year BETWEEN 1970 AND 1990 GROUP BY coachID, award HAVING COUNT(award) = 2",
    "predicted_sql": "SELECT DISTINCT coachID FROM awards_coaches WHERE year BETWEEN 1970 AND 1990 AND award = 'Coach of the Year'"
  },
  {
    "idx": 259,
    "relevant_table_schema": {
      "draft": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(draftYear) references teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "draftRound",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftSelection",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftOverall",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(tmID) references teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "firstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffixName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "playerID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftFrom",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "teams": {
        "columns": [
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "franchID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "confID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "divID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "confRank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "playoff",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_fgm",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_ftm",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_pts",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "d_pts",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "homeWon",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "homeLost",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awayWon",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awayLost",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "won",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lost",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "games",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "arena",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "For the player who was drafted in the 1st round, 6th position in 1976, which team did he play in that year?",
    "gold_sql": "SELECT T2.tmID FROM draft AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.draftYear = T2.year WHERE T1.draftRound = 1 AND T1.draftSelection = 6 AND T1.draftYear = 1976",
    "predicted_sql": "SELECT T2.name FROM draft AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID WHERE T1.draftYear = 1976 AND T1.draftRound = 1 AND T1.draftSelection = 6"
  },
  {
    "idx": 260,
    "relevant_table_schema": {
      "works": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GenreType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many of Shakespeare's works were finished before the year 1602?",
    "gold_sql": "SELECT COUNT(id) FROM works WHERE Date < 1602",
    "predicted_sql": "SELECT COUNT(*) FROM works WHERE Date < 1602"
  },
  {
    "idx": 261,
    "relevant_table_schema": {
      "works": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GenreType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "chapters": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Act",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Scene",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "work_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Describe the scene number, act, and title of work which had the description of \"The house of ANTIPHOLUS of Ephesus\" in chapter.",
    "gold_sql": "SELECT T2.Act, T2.Scene, T1.Title FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Description = 'The house of ANTIPHOLUS of Ephesus.'",
    "predicted_sql": "SELECT T2.Act, T2.Scene, T1.Title FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Description = 'The house of ANTIPHOLUS of Ephesus'"
  },
  {
    "idx": 262,
    "relevant_table_schema": {
      "chapters": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Act",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Scene",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "work_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "paragraphs": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ParagraphNum",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PlainText",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "character_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "chapter_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the chapter description where the paragraph \"What, wilt thou hear some music, my sweet love?\" belongs?",
    "gold_sql": "SELECT T1.id, T1.Description FROM chapters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.chapter_id WHERE T2.PlainText = 'What, wilt thou hear some music, my sweet love?'",
    "predicted_sql": "SELECT T1.Description FROM chapters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.chapter_id WHERE T2.PlainText = 'What, wilt thou hear some music, my sweet love?'"
  },
  {
    "idx": 263,
    "relevant_table_schema": {
      "works": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GenreType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "chapters": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Act",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Scene",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "work_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "paragraphs": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ParagraphNum",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PlainText",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "character_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "chapter_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "characters": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "CharName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Abbrev",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average number of characters in all the works of Shakespeare?",
    "gold_sql": "SELECT SUM(DISTINCT T4.id) / COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id",
    "predicted_sql": "SELECT CAST(SUM(LEN(T3.PlainText)) AS REAL) / COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T4.CharName = 'Shakespeare, William'"
  },
  {
    "idx": 264,
    "relevant_table_schema": {
      "works": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GenreType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "chapters": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Act",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Scene",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "work_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "paragraphs": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ParagraphNum",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PlainText",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "character_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "chapter_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "characters": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "CharName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Abbrev",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In Shakespeare's works between 1600 to 1610, how many of these have a character as a \"Third Servingman\"?",
    "gold_sql": "SELECT COUNT(DISTINCT T2.work_id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T1.DATE BETWEEN 1600 AND 1610 AND T4.CharName = 'Third Servingman'",
    "predicted_sql": "SELECT COUNT(T4.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T1.Date BETWEEN 1600 AND 1610 AND T4.CharName = 'Third Servingman'"
  },
  {
    "idx": 265,
    "relevant_table_schema": {
      "characters": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "CharName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Abbrev",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "paragraphs": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ParagraphNum",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PlainText",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "character_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "chapter_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the paragraph number and paragraphs said by the character named \"Sir Andrew Aguecheek\".",
    "gold_sql": "SELECT T2.ParagraphNum, T2.id FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T1.CharName = 'Sir Andrew Aguecheek'",
    "predicted_sql": "SELECT T2.ParagraphNum, T2.PlainText FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T1.CharName = 'Sir Andrew Aguecheek'"
  },
  {
    "idx": 266,
    "relevant_table_schema": {
      "works": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GenreType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many of the works of Shakespeare are Tragedy?",
    "gold_sql": "SELECT COUNT(id) FROM works WHERE GenreType = 'Tragedy'",
    "predicted_sql": "SELECT COUNT(id) FROM works WHERE GenreType = 'Tragedy' AND Title = 'Shakespeare'"
  },
  {
    "idx": 267,
    "relevant_table_schema": {
      "works": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GenreType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "chapters": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Act",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Scene",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "work_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "On average, how many scenes are there in each of the comedy works written by Shakespeare?",
    "gold_sql": "SELECT CAST(SUM(T2.Scene) AS REAL) / COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.GenreType = 'Comedy'",
    "predicted_sql": "SELECT CAST(COUNT(T2.id) AS REAL) / COUNT(DISTINCT T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.GenreType = 'comedy' AND T1.id = T2.work_id AND T2.Scene IS NOT NULL"
  },
  {
    "idx": 268,
    "relevant_table_schema": {
      "characters": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "CharName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Abbrev",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What are the character names for a senator of Venice?",
    "gold_sql": "SELECT CharName FROM characters WHERE Description = 'a senator of Venice'",
    "predicted_sql": "SELECT CharName FROM characters WHERE Abbrev = 'Senator of Venice'"
  },
  {
    "idx": 269,
    "relevant_table_schema": {
      "works": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LongTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Date",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GenreType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "chapters": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Act",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Scene",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "work_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many scenes are there in Act 1 in Twelfth Night?",
    "gold_sql": "SELECT COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Act = 1 AND T1.Title = 'Twelfth Night'",
    "predicted_sql": "SELECT SUM(CASE WHEN T1.Title = 'Twelfth Night' AND T2.Act = 1 THEN 1 ELSE 0 END) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id"
  },
  {
    "idx": 270,
    "relevant_table_schema": {
      "data": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ID) references price(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "mpg",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cylinders",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "displacement",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "horsepower",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "acceleration",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "model",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "car_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "price": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What are the miles per gallon of the most expensive car?",
    "gold_sql": "SELECT T1.mpg FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T2.price DESC LIMIT 1",
    "predicted_sql": "SELECT T1.mpg FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T2.price DESC LIMIT 1"
  },
  {
    "idx": 271,
    "relevant_table_schema": {
      "data": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ID) references price(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "mpg",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cylinders",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "displacement",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "horsepower",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "acceleration",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "model",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "car_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "production": {
        "columns": [
          {
            "field": "foreign key(ID) references data(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "model_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(country) references country(origin)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "origin",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the fastest car made by Japan?",
    "gold_sql": "SELECT T1.car_name FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T3.country = 'Japan' ORDER BY T1.horsepower DESC LIMIT 1",
    "predicted_sql": "SELECT T1.car_name FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T3.country = 'Japan' ORDER BY T1.cylinders * T1.displacement / T1.cylinders DESC LIMIT 1"
  },
  {
    "idx": 272,
    "relevant_table_schema": {
      "data": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ID) references price(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "mpg",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cylinders",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "displacement",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "horsepower",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "acceleration",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "model",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "car_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "price": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How much US dollars does a Ford Torino cost?",
    "gold_sql": "SELECT T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'ford torino'",
    "predicted_sql": "SELECT T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'ford torino'"
  },
  {
    "idx": 273,
    "relevant_table_schema": {
      "data": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ID) references price(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "mpg",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cylinders",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "displacement",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "horsepower",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "acceleration",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "model",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "car_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "production": {
        "columns": [
          {
            "field": "foreign key(ID) references data(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "model_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(country) references country(origin)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "origin",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the percentage of cars that was produced by Japan among those that have a sweep volume of no less than 30?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T3.country = 'Japan' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T1.displacement / T1.cylinders > 30",
    "predicted_sql": "SELECT CAST(COUNT(CASE WHEN T2.country = 3 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T1.cylinders = 4 AND T1.displacement = 75 AND T1.horsepower = 110 AND T1.weight = 3600 AND T1.acceleration = 12 AND T1.cylinders = 4 AND T1.displacement = 75 AND T1.horsepower = 110 AND T1.weight = 3600 AND T1.acceleration = 12 AND T1.cylinders = 4 AND T1.displacement = 75 AND T1.horsepower = 110 AND T1.weight = 3600 AND T1.acceleration = 12 AND T1.cylinders = 4 AND T1.displacement = 75 AND T1.horsepower = 110 AND T1.weight = 3600 AND T1.acceleration = 12 AND T1.cylinders = 4 AND T1.displacement = 75 AND T1.horsepower = 110 AND T1.weight = 3600 AND T1.acceleration = 12 AND T1.cylinders = 4 AND T1.displacement = 75 AND T1.horsepower = 110 AND T1.weight = 3600 AND T1.acceleration = 12 AND T1.cylinders = 4 AND T1.displacement = 75 AND T1.horsepower = 110 AND T1.weight = 3600 AND T1.acceleration = 12 AND T1.cylinders = 4 AND T1.displacement = 75 AND T1"
  },
  {
    "idx": 274,
    "relevant_table_schema": {
      "data": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ID) references price(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "mpg",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cylinders",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "displacement",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "horsepower",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "acceleration",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "model",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "car_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "price": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which car in the database provides the best crash protection based on its weight? How much is it?",
    "gold_sql": "SELECT T1.ID, T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T1.weight DESC LIMIT 1",
    "predicted_sql": "SELECT T1.car_name, T1.weight FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T1.weight DESC LIMIT 1"
  },
  {
    "idx": 275,
    "relevant_table_schema": {
      "data": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ID) references price(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "mpg",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cylinders",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "displacement",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "horsepower",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "acceleration",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "model",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "car_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "production": {
        "columns": [
          {
            "field": "foreign key(ID) references data(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "model_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(country) references country(origin)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Among the cars produced in year 1973, how many of the cars have horsepower less than 100?",
    "gold_sql": "SELECT COUNT(*) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T2.model_year = 1973 AND T1.horsepower < 100",
    "predicted_sql": "SELECT COUNT(T1.ID) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T2.model_year = 1973 AND T1.horsepower < 100"
  },
  {
    "idx": 276,
    "relevant_table_schema": {
      "data": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ID) references price(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "mpg",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cylinders",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "displacement",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "horsepower",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "acceleration",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "model",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "car_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "production": {
        "columns": [
          {
            "field": "foreign key(ID) references data(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "model_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(country) references country(origin)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "origin",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average weight of Japanese cars with 4 cylinders that were produced from 1975 to 1980?",
    "gold_sql": "SELECT AVG(T1.weight) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T2.model_year BETWEEN 1975 AND 1980 AND T1.cylinders = 4 AND T3.country = 'Japan'",
    "predicted_sql": "SELECT AVG(T1.weight) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T2.model_year BETWEEN 1975 AND 1980 AND T3.country = 'Japan' AND T1.cylinders = 4"
  },
  {
    "idx": 277,
    "relevant_table_schema": {
      "data": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ID) references price(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "mpg",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cylinders",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "displacement",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "horsepower",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "acceleration",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "model",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "car_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "price": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the name of the most expensive car.",
    "gold_sql": "SELECT T1.car_name FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T2.price DESC LIMIT 1",
    "predicted_sql": "SELECT T1.car_name FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T2.price DESC LIMIT 1"
  },
  {
    "idx": 278,
    "relevant_table_schema": {
      "price": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "production": {
        "columns": [
          {
            "field": "foreign key(ID) references data(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "model_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(country) references country(origin)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "origin",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "data": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ID) references price(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "mpg",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cylinders",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "displacement",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "horsepower",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "acceleration",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "model",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "car_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the miles per square hour of the cheapest car produced by the USA?",
    "gold_sql": "SELECT T4.acceleration FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country INNER JOIN data AS T4 ON T4.ID = T1.ID WHERE T3.country = 'USA' ORDER BY T1.price ASC LIMIT 1",
    "predicted_sql": "SELECT T4.mpg FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country INNER JOIN data AS T4 ON T4.ID = T1.ID WHERE T3.country = 'USA' ORDER BY T1.price ASC LIMIT 1"
  },
  {
    "idx": 279,
    "relevant_table_schema": {
      "production": {
        "columns": [
          {
            "field": "foreign key(ID) references data(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "model_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(country) references country(origin)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "data": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ID) references price(ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "mpg",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cylinders",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "displacement",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "horsepower",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "acceleration",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "model",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "car_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Calculate the average production rate per year from 1971 to 1980. Among them, name the cars with a weight of fewer than 1800 lbs.",
    "gold_sql": "SELECT CAST(COUNT(T1.ID) AS REAL) / 9 FROM production AS T1 INNER JOIN data AS T2 ON T2.ID = T1.ID WHERE T1.model_year BETWEEN 1971 AND 1980 UNION ALL SELECT DISTINCT T2.car_name FROM production AS T1 INNER JOIN data AS T2 ON T2.ID = T1.ID WHERE T1.model_year BETWEEN 1971 AND 1980 AND T2.weight < 1800",
    "predicted_sql": "SELECT AVG(T1.model_year), T2.car_name FROM production AS T1 INNER JOIN data AS T2 ON T1.ID = T2.ID WHERE T1.model_year BETWEEN 1971 AND 1980 AND T2.weight < 1800"
  },
  {
    "idx": 280,
    "relevant_table_schema": {
      "projects": {
        "columns": [
          {
            "field": "projectid",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "teacher_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "schoolid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_ncesid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_metro",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_district",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_charter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_magnet",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_year_round",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_nlns",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_kipp",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_charter_ready_promise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_prefix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_teach_for_america",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_ny_teaching_fellow",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "primary_focus_subject",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "primary_focus_area",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_focus_subject",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_focus_area",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resource_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "poverty_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grade_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fulfillment_labor_materials",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_price_excluding_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_price_including_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "students_reached",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "eligible_double_your_impact_match",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "eligible_almost_home_match",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_posted",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "donations": {
        "columns": [
          {
            "field": "donationid",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(projectid) references projects(projectid)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "donor_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donor_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donor_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donor_zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "is_teacher_acct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_timestamp",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_to_project",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_total",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dollar_amount",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_included_optional_support",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_method",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_included_acct_credit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_included_campaign_gift_card",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_included_web_purchased_gift_card",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_was_promo_matched",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "via_giving_page",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "for_honoree",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_message",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the total donated amount for projects created by a teacher working in a school in Brooklyn?",
    "gold_sql": "SELECT SUM(T2.donation_total) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.school_city = 'Brooklyn'",
    "predicted_sql": "SELECT SUM(T2.donation_total) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.school_city = 'Brooklyn'"
  },
  {
    "idx": 281,
    "relevant_table_schema": {
      "essays": {
        "columns": [
          {
            "field": "projectid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "short_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "need_statement",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "essay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "donations": {
        "columns": [
          {
            "field": "donationid",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(projectid) references projects(projectid)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "donor_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donor_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donor_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donor_zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "is_teacher_acct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_timestamp",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_to_project",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_total",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dollar_amount",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_included_optional_support",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_method",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_included_acct_credit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_included_campaign_gift_card",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_included_web_purchased_gift_card",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_was_promo_matched",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "via_giving_page",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "for_honoree",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_message",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the teacher's account ID for the project that got the donation at 11:38:43 on 2008/7/29 ?",
    "gold_sql": "SELECT T1.teacher_acctid FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.donation_timestamp LIKE '2008-07-29 11:38:43.361'",
    "predicted_sql": "SELECT T1.teacher_acctid FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.donation_timestamp LIKE '2008-07-29 11:38:43'"
  },
  {
    "idx": 282,
    "relevant_table_schema": {
      "projects": {
        "columns": [
          {
            "field": "projectid",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "teacher_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "schoolid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_ncesid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_metro",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_district",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_charter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_magnet",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_year_round",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_nlns",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_kipp",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_charter_ready_promise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_prefix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_teach_for_america",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_ny_teaching_fellow",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "primary_focus_subject",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "primary_focus_area",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_focus_subject",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_focus_area",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resource_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "poverty_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grade_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fulfillment_labor_materials",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_price_excluding_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_price_including_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "students_reached",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "eligible_double_your_impact_match",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "eligible_almost_home_match",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_posted",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "donations": {
        "columns": [
          {
            "field": "donationid",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(projectid) references projects(projectid)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "donor_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donor_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donor_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donor_zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "is_teacher_acct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_timestamp",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_to_project",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_total",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dollar_amount",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_included_optional_support",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_method",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_included_acct_credit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_included_campaign_gift_card",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_included_web_purchased_gift_card",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_was_promo_matched",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "via_giving_page",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "for_honoree",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_message",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the schools donated by donor \"000eebf28658900e63b538cf8a73afbd\",how many schools whose poverty level are highest?",
    "gold_sql": "SELECT COUNT(T1.schoolid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.poverty_level = 'highest poverty' AND T2.donor_acctid = '000eebf28658900e63b538cf8a73afbd'",
    "predicted_sql": "SELECT COUNT(T1.schoolid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.donor_acctid = '000eebf28658900e63b538cf8a73afbd' AND T1.poverty_level = 'Highest'"
  },
  {
    "idx": 283,
    "relevant_table_schema": {
      "projects": {
        "columns": [
          {
            "field": "projectid",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "teacher_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "schoolid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_ncesid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_metro",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_district",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_charter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_magnet",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_year_round",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_nlns",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_kipp",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_charter_ready_promise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_prefix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_teach_for_america",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_ny_teaching_fellow",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "primary_focus_subject",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "primary_focus_area",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_focus_subject",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_focus_area",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resource_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "poverty_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grade_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fulfillment_labor_materials",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_price_excluding_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_price_including_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "students_reached",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "eligible_double_your_impact_match",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "eligible_almost_home_match",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_posted",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "essays": {
        "columns": [
          {
            "field": "projectid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "short_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "need_statement",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "essay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In what percentage of counties has the ABC Read project been launched?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T2.title LIKE 'ABC Read' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.school_county) FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid",
    "predicted_sql": "SELECT CAST(COUNT(CASE WHEN T1.projectid = 'ABC Read' THEN T1.school_county ELSE NULL END) AS REAL) * 100 / COUNT(T1.school_county) FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid"
  },
  {
    "idx": 284,
    "relevant_table_schema": {
      "resources": {
        "columns": [
          {
            "field": "resourceid",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(projectid) references projects(projectid)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "vendorid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vendor_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "project_resource_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_unit_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the name of the item that is provided in the biggest amount by the vendor Lakeshore Learning Materials?",
    "gold_sql": "SELECT item_name FROM resources WHERE vendor_name = 'Lakeshore Learning Materials' ORDER BY item_quantity DESC LIMIT 1",
    "predicted_sql": "SELECT item_name FROM resources WHERE vendor_name = 'Lakeshore Learning Materials' ORDER BY item_quantity DESC LIMIT 1"
  },
  {
    "idx": 285,
    "relevant_table_schema": {
      "projects": {
        "columns": [
          {
            "field": "projectid",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "teacher_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "schoolid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_ncesid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_metro",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_district",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_charter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_magnet",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_year_round",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_nlns",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_kipp",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_charter_ready_promise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_prefix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_teach_for_america",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_ny_teaching_fellow",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "primary_focus_subject",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "primary_focus_area",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_focus_subject",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_focus_area",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resource_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "poverty_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grade_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fulfillment_labor_materials",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_price_excluding_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_price_including_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "students_reached",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "eligible_double_your_impact_match",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "eligible_almost_home_match",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_posted",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many schools in Suffolk County have Ph.D. teachers?",
    "gold_sql": "SELECT COUNT(schoolid) FROM projects WHERE teacher_prefix = 'Dr.' AND school_county = 'Suffolk'",
    "predicted_sql": "SELECT COUNT(school_county) FROM projects WHERE school_county = 'Suffolk County' AND teacher_acctid LIKE '%.d%'"
  },
  {
    "idx": 286,
    "relevant_table_schema": {
      "resources": {
        "columns": [
          {
            "field": "resourceid",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(projectid) references projects(projectid)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "vendorid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vendor_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "project_resource_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_unit_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "projects": {
        "columns": [
          {
            "field": "projectid",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "teacher_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "schoolid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_ncesid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_metro",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_district",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_charter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_magnet",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_year_round",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_nlns",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_kipp",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_charter_ready_promise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_prefix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_teach_for_america",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_ny_teaching_fellow",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "primary_focus_subject",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "primary_focus_area",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_focus_subject",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_focus_area",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resource_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "poverty_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grade_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fulfillment_labor_materials",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_price_excluding_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_price_including_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "students_reached",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "eligible_double_your_impact_match",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "eligible_almost_home_match",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_posted",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "When was the project with the highest quantity went live on the site? Indicate the grade level for which the project materials are intended.",
    "gold_sql": "SELECT T2.date_posted, T2.grade_level FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid ORDER BY T1.item_quantity DESC LIMIT 1",
    "predicted_sql": "SELECT T2.date_posted, T2.grade_level FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid ORDER BY T1.item_quantity DESC LIMIT 1"
  },
  {
    "idx": 287,
    "relevant_table_schema": {
      "essays": {
        "columns": [
          {
            "field": "projectid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "short_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "need_statement",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "essay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "donations": {
        "columns": [
          {
            "field": "donationid",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(projectid) references projects(projectid)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "donor_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donor_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donor_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donor_zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "is_teacher_acct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_timestamp",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_to_project",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_total",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dollar_amount",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_included_optional_support",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_method",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_included_acct_credit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_included_campaign_gift_card",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_included_web_purchased_gift_card",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_was_promo_matched",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "via_giving_page",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "for_honoree",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "donation_message",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many number of donations did the project 'A Rug For Reaching Readers' get?",
    "gold_sql": "SELECT SUM(T2.donation_total) FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'A Rug For Reaching Readers'",
    "predicted_sql": "SELECT SUM(T2.donation_total) FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.title = 'A Rug For Reaching Readers'"
  },
  {
    "idx": 288,
    "relevant_table_schema": {
      "resources": {
        "columns": [
          {
            "field": "resourceid",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(projectid) references projects(projectid)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "vendorid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vendor_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "project_resource_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_unit_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "projects": {
        "columns": [
          {
            "field": "projectid",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "teacher_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "schoolid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_ncesid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_metro",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_district",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_charter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_magnet",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_year_round",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_nlns",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_kipp",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_charter_ready_promise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_prefix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_teach_for_america",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_ny_teaching_fellow",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "primary_focus_subject",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "primary_focus_area",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_focus_subject",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_focus_area",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resource_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "poverty_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grade_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fulfillment_labor_materials",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_price_excluding_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_price_including_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "students_reached",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "eligible_double_your_impact_match",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "eligible_almost_home_match",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_posted",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the school districts that have bought resources from Barnes and Noble.",
    "gold_sql": "SELECT T2.school_district FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.vendor_name = 'Barnes and Noble'",
    "predicted_sql": "SELECT DISTINCT T2.school_district FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.vendor_name = 'Barnes & Noble'"
  },
  {
    "idx": 289,
    "relevant_table_schema": {
      "essays": {
        "columns": [
          {
            "field": "projectid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "short_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "need_statement",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "essay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "projects": {
        "columns": [
          {
            "field": "projectid",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "teacher_acctid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "schoolid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_ncesid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_metro",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_district",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_charter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_magnet",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_year_round",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_nlns",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_kipp",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "school_charter_ready_promise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_prefix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_teach_for_america",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "teacher_ny_teaching_fellow",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "primary_focus_subject",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "primary_focus_area",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_focus_subject",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_focus_area",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resource_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "poverty_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grade_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fulfillment_labor_materials",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_price_excluding_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_price_including_optional_support",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "students_reached",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "eligible_double_your_impact_match",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "eligible_almost_home_match",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_posted",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Show the school id for the project 'Virtual Aquarium Needs Help!'.",
    "gold_sql": "SELECT T2.schoolid FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Virtual Aquarium Needs Help!'",
    "predicted_sql": "SELECT T2.schoolid FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.title = 'Virtual Aquarium Needs Help!'"
  },
  {
    "idx": 290,
    "relevant_table_schema": {
      "game": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(genre_id) references genre(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "game_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many games include the word 'Box' in their name?",
    "gold_sql": "SELECT COUNT(*) FROM ( SELECT T.game_name FROM game AS T WHERE T.game_name LIKE '%Box%' )",
    "predicted_sql": "SELECT COUNT(id) FROM game WHERE game_name LIKE '%Box%'"
  },
  {
    "idx": 291,
    "relevant_table_schema": {
      "game_platform": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(game_publisher_id) references game_publisher(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(platform_id) references platform(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "release_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "game_publisher": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(game_id) references game(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(publisher_id) references publisher(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "game": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(genre_id) references genre(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "game_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What are the names of games that were released in 2007?",
    "gold_sql": "SELECT T3.game_name FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.release_year = 2007",
    "predicted_sql": "SELECT T3.game_name FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.release_year = 2007"
  },
  {
    "idx": 292,
    "relevant_table_schema": {
      "publisher": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "publisher_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "game_publisher": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(game_id) references game(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(publisher_id) references publisher(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "How many games did Electronic Arts publish?",
    "gold_sql": "SELECT COUNT(DISTINCT T2.game_id) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name = 'Electronic Arts'",
    "predicted_sql": "SELECT COUNT(T2.game_id) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name = 'Electronic Arts'"
  },
  {
    "idx": 293,
    "relevant_table_schema": {
      "game": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(genre_id) references genre(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "game_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "genre": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "genre_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many games in the database belong to the genre of sports?",
    "gold_sql": "SELECT COUNT(T1.id) FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T2.genre_name = 'Sports'",
    "predicted_sql": "SELECT COUNT(T1.id) FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T2.genre_name = 'Sports'"
  },
  {
    "idx": 294,
    "relevant_table_schema": {
      "genre": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "genre_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "game": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(genre_id) references genre(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "game_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the genre of the game \"Mario vs. Donkey Kong\"?",
    "gold_sql": "SELECT T1.genre_name FROM genre AS T1 INNER JOIN game AS T2 ON T1.id = T2.genre_id WHERE T2.game_name = 'Mario vs. Donkey Kong'",
    "predicted_sql": "SELECT T1.genre_name FROM genre AS T1 INNER JOIN game AS T2 ON T1.id = T2.genre_id WHERE T2.game_name = 'Mario vs. Donkey Kong'"
  },
  {
    "idx": 295,
    "relevant_table_schema": {
      "game": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(genre_id) references genre(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "game_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "genre": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "genre_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Give the genre of the following game titled 'Airlock' , 'Airline Tycoon' , and 'Airblade', respectively.",
    "gold_sql": "SELECT T2.genre_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T1.game_name IN ('Airlock', 'Airline Tycoon', 'Airblade')",
    "predicted_sql": "SELECT T2.genre_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T1.game_name IN ('Airlock', 'Airline Tycoon', 'Airblade')"
  },
  {
    "idx": 296,
    "relevant_table_schema": {
      "game_platform": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(game_publisher_id) references game_publisher(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(platform_id) references platform(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "release_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many games were released in the year 2001?",
    "gold_sql": "SELECT COUNT(id) FROM game_platform AS T WHERE T.release_year = 2001",
    "predicted_sql": "SELECT COUNT(release_year) FROM game_platform WHERE release_year = 2001"
  },
  {
    "idx": 297,
    "relevant_table_schema": {
      "platform": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "platform_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "game_platform": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(game_publisher_id) references game_publisher(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(platform_id) references platform(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "release_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "game_publisher": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(game_id) references game(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(publisher_id) references publisher(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "game": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(genre_id) references genre(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "game_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the games available on Wii.",
    "gold_sql": "SELECT T4.game_name FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN game_publisher AS T3 ON T2.game_publisher_id = T3.id INNER JOIN game AS T4 ON T3.game_id = T4.id WHERE T1.platform_name = 'Wii'",
    "predicted_sql": "SELECT T4.game_name FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN game_publisher AS T3 ON T3.id = T2.game_publisher_id INNER JOIN game AS T4 ON T4.id = T3.game_id WHERE T1.platform_name = 'Wii'"
  },
  {
    "idx": 298,
    "relevant_table_schema": {
      "publisher": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "publisher_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "game_publisher": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(game_id) references game(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(publisher_id) references publisher(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Give the number of games which were published by Ascaron Entertainment GmbH.",
    "gold_sql": "SELECT COUNT(T2.game_id) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name = 'Ascaron Entertainment GmbH'",
    "predicted_sql": "SELECT COUNT(T2.game_id) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name = 'Ascaron Entertainment GmbH'"
  },
  {
    "idx": 299,
    "relevant_table_schema": {
      "game_platform": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(game_publisher_id) references game_publisher(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(platform_id) references platform(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "release_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "game_publisher": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(game_id) references game(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(publisher_id) references publisher(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "game": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(genre_id) references genre(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "game_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Name the game released in 2011.",
    "gold_sql": "SELECT T3.game_name FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.release_year = 2011",
    "predicted_sql": "SELECT T3.game_name FROM ( SELECT T1.game_id, T1.release_year FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.release_year = 2011 ) t"
  },
  {
    "idx": 300,
    "relevant_table_schema": {
      "journal": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ShortName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FullName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HomePage",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "paper": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ConferenceId) references Conference(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(JournalId) references Journal(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Keyword",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many papers were published in the journal \"Concepts in Magnetic Resonance Part A\"?",
    "gold_sql": "SELECT COUNT(T2.Id) FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'Concepts in Magnetic Resonance Part A'",
    "predicted_sql": "SELECT COUNT(T2.Id) FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'Concepts in Magnetic Resonance Part A'"
  },
  {
    "idx": 301,
    "relevant_table_schema": {
      "paper": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ConferenceId) references Conference(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(JournalId) references Journal(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Keyword",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "paperauthor": {
        "columns": [
          {
            "field": "foreign key(PaperId) references Paper(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(AuthorId) references Author(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Affiliation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all the title of the paper that Jianli Hua published.",
    "gold_sql": "SELECT T1.Title FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T2.Name = 'Jianli Hua'",
    "predicted_sql": "SELECT T1.Title FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T2.Name = 'Jianli Hua'"
  },
  {
    "idx": 302,
    "relevant_table_schema": {
      "paper": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ConferenceId) references Conference(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(JournalId) references Journal(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Keyword",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What percentage of papers were preprinted after the year 2000?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN Year > 2000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Id) FROM Paper",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN Year > 2000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Id) FROM Paper"
  },
  {
    "idx": 303,
    "relevant_table_schema": {
      "paper": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ConferenceId) references Conference(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(JournalId) references Journal(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Keyword",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many papers were published in 2005. Calculate the difference between the number of paper published in 2005 and the number of paper published in the previous year.",
    "gold_sql": "SELECT SUM(CASE WHEN Year = 2005 THEN 1 ELSE 0 END) , SUM(CASE WHEN year = 2005 THEN 1 ELSE 0 END) - SUM(CASE WHEN year = 2004 THEN 1 ELSE 0 END) AS diff FROM Paper",
    "predicted_sql": "SELECT COUNT(Id) FROM Paper WHERE Year = 2005 UNION ALL SELECT COUNT(Id) - ( SELECT COUNT(Id) FROM Paper WHERE Year = 2004 ) FROM Paper WHERE Year = 2005"
  },
  {
    "idx": 304,
    "relevant_table_schema": {
      "paper": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ConferenceId) references Conference(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(JournalId) references Journal(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Keyword",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "paperauthor": {
        "columns": [
          {
            "field": "foreign key(PaperId) references Paper(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(AuthorId) references Author(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Affiliation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the author ID and their affiliations of authors of the papers with a journal ID of 0 and published in 2009.",
    "gold_sql": "SELECT DISTINCT T2.AuthorId, T2.Affiliation FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.JournalId = 0 AND T1.Year = 2009 AND T2.Affiliation IS NOT NULL",
    "predicted_sql": "SELECT T2.AuthorId, T2.Affiliation FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.JournalId = 0 AND T1.Year = 2009"
  },
  {
    "idx": 305,
    "relevant_table_schema": {
      "author": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Affiliation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the ratio of author with affiliation and without affiliation?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN Affiliation IS NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(*) FROM Author",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN Affiliation = '' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Affiliation IS NOT NULL THEN 1 ELSE 0 END) FROM Author"
  },
  {
    "idx": 306,
    "relevant_table_schema": {
      "paper": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ConferenceId) references Conference(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(JournalId) references Journal(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Keyword",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What was the topic of the article \"A Formal Approach to Service Component Architecture\" and when was it published?",
    "gold_sql": "SELECT Keyword, Year FROM Paper WHERE Title = 'A Formal Approach to Service Component Architecture'",
    "predicted_sql": "SELECT DISTINCT T1.Keyword, T1.Year FROM Paper AS T1 WHERE T1.Title = 'A Formal Approach to Service Component Architecture'"
  },
  {
    "idx": 307,
    "relevant_table_schema": {
      "paper": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ConferenceId) references Conference(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(JournalId) references Journal(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Keyword",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "paperauthor": {
        "columns": [
          {
            "field": "foreign key(PaperId) references Paper(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(AuthorId) references Author(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Affiliation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List author affiliation for papers whose topic is Quantum Physics.",
    "gold_sql": "SELECT T2.Affiliation FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Keyword = 'Quantum Physics'",
    "predicted_sql": "SELECT DISTINCT T2.Affiliation FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Keyword = 'Quantum Physics'"
  },
  {
    "idx": 308,
    "relevant_table_schema": {
      "paper": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ConferenceId) references Conference(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(JournalId) references Journal(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Keyword",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "paperauthor": {
        "columns": [
          {
            "field": "foreign key(PaperId) references Paper(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(AuthorId) references Author(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Affiliation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list all of the associations that the authors of the paper \"FIBER: A Generalized Framework for Auto-tuning Software\" are affiliated with.",
    "gold_sql": "SELECT DISTINCT T2.Affiliation FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = 'FIBER: A Generalized Framework for Auto-tuning Software'",
    "predicted_sql": "SELECT DISTINCT T2.Affiliation FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = 'FIBER: A Generalized Framework for Auto-tuning Software'"
  },
  {
    "idx": 309,
    "relevant_table_schema": {
      "paperauthor": {
        "columns": [
          {
            "field": "foreign key(PaperId) references Paper(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(AuthorId) references Author(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Affiliation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "paper": {
        "columns": [
          {
            "field": "Id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ConferenceId) references Conference(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(JournalId) references Journal(Id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Keyword",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the title of the paper with the most authors?",
    "gold_sql": "SELECT T2.Title FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id GROUP BY T1.PaperId ORDER BY COUNT(T1.PaperId) DESC LIMIT 1",
    "predicted_sql": "SELECT T2.Title FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id GROUP BY T1.PaperId ORDER BY COUNT(T1.AuthorId) DESC LIMIT 1"
  },
  {
    "idx": 310,
    "relevant_table_schema": {
      "institution_details": {
        "columns": [
          {
            "field": "unitid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "chronname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "basic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hbcu",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "flagship",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "long_x",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lat_y",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "site",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_state_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_natl_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_state_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_natl_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_pct",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_year",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "similar",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_sector_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "carnegie_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "counted_pct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nicknames",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort_size",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "institution_grads": {
        "columns": [
          {
            "field": "foreign key(unitid) references institution_details(unitid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In total, how many Hispanic male students graduated from Amridge University?",
    "gold_sql": "SELECT SUM(T2.grad_cohort) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T1.chronname = 'Amridge University' AND T2.gender = 'M' AND T2.race = 'H'",
    "predicted_sql": "SELECT SUM(CASE WHEN T2.gender = 'M' THEN T2.grad_cohort ELSE 0 END) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T1.chronname = 'Amridge University' AND T2.race = 'H'"
  },
  {
    "idx": 311,
    "relevant_table_schema": {
      "state_sector_details": {
        "columns": [
          {
            "field": "stateid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state) references institution_details(state)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "state_post",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "schools_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "counted_pct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_state_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_natl_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_state_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_natl_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_appr_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_appr_rank",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_rate_rank",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_rank",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "state_sector_grads": {
        "columns": [
          {
            "field": "foreign key(stateid) references state_sector_details(stateid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(state) references institution_details(state)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "state_abbr",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In year 2010 at schools located in Hawaii, what is the percentage of schools offers an associate's degree?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T2.level = '2-year' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.level) FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.stateid = T1.stateid WHERE T2.state = 'Hawaii' AND T2.year = 2010",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN T1.level = '4-year' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.stateid) FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.stateid = T2.stateid WHERE T2.year = 2010 AND T1.state = 'Hawaii'"
  },
  {
    "idx": 312,
    "relevant_table_schema": {
      "state_sector_details": {
        "columns": [
          {
            "field": "stateid",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state) references institution_details(state)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "state_post",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "schools_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "counted_pct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_state_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_natl_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_state_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_natl_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_appr_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_appr_rank",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_rate_rank",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_rank",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "state_sector_grads": {
        "columns": [
          {
            "field": "foreign key(stateid) references state_sector_details(stateid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(state) references institution_details(state)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "state_abbr",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the states with a public school count of 20 and below, list their race.",
    "gold_sql": "SELECT DISTINCT T2.race FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.stateid = T1.stateid WHERE T1.schools_count <= 20 AND T1.control = 'Public'",
    "predicted_sql": "SELECT T2.race FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.stateid = T2.stateid WHERE T1.schools_count = 20 AND T1.level = 'Public 4-year'"
  },
  {
    "idx": 313,
    "relevant_table_schema": {
      "institution_details": {
        "columns": [
          {
            "field": "unitid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "chronname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "basic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hbcu",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "flagship",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "long_x",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lat_y",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "site",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_state_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_natl_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_state_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_natl_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_pct",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_year",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "similar",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_sector_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "carnegie_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "counted_pct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nicknames",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort_size",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "state_sector_grads": {
        "columns": [
          {
            "field": "foreign key(stateid) references state_sector_details(stateid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(state) references institution_details(state)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "state_abbr",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Give the web site address for the school in \"PA\" state with the highest latitude.",
    "gold_sql": "SELECT DISTINCT T1.site FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'PA' AND T1.lat_y = ( SELECT MAX(T1.lat_y) FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'PA' )",
    "predicted_sql": "SELECT DISTINCT T1.site FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.state_abbr = 'PA' ORDER BY T1.lat_y DESC LIMIT 1"
  },
  {
    "idx": 314,
    "relevant_table_schema": {
      "institution_details": {
        "columns": [
          {
            "field": "unitid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "chronname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "basic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hbcu",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "flagship",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "long_x",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lat_y",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "site",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_state_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_natl_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_state_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_natl_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_pct",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_year",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "similar",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_sector_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "carnegie_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "counted_pct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nicknames",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort_size",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "state_sector_grads": {
        "columns": [
          {
            "field": "foreign key(stateid) references state_sector_details(stateid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(state) references institution_details(state)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "state_abbr",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Give the name of the 4-year public school in \"ID\" with the lowest graduation 100 value.",
    "gold_sql": "SELECT T1.chronname FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'ID' AND T1.level = '4-year' AND T1.control = 'Public' GROUP BY T1.chronname ORDER BY SUM(T1.grad_100_value) ASC LIMIT 1",
    "predicted_sql": "SELECT T1.chronname FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.state_abbr = 'ID' AND T1.level = '4-year' ORDER BY T2.grad_100 ASC LIMIT 1"
  },
  {
    "idx": 315,
    "relevant_table_schema": {
      "institution_details": {
        "columns": [
          {
            "field": "unitid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "chronname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "basic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hbcu",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "flagship",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "long_x",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lat_y",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "site",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_state_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_natl_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_state_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_natl_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_pct",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_year",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "similar",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_sector_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "carnegie_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "counted_pct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nicknames",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort_size",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "institution_grads": {
        "columns": [
          {
            "field": "foreign key(unitid) references institution_details(unitid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Calculate the percentage of Asian students among students of other races who graduated from institution in Alabama in year 2013 within 100 percent of normal / expected time.",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T2.race = 'A' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(T2.grad_cohort) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T2.year = 2013 AND T1.state = 'Alabama'",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN T2.race = 'A' THEN T2.grad_100 ELSE 0 END) AS REAL) * 100 / SUM(T2.grad_100) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T2.year = 2013 AND T1.state = 'AL'"
  },
  {
    "idx": 316,
    "relevant_table_schema": {
      "institution_details": {
        "columns": [
          {
            "field": "unitid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "chronname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "basic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hbcu",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "flagship",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "long_x",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lat_y",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "site",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_state_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_natl_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_state_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_natl_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_pct",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_year",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "similar",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_sector_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "carnegie_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "counted_pct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nicknames",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort_size",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "state_sector_grads": {
        "columns": [
          {
            "field": "foreign key(stateid) references state_sector_details(stateid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(state) references institution_details(state)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "state_abbr",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which 4-year private for-profit school in \"KY\" has the highest graudation 150 value? Give the ID for the school.",
    "gold_sql": "SELECT T1.chronname, T1.unitid FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'KY' AND T1.level = '4-year' AND T1.control = 'Private for-profit' GROUP BY T1.chronname ORDER BY SUM(T1.grad_150_value) DESC LIMIT 1",
    "predicted_sql": "SELECT T1.unitid FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.state_abbr = 'KY' AND T1.level = '4-year private for-profit' ORDER BY T1.grad_150_value DESC LIMIT 1"
  },
  {
    "idx": 317,
    "relevant_table_schema": {
      "institution_details": {
        "columns": [
          {
            "field": "unitid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "chronname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "basic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hbcu",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "flagship",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "long_x",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lat_y",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "site",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_state_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_natl_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_state_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_natl_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_pct",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_year",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "similar",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_sector_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "carnegie_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "counted_pct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nicknames",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort_size",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "institution_grads": {
        "columns": [
          {
            "field": "foreign key(unitid) references institution_details(unitid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the public institutes in the state of Alabama, how many of them have over 30 students who graduated within 100 percent of normal/expected time in 2011?",
    "gold_sql": "SELECT COUNT(T1.chronname) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.state = 'Alabama' AND T1.control = 'Public' AND T2.year = 2011 AND T2.grad_100 > 30",
    "predicted_sql": "SELECT COUNT(*) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T2.year = 2011 AND T2.grad_100 = 'Y' AND T1.state = 'AL' AND T1.student_count > 30"
  },
  {
    "idx": 318,
    "relevant_table_schema": {
      "institution_details": {
        "columns": [
          {
            "field": "unitid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "chronname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "basic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hbcu",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "flagship",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "long_x",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lat_y",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "site",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_state_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_natl_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_state_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_natl_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_pct",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_year",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "similar",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_sector_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "carnegie_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "counted_pct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nicknames",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort_size",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "state_sector_grads": {
        "columns": [
          {
            "field": "foreign key(stateid) references state_sector_details(stateid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(state) references institution_details(state)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "state_abbr",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all the public institutes from the state with the least number of graduate cohort in 2013.",
    "gold_sql": "SELECT T1.chronname FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.year = 2013 AND T1.control = 'Public' ORDER BY T2.grad_cohort LIMIT 1",
    "predicted_sql": "SELECT DISTINCT T1.chronname FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.year = 2013 AND T2.grad_cohort = ( SELECT MIN(T2.grad_cohort) FROM state_sector_grads AS T2 )"
  },
  {
    "idx": 319,
    "relevant_table_schema": {
      "institution_details": {
        "columns": [
          {
            "field": "unitid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "chronname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "control",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "basic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hbcu",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "flagship",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "long_x",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lat_y",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "site",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_state_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "awards_per_natl_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_state_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_natl_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "exp_award_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_pct",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fte_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "med_sat_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aid_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "endow_percentile",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pell_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retain_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_value",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ft_fac_percentile",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_year",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_first",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after4_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_grad_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vsa_enroll_elsewhere_after6_transfer",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "similar",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_sector_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "carnegie_ct",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "counted_pct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nicknames",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort_size",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "institution_grads": {
        "columns": [
          {
            "field": "foreign key(unitid) references institution_details(unitid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "race",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_cohort",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_100_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "grad_150_rate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many students that graduated from Lincoln College in 2011 belong to the cohort type of Bachelor's/equivalent seeking cohort at 4-year institutions?",
    "gold_sql": "SELECT COUNT(T1.unitid) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T1.chronname = 'Lincoln College' AND T2.year = 2011 AND T2.cohort = '4y bach'",
    "predicted_sql": "SELECT COUNT(T2.grad_cohort) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T2.year = 2011 AND T1.chronname = 'Lincoln College' AND T2.cohort = 'Bachelor''s/equivalent seeking cohort at 4-year institutions'"
  },
  {
    "idx": 320,
    "relevant_table_schema": {
      "users": {
        "columns": [
          {
            "field": "user_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "user_yelping_since_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_average_stars",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_votes_funny",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_votes_useful",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_votes_cool",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_review_count",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_fans",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Calculate the yearly average user who started using Yelp from the year of 2005 to 2014.",
    "gold_sql": "SELECT AVG(user_id) FROM Users WHERE user_yelping_since_year >= 2005 AND user_yelping_since_year <= 2015",
    "predicted_sql": "SELECT CAST(COUNT(CASE WHEN user_yelping_since_year BETWEEN 2005 AND 2014 THEN user_id ELSE NULL END) AS REAL) * 100 / COUNT(user_id) FROM users"
  },
  {
    "idx": 321,
    "relevant_table_schema": {
      "business": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "active",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stars",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_count",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "business_hours": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "day_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "opening_time",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "closing_time",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How long does business number 12 in Scottsdale stay open on day number 3?",
    "gold_sql": "SELECT T2.closing_time - T2.opening_time AS \"hour\" FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id WHERE T1.business_id = 12 AND T1.city LIKE 'Scottsdale' AND T2.day_id = 3",
    "predicted_sql": "SELECT T2.closing_time - T2.opening_time FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id WHERE T1.business_id = 12 AND T2.day_id = 3 AND T1.city = 'Scottsdale'"
  },
  {
    "idx": 322,
    "relevant_table_schema": {
      "business_hours": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "day_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "opening_time",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "closing_time",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Indicate the business id and days which are opened from 8AM to 6PM.",
    "gold_sql": "SELECT DISTINCT day_id FROM Business_Hours WHERE opening_time = '8AM' AND closing_time = '6PM'",
    "predicted_sql": "SELECT business_id, day_id FROM Business_Hours WHERE opening_time BETWEEN '08:00:00' AND '18:00:00'"
  },
  {
    "idx": 323,
    "relevant_table_schema": {
      "business": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "active",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stars",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_count",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Calculate the difference between running business in Glendale City and Mesa City.",
    "gold_sql": "SELECT SUM(CASE WHEN city = 'Glendale' THEN 1 ELSE 0 END) - SUM(CASE WHEN city = 'Mesa' THEN 1 ELSE 0 END) AS diff FROM Business WHERE active = 'true'",
    "predicted_sql": "SELECT T1.stars - T2.stars FROM Business AS T1 INNER JOIN Business AS T2 ON T1.city = 'Glendale' AND T2.city = 'Mesa'"
  },
  {
    "idx": 324,
    "relevant_table_schema": {
      "business_categories": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "categories": {
        "columns": [
          {
            "field": "category_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "category_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many times is the number of \"Women's Clothing\" Yelp businesses to \"Men's Clothing\"?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T2.category_name = 'Women''s Clothing' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.category_name = 'Men''s Clothing' THEN 1 ELSE 0 END) AS TIMES FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id",
    "predicted_sql": "SELECT CAST(COUNT(CASE WHEN T2.category_name = 'Women''s Clothing' THEN T1.business_id ELSE NULL END) AS REAL) / COUNT(CASE WHEN T2.category_name = 'Men''s Clothing' THEN T1.business_id ELSE NULL END) times FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id"
  },
  {
    "idx": 325,
    "relevant_table_schema": {
      "reviews": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_stars",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_votes_funny",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_votes_useful",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_votes_cool",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_length",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many long reviews does user No. 36139 give for the Yelp businesses?",
    "gold_sql": "SELECT COUNT(review_length) FROM Reviews WHERE user_id = 36139 AND review_length LIKE 'long'",
    "predicted_sql": "SELECT COUNT(T1.review_length) FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T2.business_name = 'Yelp' AND T1.user_id = 36139 AND T1.review_length = 'Long'"
  },
  {
    "idx": 326,
    "relevant_table_schema": {
      "attributes": {
        "columns": [
          {
            "field": "attribute_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "attribute_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "business_attributes": {
        "columns": [
          {
            "field": "attribute_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "attribute_value",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "business": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "active",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stars",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_count",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many businesses with music_karaoke attribute are closed?",
    "gold_sql": "SELECT COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.attribute_name = 'music_karaoke' AND T3.active = 'false' AND T2.attribute_value IN ('none', 'no', 'false')",
    "predicted_sql": "SELECT COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.attribute_name = 'music_karaoke' AND T3.active = 'false'"
  },
  {
    "idx": 327,
    "relevant_table_schema": {
      "reviews": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_stars",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_votes_funny",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_votes_useful",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_votes_cool",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_length",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "business": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "active",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stars",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_count",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please state any three business numbers in AZ state that have received the \"Great experience\" review stars.",
    "gold_sql": "SELECT DISTINCT T2.business_id FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T2.state LIKE 'AZ' AND T1.review_stars = 5 LIMIT 3",
    "predicted_sql": "SELECT T2.business_id FROM reviews AS T1 INNER JOIN business AS T2 ON T1.business_id = T2.business_id WHERE T1.review_stars = 5 AND T2.state = 'AZ'"
  },
  {
    "idx": 328,
    "relevant_table_schema": {
      "compliments": {
        "columns": [
          {
            "field": "compliment_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "compliment_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "users_compliments": {
        "columns": [
          {
            "field": "compliment_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "user_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "number_of_compliments",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many \"cute\" type of compliments does user No. 57400 get?",
    "gold_sql": "SELECT COUNT(T1.compliment_type) FROM Compliments AS T1 INNER JOIN Users_Compliments AS T2 ON T1.compliment_id = T2.compliment_id WHERE T1.compliment_type LIKE 'cute' AND T2.user_id = 57400",
    "predicted_sql": "SELECT SUM(T2.number_of_compliments) FROM compliments AS T1 INNER JOIN users_compliments AS T2 ON T1.compliment_id = T2.compliment_id WHERE T1.compliment_type = 'cute' AND T2.user_id = 57400"
  },
  {
    "idx": 329,
    "relevant_table_schema": {
      "business": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "active",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stars",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "review_count",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the quantity of the closed or not running Yelp Businesses in 'AZ'?",
    "gold_sql": "SELECT COUNT(business_id) FROM Business WHERE state LIKE 'AZ' AND active LIKE 'False'",
    "predicted_sql": "SELECT COUNT(business_id) FROM Business WHERE active = 'false' AND state = 'AZ'"
  },
  {
    "idx": 330,
    "relevant_table_schema": {
      "person": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height_meters",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many persons were born in New York, USA?",
    "gold_sql": "SELECT COUNT(name) FROM Person WHERE birth_place = 'New York City' AND birth_country = 'USA';",
    "predicted_sql": "SELECT COUNT(*) FROM person WHERE birth_region = 'New York' AND birth_country = 'USA'"
  },
  {
    "idx": 331,
    "relevant_table_schema": {
      "episode": {
        "columns": [
          {
            "field": "episode_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "number_in_series",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "air_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode_image",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "vote": {
        "columns": [
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "stars",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many 1 star ratings are there in the worst rated episode of the season?",
    "gold_sql": "SELECT COUNT(*) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.stars = 1 ORDER BY T1.rating LIMIT 1;",
    "predicted_sql": "SELECT COUNT(T2.stars) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T1.episode_id = ( SELECT T1.episode_id FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id ORDER BY T1.rating ASC LIMIT 1 ) AND T2.stars = 1"
  },
  {
    "idx": 332,
    "relevant_table_schema": {
      "award": {
        "columns": [
          {
            "field": "award_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(person) references Person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "season",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "song",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "result",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "episode": {
        "columns": [
          {
            "field": "episode_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "number_in_series",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "air_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode_image",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What's the rating of the episode in which Dan Castellaneta won the Outstanding Voice-Over Performance award in 2009?",
    "gold_sql": "SELECT T2.rating FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.award = 'Outstanding Voice-Over Performance' AND SUBSTR(T1.year, 1, 4) = '2009' AND T1.person = 'Dan Castellaneta';",
    "predicted_sql": "SELECT T2.rating FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.award_category = 'Voice-Over' AND T1.year = 2009 AND T1.result = 'Winner' AND T1.person = 'Dan Castellaneta'"
  },
  {
    "idx": 333,
    "relevant_table_schema": {
      "episode": {
        "columns": [
          {
            "field": "episode_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "number_in_series",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "air_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode_image",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "credit": {
        "columns": [
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(person) references Person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "credited",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "State the name of director for the 'Treehouse of Horror XIX' episode.",
    "gold_sql": "SELECT T2.person FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Treehouse of Horror XIX' AND T2.role = 'director';",
    "predicted_sql": "SELECT T2.person FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Treehouse of Horror XIX' AND T2.role = 'director'"
  },
  {
    "idx": 334,
    "relevant_table_schema": {
      "episode": {
        "columns": [
          {
            "field": "episode_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "number_in_series",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "air_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode_image",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "credit": {
        "columns": [
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(person) references Person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "credited",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the episode ID and title of episode where casting was credited to Bonita Pietila.",
    "gold_sql": "SELECT T1.episode_id, T1.title FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.credited = 'true' AND T2.person = 'Bonita Pietila' AND T2.role = 'casting';",
    "predicted_sql": "SELECT T1.episode_id, T1.title FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.person = 'Bonita Pietila' AND T2.credited = 'true'"
  },
  {
    "idx": 335,
    "relevant_table_schema": {
      "person": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height_meters",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "award": {
        "columns": [
          {
            "field": "award_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(person) references Person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "season",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "song",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "result",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all of the award winners' birth dates.",
    "gold_sql": "SELECT T1.birthdate FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.result = 'Winner';",
    "predicted_sql": "SELECT T1.birthdate FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.result = 'Winner'"
  },
  {
    "idx": 336,
    "relevant_table_schema": {
      "episode": {
        "columns": [
          {
            "field": "episode_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "number_in_series",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "summary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "air_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "episode_image",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "keyword": {
        "columns": [
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "keyword",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please provide any two episodes' names that have the same keyword of \"1930s to 2020s\".",
    "gold_sql": "SELECT T1.title FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T2.keyword = '1930s to 2020s' LIMIT 2;",
    "predicted_sql": "SELECT T1.episode_id FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T2.Keyword = '1930s to 2020s' LIMIT 2"
  },
  {
    "idx": 337,
    "relevant_table_schema": {
      "award": {
        "columns": [
          {
            "field": "award_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(person) references Person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "season",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "song",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "result",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "keyword": {
        "columns": [
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "keyword",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please indicate the keywords of the episode that won the Primetime Emmy Award category.",
    "gold_sql": "SELECT T2.keyword FROM Award AS T1 INNER JOIN Keyword AS T2 ON T2.episode_id = T1.episode_id WHERE T1.award_category = 'Primetime Emmy';",
    "predicted_sql": "SELECT T2.keyword FROM Award AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.result = 'Winner' AND T1.award_category = 'Primetime Emmy Award'"
  },
  {
    "idx": 338,
    "relevant_table_schema": {
      "person": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height_meters",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "award": {
        "columns": [
          {
            "field": "award_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(person) references Person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "season",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "song",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "result",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List out the birth name of crews who are co-executive producer and higher than 1.60 meters.",
    "gold_sql": "SELECT T1.birth_name FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.role = 'co-executive producer' AND T1.height_meters > 1.60;",
    "predicted_sql": "SELECT DISTINCT T1.birth_name FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.role = 'Co-Executive Producer' AND T1.height_meters > 1.60"
  },
  {
    "idx": 339,
    "relevant_table_schema": {
      "person": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birth_country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height_meters",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "award": {
        "columns": [
          {
            "field": "award_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "award",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(person) references Person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "role",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(episode_id) references Episode(episode_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "season",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "song",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "result",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many award winners are from the USA?",
    "gold_sql": "SELECT COUNT(*) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T1.birth_country = 'USA' AND T2.result = 'Winner';",
    "predicted_sql": "SELECT COUNT(T1.name) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.result = 'Winner' AND T1.birth_country = 'USA'"
  },
  {
    "idx": 340,
    "relevant_table_schema": {
      "male": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "disabled": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "How many disabled students are male?",
    "gold_sql": "SELECT COUNT(T1.name) FROM male AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name",
    "predicted_sql": "SELECT COUNT(T1.name) FROM male AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name"
  },
  {
    "idx": 341,
    "relevant_table_schema": {
      "longest_absense_from_school": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "month",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Find the average number of absences for each student.",
    "gold_sql": "SELECT AVG(month) FROM longest_absense_from_school",
    "predicted_sql": "SELECT CAST(COUNT(name) AS REAL) / COUNT(DISTINCT name) FROM longest_absense_from_school"
  },
  {
    "idx": 342,
    "relevant_table_schema": {
      "enrolled": {
        "columns": [
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "school",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "month",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "disabled": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Name all disabled students that are enrolled in SMC.",
    "gold_sql": "SELECT T2.name FROM enrolled AS T1 INNER JOIN disabled AS T2 ON T1.`name` = T2.`name` WHERE T1.school = 'smc'",
    "predicted_sql": "SELECT T2.name FROM enrolled AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name WHERE T1.school = 'SMC'"
  },
  {
    "idx": 343,
    "relevant_table_schema": {
      "enrolled": {
        "columns": [
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "school",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "month",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "enlist": {
        "columns": [
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "organ",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List out the organization joined and school enrolled by student27, student17 and student101?",
    "gold_sql": "SELECT T1.school, T2.organ FROM enrolled AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` WHERE T1.`name` IN ('student27,student17,studetn101')",
    "predicted_sql": "SELECT T2.organ FROM enrolled AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T1.name IN ('student27', 'student17', 'student101')"
  },
  {
    "idx": 344,
    "relevant_table_schema": {
      "disabled": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "filed_for_bankrupcy": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Among the students who filed for bankruptcy, how many students are disabled?",
    "gold_sql": "SELECT COUNT(T1.name) FROM disabled AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.name = T2.name",
    "predicted_sql": "SELECT COUNT(T1.name) FROM disabled AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.name = T2.name"
  },
  {
    "idx": 345,
    "relevant_table_schema": {
      "person": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      },
      "male": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Among all students, calculate the percentage of male students.",
    "gold_sql": "SELECT CAST(COUNT(T2.name) AS REAL) * 100 / COUNT(T1.name) FROM person AS T1 LEFT JOIN male AS T2 ON T1.name = T2.name",
    "predicted_sql": "SELECT CAST(COUNT(T2.name) AS REAL) * 100 / COUNT(T1.name) FROM person AS T1 INNER JOIN male AS T2 ON T1.name = T2.name"
  },
  {
    "idx": 346,
    "relevant_table_schema": {
      "disabled": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "unemployed": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Among the students with disabilities, list any five students' names who are unemployed.",
    "gold_sql": "SELECT T1.name FROM disabled AS T1 INNER JOIN unemployed AS T2 ON T2.name = T1.name LIMIT 5",
    "predicted_sql": "SELECT T1.name FROM disabled AS T1 INNER JOIN unemployed AS T2 ON T1.name = T2.name LIMIT 5"
  },
  {
    "idx": 347,
    "relevant_table_schema": {
      "enlist": {
        "columns": [
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "organ",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the organization enlisted by student168?",
    "gold_sql": "SELECT organ FROM enlist WHERE name = 'student168'",
    "predicted_sql": "SELECT organ FROM enlist WHERE name = 'student168'"
  },
  {
    "idx": 348,
    "relevant_table_schema": {
      "filed_for_bankrupcy": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "enrolled": {
        "columns": [
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "school",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "month",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the students that filed for bankruptcy, how many of them have been enrolled in OCC?",
    "gold_sql": "SELECT COUNT(T1.name) FROM filed_for_bankrupcy AS T1 INNER JOIN enrolled AS T2 ON T1.name = T2.name WHERE T2.school = 'occ'",
    "predicted_sql": "SELECT COUNT(T2.name) FROM filed_for_bankrupcy AS T1 INNER JOIN enrolled AS T2 ON T1.name = T2.name WHERE T2.school = 'OCC'"
  },
  {
    "idx": 349,
    "relevant_table_schema": {
      "unemployed": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "enlist": {
        "columns": [
          {
            "field": "foreign key(name) references person(name)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "organ",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many unemployed students are enlisted in the navy organization?",
    "gold_sql": "SELECT COUNT(T1.name) FROM unemployed AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T2.organ = 'navy'",
    "predicted_sql": "SELECT COUNT(T1.name) FROM unemployed AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name WHERE T2.organ = 'navy'"
  },
  {
    "idx": 350,
    "relevant_table_schema": {
      "answer": {
        "columns": [
          {
            "field": "AnswerText",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurveyID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "UserID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "QuestionID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "question": {
        "columns": [
          {
            "field": "questiontext",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "questionid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among respondents who participated in the survey in 2016, what percentage had a mental health disorder in the past?",
    "gold_sql": "SELECT CAST(SUM(CASE  WHEN T1.AnswerText LIKE 'Yes' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.SurveyID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T1.QuestionID = 32 AND T1.SurveyID = 2016",
    "predicted_sql": "SELECT CAST(SUM(CASE  WHEN T1.AnswerText LIKE 'Yes' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 12 AND T1.SurveyID = 2016 AND T1.AnswerText LIKE 'Yes'"
  },
  {
    "idx": 351,
    "relevant_table_schema": {
      "answer": {
        "columns": [
          {
            "field": "AnswerText",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurveyID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "UserID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "QuestionID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "question": {
        "columns": [
          {
            "field": "questiontext",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "questionid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average age of the survey respondents in the United States?",
    "gold_sql": "SELECT CAST(SUM(T1.AnswerText) AS REAL) / COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN ( SELECT T1.UserID FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 3 AND T1.AnswerText = 'United States' ) AS T2 ON T1.UserID = T2.UserID INNER JOIN Question AS T3 ON T1.QuestionID = T3.questionid WHERE T3.questionid = 1",
    "predicted_sql": "SELECT AVG(T1.UserID - T2.datestamp) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 3 AND T1.SurveyID = 2 AND T1.AnswerText LIKE 'United States'"
  },
  {
    "idx": 352,
    "relevant_table_schema": {
      "question": {
        "columns": [
          {
            "field": "questiontext",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "questionid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      },
      "answer": {
        "columns": [
          {
            "field": "AnswerText",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurveyID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "UserID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "QuestionID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the rate of increase of users with a current mental disorder from 2019's survey to 2016's survey?",
    "gold_sql": "SELECT CAST(( SELECT COUNT(T2.UserID) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID = 2019 AND T1.questiontext LIKE 'Do you currently have a mental health disorder?' AND T2.AnswerText = 'Yes' ) - ( SELECT COUNT(T2.UserID) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID = 2016 AND T1.questiontext LIKE 'Do you currently have a mental health disorder?' AND T2.AnswerText = 'Yes' ) AS REAL) * 100 / ( SELECT COUNT(T2.UserID) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID = 2016 AND T1.questiontext LIKE 'Do you currently have a mental health disorder?' AND T2.AnswerText = 'Yes' )",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN SUBSTR(T1.questionid, -4) = '2016' THEN 1 ELSE 0 END) - SUM(CASE WHEN SUBSTR(T1.questionid, -4) = '2019' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN SUBSTR(T1.questionid, -4) = '2019' THEN 1 ELSE 0 END) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T1.questionid LIKE '%mental disorder' AND T2.SurveyID BETWEEN 2016 AND 2019"
  },
  {
    "idx": 353,
    "relevant_table_schema": {
      "answer": {
        "columns": [
          {
            "field": "AnswerText",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurveyID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "UserID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "QuestionID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many questions in 2014's survey had more than 200 answers?",
    "gold_sql": "SELECT COUNT(QuestionID) FROM Answer WHERE SurveyID LIKE 2014 GROUP BY QuestionID ORDER BY COUNT(QuestionID) > 200 LIMIT 1",
    "predicted_sql": "SELECT COUNT(QuestionID) FROM Answer WHERE SurveyID = 2014 AND AnswerText IS NOT NULL GROUP BY QuestionID HAVING COUNT(AnswerText) > 200"
  },
  {
    "idx": 354,
    "relevant_table_schema": {
      "answer": {
        "columns": [
          {
            "field": "AnswerText",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurveyID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "UserID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "QuestionID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "question": {
        "columns": [
          {
            "field": "questiontext",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "questionid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many users answered the question \"Overall, how much importance does your employer place on physical health?\"?",
    "gold_sql": "SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questiontext LIKE 'Overall, how much importance does your employer place on physical health?'",
    "predicted_sql": "SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 12 AND T1.AnswerText LIKE 'Not at all important'"
  },
  {
    "idx": 355,
    "relevant_table_schema": {
      "question": {
        "columns": [
          {
            "field": "questiontext",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "questionid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      },
      "answer": {
        "columns": [
          {
            "field": "AnswerText",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurveyID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "UserID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "QuestionID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average result of the question \"What is your age?\" in 2014's survey?",
    "gold_sql": "SELECT CAST(SUM(T2.AnswerText) AS REAL) / COUNT(T2.UserID) AS \"avg\" FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T2.SurveyID = 2014 AND T1.questiontext LIKE 'What is your age?'",
    "predicted_sql": "SELECT AVG(T2.AnswerText) FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T1.questiontext = 'What is your age?' AND T2.SurveyID = 2014"
  },
  {
    "idx": 356,
    "relevant_table_schema": {
      "answer": {
        "columns": [
          {
            "field": "AnswerText",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurveyID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "UserID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "QuestionID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many users answered the question No.20?",
    "gold_sql": "SELECT MAX(UserID) - MIN(UserID) + 1 FROM Answer WHERE QuestionID = 20",
    "predicted_sql": "SELECT COUNT(UserID) FROM Answer WHERE QuestionID = 20 AND AnswerText = 'No'"
  },
  {
    "idx": 357,
    "relevant_table_schema": {
      "answer": {
        "columns": [
          {
            "field": "AnswerText",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurveyID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "UserID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "QuestionID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "question": {
        "columns": [
          {
            "field": "questiontext",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "questionid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the percentage of the the users who would bring up a mental health issue with a potential employer in an interview?",
    "gold_sql": "SELECT CAST(SUM(CASE  WHEN T1.AnswerText LIKE 'Yes' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 12",
    "predicted_sql": "SELECT CAST(SUM(CASE  WHEN T1.AnswerText LIKE 'Yes' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 12"
  },
  {
    "idx": 358,
    "relevant_table_schema": {
      "answer": {
        "columns": [
          {
            "field": "AnswerText",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurveyID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "UserID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "QuestionID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "survey": {
        "columns": [
          {
            "field": "SurveyID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Provide the number of users who took part in the \"mental health survey for 2016\".",
    "gold_sql": "SELECT COUNT(DISTINCT T1.UserID) FROM Answer AS T1 INNER JOIN Survey AS T2 ON T1.SurveyID = T2.SurveyID WHERE T2.Description = 'mental health survey for 2016'",
    "predicted_sql": "SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Survey AS T2 ON T1.SurveyID = T2.SurveyID WHERE T2.Description LIKE 'mental health survey for 2016'"
  },
  {
    "idx": 359,
    "relevant_table_schema": {
      "answer": {
        "columns": [
          {
            "field": "AnswerText",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurveyID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "UserID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "QuestionID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "question": {
        "columns": [
          {
            "field": "questiontext",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "questionid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many users believed that their productivity is ever affected by a mental health issue overall?",
    "gold_sql": "SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 54 AND T1.AnswerText LIKE 'Yes'",
    "predicted_sql": "SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 12 AND T1.AnswerText LIKE 'Yes'"
  },
  {
    "idx": 360,
    "relevant_table_schema": {
      "revenue": {
        "columns": [
          {
            "field": "Year",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Studio Entertainment[NI 1]",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Disney Consumer Products[NI 2]",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Disney Interactive[NI 3][Rev 1]",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Walt Disney Parks and Resorts",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Disney Media Networks",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Total",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Determine Disney's total box office gross between 2010 and 2016.",
    "gold_sql": "SELECT SUM(Total) FROM revenue WHERE `Year` BETWEEN 2010 AND 2016",
    "predicted_sql": "SELECT SUM(CASE WHEN Year BETWEEN 2010 AND 2016 THEN Total ELSE 0 END) FROM Revenue"
  },
  {
    "idx": 361,
    "relevant_table_schema": {
      "movies_total_gross": {
        "columns": [
          {
            "field": "foreign key(movie_title) references characters(movie_title)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "release_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "genre",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MPAA_rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_gross",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inflation_adjusted_gross",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "characters": {
        "columns": [
          {
            "field": "movie_title",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "release_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(hero) references voice-actors(character)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "villian",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "song",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all the main characters of the movie that are comedy genre.",
    "gold_sql": "SELECT T2.hero FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title WHERE T1.genre = 'Comedy'",
    "predicted_sql": "SELECT T2.hero FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title WHERE T1.genre = 'Comedy'"
  },
  {
    "idx": 362,
    "relevant_table_schema": {
      "movies_total_gross": {
        "columns": [
          {
            "field": "foreign key(movie_title) references characters(movie_title)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "release_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "genre",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MPAA_rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_gross",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inflation_adjusted_gross",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the movies and genres released in 2016.",
    "gold_sql": "SELECT movie_title, genre FROM movies_total_gross WHERE SUBSTR(release_date, LENGTH(release_date) - 3, LENGTH(release_date)) = '2016'",
    "predicted_sql": "SELECT movie_title, genre FROM movies_total_gross WHERE CAST(SUBSTR(release_date, INSTR(release_date, ', ') + 1) AS int) = 2016"
  },
  {
    "idx": 363,
    "relevant_table_schema": {
      "voice-actors": {
        "columns": [
          {
            "field": "character",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "voice-actor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(movie) references characters(movie_title)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Name actors who voiced more than five Disney characters.",
    "gold_sql": "SELECT 'voice-actor' FROM `voice-actors` GROUP BY 'voice-actor' HAVING COUNT(movie) > 5",
    "predicted_sql": "SELECT `voice-actor` FROM `voice-actors` GROUP BY `voice-actor` HAVING COUNT(movie) > 5"
  },
  {
    "idx": 364,
    "relevant_table_schema": {
      "characters": {
        "columns": [
          {
            "field": "movie_title",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "release_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(hero) references voice-actors(character)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "villian",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "song",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "director": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(name) references characters(movie_title)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "director",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the titles of movies directed by Jack Kinney that were released before 1947.",
    "gold_sql": "SELECT T1.movie_title FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Jack Kinney' AND SUBSTR(T1.release_date, LENGTH(T1.release_date) - 1, LENGTH(T1.release_date)) < '47'",
    "predicted_sql": "SELECT T1.movie_title FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name WHERE T2.director = 'Jack Kinney' AND T1.release_date < '1947'"
  },
  {
    "idx": 365,
    "relevant_table_schema": {
      "characters": {
        "columns": [
          {
            "field": "movie_title",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "release_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(hero) references voice-actors(character)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "villian",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "song",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "voice-actors": {
        "columns": [
          {
            "field": "character",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "voice-actor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(movie) references characters(movie_title)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Among the movies in which Alan Tudyk is a voice actor, how many of them were released after 2012?",
    "gold_sql": "SELECT COUNT(T2.movie) FROM characters AS T1 INNER JOIN `voice-actors` AS T2 ON T1.movie_title = T2.movie WHERE T2.`voice-actor` = 'Alan Tudyk' AND SUBSTR(release_date, INSTR(release_date, '-') + 5) > 12",
    "predicted_sql": "SELECT COUNT(T1.movie_title) FROM characters AS T1 INNER JOIN `voice-actors` AS T2 ON T1.movie_title = T2.movie WHERE T2.character = 'Alan Tudyk' AND T1.release_date LIKE '2012%'"
  },
  {
    "idx": 366,
    "relevant_table_schema": {
      "voice-actors": {
        "columns": [
          {
            "field": "character",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "voice-actor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(movie) references characters(movie_title)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "How many voice actors for the movie Aladdin?",
    "gold_sql": "SELECT COUNT('voice-actor') FROM `voice-actors` WHERE movie = 'Aladdin'",
    "predicted_sql": "SELECT COUNT(DISTINCT `voice-actor`) FROM `voice-actors` WHERE movie = 'Aladdin'"
  },
  {
    "idx": 367,
    "relevant_table_schema": {
      "characters": {
        "columns": [
          {
            "field": "movie_title",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "release_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(hero) references voice-actors(character)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "villian",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "song",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Who is the villain in the movie \"The Great Mouse Detective\"?",
    "gold_sql": "SELECT villian FROM characters WHERE movie_title = 'The Great Mouse Detective'",
    "predicted_sql": "SELECT villian FROM characters WHERE movie_title = 'The Great Mouse Detective'"
  },
  {
    "idx": 368,
    "relevant_table_schema": {
      "voice-actors": {
        "columns": [
          {
            "field": "character",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "voice-actor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(movie) references characters(movie_title)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "characters": {
        "columns": [
          {
            "field": "movie_title",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "release_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(hero) references voice-actors(character)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "villian",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "song",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the release dates of all the movies in which Alan Tudyk is a voice actor.",
    "gold_sql": "SELECT T2.release_date FROM `voice-actors` AS T1 INNER JOIN characters AS T2 ON T1.movie = T2.movie_title WHERE T1.`voice-actor` = 'Alan Tudyk'",
    "predicted_sql": "SELECT T2.release_date FROM `voice-actors` AS T1 INNER JOIN characters AS T2 ON T1.movie = T2.movie_title WHERE T1.`voice-actor` = 'Alan Tudyk'"
  },
  {
    "idx": 369,
    "relevant_table_schema": {
      "voice-actors": {
        "columns": [
          {
            "field": "character",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "voice-actor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(movie) references characters(movie_title)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "characters": {
        "columns": [
          {
            "field": "movie_title",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "release_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(hero) references voice-actors(character)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "villian",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "song",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "director": {
        "columns": [
          {
            "field": "name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(name) references characters(movie_title)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "director",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Provide the names of voice actors for the characters of films directed by Wolfgang Reitherman.",
    "gold_sql": "SELECT T2.hero, T1.`voice-actor` FROM `voice-actors` AS T1 INNER JOIN characters AS T2 ON T1.movie = T2.movie_title INNER JOIN director AS T3 ON T3.name = T2.movie_title WHERE T3.director = 'Wolfgang Reitherman'",
    "predicted_sql": "SELECT T1.`voice-actor` FROM `voice-actors` AS T1 INNER JOIN characters AS T2 ON T1.movie = T2.movie_title INNER JOIN director AS T3 ON T2.movie_title = T3.name WHERE T3.director = 'Wolfgang Reitherman'"
  },
  {
    "idx": 370,
    "relevant_table_schema": {
      "current": {
        "columns": [
          {
            "field": "ballotpedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bioguide_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday_bio",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cspan_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fec_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "google_entity_id_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "govtrack_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "house_history_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "icpsr_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lis_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maplight_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "official_full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "opensecrets_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "religion_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "thomas_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votesmart_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikidata_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikipedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "current-terms": {
        "columns": [
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(bioguide) references current(bioguide_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "caucus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "chamber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "class",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contact_form",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "district",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fax",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "office",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party_affiliations",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "relation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rss_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_rank",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which current legislator has served for more terms, Sherrod Brown or Maria Cantwell?",
    "gold_sql": "SELECT CASE WHEN SUM(CASE WHEN T1.official_full_name = 'Maria Cantwell' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.official_full_name = 'Sherrod Brown' THEN 1 ELSE 0 END) THEN 'Maria Cantwell' ELSE 'Sherrod Brown' END FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide",
    "predicted_sql": "SELECT T1.first_name, T1.last_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.type = 'legislator' GROUP BY T1.first_name, T1.last_name ORDER BY COUNT(T2.type) DESC LIMIT 1"
  },
  {
    "idx": 371,
    "relevant_table_schema": {
      "current": {
        "columns": [
          {
            "field": "ballotpedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bioguide_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday_bio",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cspan_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fec_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "google_entity_id_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "govtrack_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "house_history_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "icpsr_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lis_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maplight_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "official_full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "opensecrets_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "religion_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "thomas_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votesmart_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikidata_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikipedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "current-terms": {
        "columns": [
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(bioguide) references current(bioguide_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "caucus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "chamber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "class",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contact_form",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "district",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fax",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "office",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party_affiliations",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "relation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rss_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_rank",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the gender of the legislator whose address at 317 Russell Senate Office Building Washington DC 20510?",
    "gold_sql": "SELECT T1.gender_bio FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.address = '317 Russell Senate Office Building Washington DC 20510'",
    "predicted_sql": "SELECT T1.gender_bio FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.address = '317 Russell Senate Office Building Washington DC 20510'"
  },
  {
    "idx": 372,
    "relevant_table_schema": {
      "current": {
        "columns": [
          {
            "field": "ballotpedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bioguide_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday_bio",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cspan_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fec_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "google_entity_id_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "govtrack_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "house_history_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "icpsr_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lis_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maplight_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "official_full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "opensecrets_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "religion_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "thomas_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votesmart_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikidata_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikipedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "current-terms": {
        "columns": [
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(bioguide) references current(bioguide_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "caucus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "chamber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "class",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contact_form",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "district",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fax",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "office",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party_affiliations",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "relation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rss_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_rank",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the Independent senators that started their term in 2011 and onwards, what are the official full names of the senators that caucused with the Democrat?",
    "gold_sql": "SELECT T1.official_full_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.party = 'Independent' AND strftime('%Y', T2.start) >= '2011' AND T2.type = 'sen' AND T2.caucus = 'Democrat'",
    "predicted_sql": "SELECT T1.official_full_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.caucus = 'Democrat' AND T1.first_name != 'Bill' AND T1.first_name != 'Barack' AND T1.first_name != 'Mike' AND T1.first_name != 'Joe' AND T1.first_name != 'John' AND T1.first_name != 'Richard' AND T1.first_name != 'Robert' AND T1.first_name != 'Donald' AND T1.first_name != 'Paul' AND T1.first_name != 'George' AND T1.first_name != 'Jim' AND T1.first_name != 'Harry' AND T1.first_name != 'Jimmy' AND T1.first_name != 'George' AND T1.first_name != 'Joe' AND T1.first_name != 'John' AND T1.first_name != 'Richard' AND T1.first_name != 'Robert' AND T1.first_name != 'Donald' AND T1.first_name != 'Paul' AND T1.first_name != 'George' AND T1.first_name != 'Jim' AND T1.first_name != 'Harry' AND T1.first_name != 'Jimmy' AND T1.first_name != 'George' AND T1.first_name != 'Joe' AND T1.first_name != 'John' AND T1.first_name != 'Richard' AND T1.first_name != 'Robert' AND T1.first_name != 'Donald' AND T1.first_name != 'Paul' AND T1.first_name != 'George' AND T1.first_name != 'Jim' AND T1.first_name != 'Harry' AND T1.first_name != 'Jimmy' AND T1.first_name != 'George' AND T1.first_name != 'Joe' AND T1.first"
  },
  {
    "idx": 373,
    "relevant_table_schema": {
      "current": {
        "columns": [
          {
            "field": "ballotpedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bioguide_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday_bio",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cspan_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fec_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "google_entity_id_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "govtrack_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "house_history_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "icpsr_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lis_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maplight_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "official_full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "opensecrets_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "religion_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "thomas_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votesmart_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikidata_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikipedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "current-terms": {
        "columns": [
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(bioguide) references current(bioguide_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "caucus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "chamber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "class",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contact_form",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "district",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fax",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "office",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party_affiliations",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "relation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rss_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_rank",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many times did Richard Durbin become a legislator in district 20?",
    "gold_sql": "SELECT SUM(CASE WHEN T2.district = 20 THEN 1 ELSE 0 END) AS count FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.first_name = 'Richard' AND T1.last_name = 'Durbin'",
    "predicted_sql": "SELECT COUNT(T2.bioguide_id) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.district = 20 AND T1.official_full_name = 'Richard Durbin'"
  },
  {
    "idx": 374,
    "relevant_table_schema": {
      "current": {
        "columns": [
          {
            "field": "ballotpedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bioguide_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday_bio",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cspan_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fec_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "google_entity_id_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "govtrack_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "house_history_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "icpsr_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lis_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maplight_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "official_full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "opensecrets_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "religion_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "thomas_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votesmart_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikidata_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikipedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "current-terms": {
        "columns": [
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(bioguide) references current(bioguide_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "caucus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "chamber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "class",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contact_form",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "district",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fax",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "office",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party_affiliations",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "relation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rss_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_rank",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the district number that Chris Van Hollen serving?",
    "gold_sql": "SELECT T2.district FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'Chris Van Hollen' AND T2.district IS NOT NULL GROUP BY T2.district",
    "predicted_sql": "SELECT T2.district FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'Chris Van Hollen'"
  },
  {
    "idx": 375,
    "relevant_table_schema": {
      "historical": {
        "columns": [
          {
            "field": "ballotpedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bioguide_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "bioguide_previous_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cspan_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fec_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "google_entity_id_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "govtrack_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "house_history_alternate_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "house_history_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "icpsr_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lis_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maplight_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "official_full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "opensecrets_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "religion_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "thomas_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votesmart_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikidata_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikipedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many females were members of the past legislators?",
    "gold_sql": "SELECT COUNT(*) FROM historical WHERE gender_bio = 'F'",
    "predicted_sql": "SELECT COUNT(*) FROM historical WHERE gender_bio = 'F'"
  },
  {
    "idx": 376,
    "relevant_table_schema": {
      "current": {
        "columns": [
          {
            "field": "ballotpedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bioguide_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday_bio",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cspan_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fec_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "google_entity_id_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "govtrack_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "house_history_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "icpsr_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lis_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maplight_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "official_full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "opensecrets_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "religion_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "thomas_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votesmart_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikidata_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikipedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "social-media": {
        "columns": [
          {
            "field": "bioguide",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(bioguide) references current(bioguide_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "facebook",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "facebook_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "govtrack",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "instagram",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "instagram_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "thomas",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "twitter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "twitter_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "youtube",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "youtube_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which legislators do not have instagram account?",
    "gold_sql": "SELECT T1.first_name, T1.last_name FROM current AS T1 INNER JOIN `social-media` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.instagram IS NULL",
    "predicted_sql": "SELECT T1.first_name, T1.last_name FROM current AS T1 INNER JOIN `social-media` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.instagram IS NULL"
  },
  {
    "idx": 377,
    "relevant_table_schema": {
      "historical": {
        "columns": [
          {
            "field": "ballotpedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bioguide_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "bioguide_previous_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cspan_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fec_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "google_entity_id_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "govtrack_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "house_history_alternate_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "house_history_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "icpsr_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lis_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maplight_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "middle_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nickname_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "official_full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "opensecrets_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "religion_bio",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "suffix_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "thomas_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "votesmart_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikidata_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wikipedia_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many legislators were born in 1736?",
    "gold_sql": "SELECT COUNT(bioguide_id) FROM historical WHERE birthday_bio LIKE '1736%'",
    "predicted_sql": "SELECT COUNT(*) FROM historical WHERE CAST(birthday_bio AS date) = 1736"
  },
  {
    "idx": 378,
    "relevant_table_schema": {
      "current-terms": {
        "columns": [
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(bioguide) references current(bioguide_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "caucus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "chamber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "class",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contact_form",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "district",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fax",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "office",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party_affiliations",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "relation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rss_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_rank",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many districts are in Idaho?",
    "gold_sql": "SELECT COUNT(district) FROM `current-terms` WHERE state = 'ID'",
    "predicted_sql": "SELECT SUM(CASE WHEN state = 'ID' THEN 1 ELSE 0 END) FROM `current-terms`"
  },
  {
    "idx": 379,
    "relevant_table_schema": {
      "current-terms": {
        "columns": [
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(bioguide) references current(bioguide_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "caucus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "chamber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "class",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "contact_form",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "district",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fax",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "office",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party_affiliations",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "relation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rss_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_rank",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all of the ids of the representatives belonging to the Democrat party in district 13 that ended their term on 1/3/2019?",
    "gold_sql": "SELECT bioguide FROM `current-terms` WHERE type = 'rep' AND party = 'Democrat' AND end = '2019-01-03' AND district = 13",
    "predicted_sql": "SELECT bioguide FROM `current-terms` WHERE end = '2019-01-03' AND district = 13 AND party = 'Democrat'"
  },
  {
    "idx": 380,
    "relevant_table_schema": {
      "noc_region": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "noc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person_region": {
        "columns": [
          {
            "field": "foreign key(person_id) references person(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(region_id) references noc_region(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among all the Olympic competitors from Finland, how many of them are female?",
    "gold_sql": "SELECT COUNT(T3.id) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Finland' AND T3.gender = 'F'",
    "predicted_sql": "SELECT COUNT(T2.person_id) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Finland' AND T3.gender = 'F'"
  },
  {
    "idx": 381,
    "relevant_table_schema": {
      "games_city": {
        "columns": [
          {
            "field": "foreign key(games_id) references games(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(city_id) references city(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List down the games ID of games held in Tokyo.",
    "gold_sql": "SELECT T1.games_id FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id WHERE T2.city_name = 'Tokyo'",
    "predicted_sql": "SELECT T1.games_id FROM games_city AS T1 INNER JOIN city AS T2 ON T2.id = T1.city_id WHERE T2.city_name = 'Tokyo'"
  },
  {
    "idx": 382,
    "relevant_table_schema": {
      "noc_region": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "noc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person_region": {
        "columns": [
          {
            "field": "foreign key(person_id) references person(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(region_id) references noc_region(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which region is Yao Ming from?",
    "gold_sql": "SELECT T1.region_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'Yao Ming'",
    "predicted_sql": "SELECT T1.region_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'Yao Ming'"
  },
  {
    "idx": 383,
    "relevant_table_schema": {
      "noc_region": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "noc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person_region": {
        "columns": [
          {
            "field": "foreign key(person_id) references person(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(region_id) references noc_region(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average height of the male Olympic competitors from Finland?",
    "gold_sql": "SELECT AVG(T3.height) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Finland' AND T3.gender = 'M'",
    "predicted_sql": "SELECT AVG(T3.height) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Finland' AND T3.gender = 'M'"
  },
  {
    "idx": 384,
    "relevant_table_schema": {
      "games_city": {
        "columns": [
          {
            "field": "foreign key(games_id) references games(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(city_id) references city(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "games": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "games_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "games_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Where was the first Olympic game held?",
    "gold_sql": "SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id ORDER BY T3.games_year LIMIT 1",
    "predicted_sql": "SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T3.games_name = '1896 Summer'"
  },
  {
    "idx": 385,
    "relevant_table_schema": {
      "noc_region": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "noc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person_region": {
        "columns": [
          {
            "field": "foreign key(person_id) references person(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(region_id) references noc_region(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the percentage of male athletes from Estonia?",
    "gold_sql": "SELECT CAST(COUNT(CASE WHEN T3.gender = 'M' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.person_id) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Estonia'",
    "predicted_sql": "SELECT CAST(COUNT(CASE WHEN T3.gender = 'M' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.person_id) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Estonia'"
  },
  {
    "idx": 386,
    "relevant_table_schema": {
      "games_competitor": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(games_id) references games(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(person_id) references person(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "games_city": {
        "columns": [
          {
            "field": "foreign key(games_id) references games(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(city_id) references city(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many athletes took part in the Olympic games held in Barcelona?",
    "gold_sql": "SELECT COUNT(T1.person_id) FROM games_competitor AS T1 INNER JOIN games_city AS T2 ON T1.games_id = T2.games_id INNER JOIN city AS T3 ON T2.city_id = T3.id WHERE T3.city_name = 'Barcelona'",
    "predicted_sql": "SELECT COUNT(T1.person_id) FROM games_competitor AS T1 INNER JOIN games_city AS T2 ON T1.games_id = T2.games_id INNER JOIN city AS T3 ON T2.city_id = T3.id WHERE T3.city_name = 'Barcelona'"
  },
  {
    "idx": 387,
    "relevant_table_schema": {
      "games": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "games_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "games_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "season",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "games_competitor": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(games_id) references games(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(person_id) references person(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many 20 years old athletes were there in the 1984 Summer Olympic Games?",
    "gold_sql": "SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '1984 Summer' AND T2.age = 20",
    "predicted_sql": "SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '1984 Summer' AND T2.age = 20"
  },
  {
    "idx": 388,
    "relevant_table_schema": {
      "person_region": {
        "columns": [
          {
            "field": "foreign key(person_id) references person(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(region_id) references noc_region(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "noc_region": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "noc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which region has the most athletes?",
    "gold_sql": "SELECT T2.region_name FROM person_region AS T1 INNER JOIN noc_region AS T2 ON T1.region_id = T2.id GROUP BY T2.region_name ORDER BY COUNT(T1.person_id) DESC LIMIT 1",
    "predicted_sql": "SELECT T2.region_name FROM person_region AS T1 INNER JOIN noc_region AS T2 ON T2.id = T1.region_id GROUP BY T2.region_name ORDER BY COUNT(T1.person_id) DESC LIMIT 1"
  },
  {
    "idx": 389,
    "relevant_table_schema": {
      "noc_region": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "noc",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person_region": {
        "columns": [
          {
            "field": "foreign key(person_id) references person(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(region_id) references noc_region(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "full_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Where is competitor Estelle Nze Minko from?",
    "gold_sql": "SELECT T1.region_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'Estelle Nze Minko'",
    "predicted_sql": "SELECT T1.region_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.full_name = 'Estelle Nze Minko'"
  },
  {
    "idx": 390,
    "relevant_table_schema": {
      "cbsa": {
        "columns": [
          {
            "field": "CBSA",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "CBSA_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CBSA_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "zip_data": {
        "columns": [
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state) references state(abbreviation)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "multi_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_zone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "daylight_savings",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "elevation",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "county_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "division",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2020",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2010",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "households",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_house_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_income_per_household",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "persons_per_household",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "white_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "black_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hispanic_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "asian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "american_indian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hawaiian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "other_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "residential_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_delivery_receptacles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "businesses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "1st_quarter_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "annual_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "employees",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "water_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "land_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "single_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "multi_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_beneficiaries",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "disabled_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "parents_and_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "spouses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "children",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "over_65",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_all",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CBSA) references CBSA(CBSA)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Name 10 cities with their states that are under the Lexington-Fayette, KY office of the Canada Border Services Agency.",
    "gold_sql": "SELECT DISTINCT T2.city, T2.state FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_name = 'Lexington-Fayette, KY' LIMIT 10",
    "predicted_sql": "SELECT T2.city, T2.state FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_name = 'Lexington-Fayette, KY' LIMIT 10"
  },
  {
    "idx": 391,
    "relevant_table_schema": {
      "congress": {
        "columns": [
          {
            "field": "cognress_rep_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "party",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(abbreviation) references state(abbreviation)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "House",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "District",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "land_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "zip_congress": {
        "columns": [
          {
            "field": "foreign key(zip_code) references zip_data(zip_code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(district) references congress(cognress_rep_id)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Show the zip code of the county represented by Buchanan Vernon.",
    "gold_sql": "SELECT T2.zip_code FROM congress AS T1 INNER JOIN zip_congress AS T2 ON T1.cognress_rep_id = T2.district WHERE T1.first_name = 'Buchanan' AND T1.last_name = 'Vernon'",
    "predicted_sql": "SELECT T2.zip_code FROM congress AS T1 INNER JOIN zip_congress AS T2 ON T1.cognress_rep_id = T2.district WHERE T1.first_name = 'Buchanan' AND T1.last_name = 'Vernon'"
  },
  {
    "idx": 392,
    "relevant_table_schema": {
      "state": {
        "columns": [
          {
            "field": "abbreviation",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "zip_data": {
        "columns": [
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state) references state(abbreviation)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "multi_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_zone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "daylight_savings",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "elevation",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "county_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "division",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2020",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2010",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "households",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_house_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_income_per_household",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "persons_per_household",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "white_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "black_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hispanic_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "asian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "american_indian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hawaiian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "other_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "residential_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_delivery_receptacles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "businesses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "1st_quarter_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "annual_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "employees",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "water_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "land_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "single_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "multi_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_beneficiaries",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "disabled_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "parents_and_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "spouses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "children",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "over_65",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_all",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CBSA) references CBSA(CBSA)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Calculate the average number of beneficiaries per postal point in Guam.",
    "gold_sql": "SELECT CAST(SUM(T2.total_beneficiaries) AS REAL) / COUNT(T2.zip_code) FROM state AS T1 INNER JOIN zip_data AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'Guam'",
    "predicted_sql": "SELECT CAST(SUM(T2.total_beneficiaries) AS REAL) / COUNT(T1.abbreviation) FROM state AS T1 INNER JOIN zip_data AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'Guam'"
  },
  {
    "idx": 393,
    "relevant_table_schema": {
      "avoid": {
        "columns": [
          {
            "field": "foreign key(zip_code) references zip_data(zip_code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "bad_alias",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "zip_data": {
        "columns": [
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state) references state(abbreviation)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "multi_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_zone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "daylight_savings",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "elevation",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "county_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "division",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2020",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2010",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "households",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_house_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_income_per_household",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "persons_per_household",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "white_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "black_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hispanic_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "asian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "american_indian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hawaiian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "other_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "residential_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_delivery_receptacles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "businesses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "1st_quarter_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "annual_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "employees",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "water_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "land_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "single_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "multi_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_beneficiaries",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "disabled_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "parents_and_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "spouses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "children",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "over_65",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_all",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CBSA) references CBSA(CBSA)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "What is the average household income in the city known as \"Danzig\"?",
    "gold_sql": "SELECT T2.avg_income_per_household FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.bad_alias = 'Danzig'",
    "predicted_sql": "SELECT AVG(T2.avg_income_per_household) FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.city = 'Danzig'"
  },
  {
    "idx": 394,
    "relevant_table_schema": {
      "avoid": {
        "columns": [
          {
            "field": "foreign key(zip_code) references zip_data(zip_code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "bad_alias",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "zip_data": {
        "columns": [
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state) references state(abbreviation)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "multi_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_zone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "daylight_savings",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "elevation",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "county_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "division",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2020",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2010",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "households",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_house_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_income_per_household",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "persons_per_household",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "white_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "black_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hispanic_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "asian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "american_indian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hawaiian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "other_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "residential_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_delivery_receptacles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "businesses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "1st_quarter_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "annual_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "employees",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "water_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "land_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "single_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "multi_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_beneficiaries",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "disabled_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "parents_and_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "spouses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "children",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "over_65",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_all",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CBSA) references CBSA(CBSA)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "What is the difference in the number of bad alias between Aguada city and Aguadilla city?",
    "gold_sql": "SELECT COUNT(CASE WHEN T2.city = 'Aguada' THEN T1.bad_alias ELSE NULL END) - COUNT(CASE WHEN T2.city = 'Aguadilla' THEN T1.bad_alias ELSE NULL END) AS DIFFERENCE FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code",
    "predicted_sql": "SELECT COUNT(T1.bad_alias) - ( SELECT COUNT(bad_alias) FROM avoid WHERE city = 'Aguadilla' ) FROM avoid WHERE city = 'Aguada'"
  },
  {
    "idx": 395,
    "relevant_table_schema": {
      "zip_data": {
        "columns": [
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state) references state(abbreviation)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "multi_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_zone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "daylight_savings",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "elevation",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "county_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "division",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2020",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2010",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "households",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_house_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_income_per_household",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "persons_per_household",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "white_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "black_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hispanic_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "asian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "american_indian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hawaiian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "other_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "residential_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_delivery_receptacles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "businesses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "1st_quarter_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "annual_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "employees",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "water_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "land_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "single_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "multi_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_beneficiaries",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "disabled_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "parents_and_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "spouses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "children",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "over_65",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_all",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CBSA) references CBSA(CBSA)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "foreign key(zip_code) references zip_data(zip_code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state) references state(abbreviation)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "In which county can you find the city with the highest number of females?",
    "gold_sql": "SELECT T4.county FROM zip_data AS T3 INNER JOIN country AS T4 ON T3.zip_code = T4.zip_code GROUP BY T4.county ORDER BY T3.female_population DESC LIMIT 1",
    "predicted_sql": "SELECT T2.county FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T1.female_population = ( SELECT MAX(T1.female_population) FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code )"
  },
  {
    "idx": 396,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "foreign key(zip_code) references zip_data(zip_code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state) references state(abbreviation)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "zip_data": {
        "columns": [
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state) references state(abbreviation)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "multi_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_zone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "daylight_savings",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "elevation",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "county_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "division",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2020",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2010",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "households",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_house_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_income_per_household",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "persons_per_household",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "white_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "black_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hispanic_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "asian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "american_indian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hawaiian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "other_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "residential_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_delivery_receptacles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "businesses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "1st_quarter_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "annual_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "employees",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "water_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "land_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "single_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "multi_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_beneficiaries",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "disabled_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "parents_and_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "spouses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "children",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "over_65",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_all",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CBSA) references CBSA(CBSA)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Among the zip code under Saint Croix county, which zip code has the biggest land area?",
    "gold_sql": "SELECT T1.zip_code FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.county = 'SAINT CROIX' ORDER BY T2.land_area DESC LIMIT 1",
    "predicted_sql": "SELECT T2.zip_code FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.county = 'Saint Croix' ORDER BY T2.land_area DESC LIMIT 1"
  },
  {
    "idx": 397,
    "relevant_table_schema": {
      "area_code": {
        "columns": [
          {
            "field": "foreign key(zip_code) references zip_data(zip_code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "area_code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "zip_data": {
        "columns": [
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state) references state(abbreviation)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "multi_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_zone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "daylight_savings",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "elevation",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "county_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "division",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2020",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2010",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "households",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_house_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_income_per_household",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "persons_per_household",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "white_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "black_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hispanic_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "asian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "american_indian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hawaiian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "other_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "residential_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_delivery_receptacles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "businesses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "1st_quarter_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "annual_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "employees",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "water_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "land_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "single_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "multi_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_beneficiaries",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "disabled_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "parents_and_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "spouses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "children",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "over_65",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_all",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CBSA) references CBSA(CBSA)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Among the cities with area code 608, how many cities implement daylight savings?",
    "gold_sql": "SELECT COUNT(T2.city) FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = 608 AND T2.daylight_savings = 'Yes'",
    "predicted_sql": "SELECT COUNT(T2.city) FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = 608 AND T2.daylight_savings = 'Yes'"
  },
  {
    "idx": 398,
    "relevant_table_schema": {
      "zip_data": {
        "columns": [
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state) references state(abbreviation)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "multi_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_zone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "daylight_savings",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "elevation",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "county_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "division",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2020",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2010",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "households",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_house_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_income_per_household",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "persons_per_household",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "white_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "black_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hispanic_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "asian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "american_indian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hawaiian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "other_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "residential_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_delivery_receptacles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "businesses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "1st_quarter_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "annual_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "employees",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "water_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "land_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "single_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "multi_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_beneficiaries",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "disabled_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "parents_and_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "spouses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "children",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "over_65",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_all",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CBSA) references CBSA(CBSA)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "foreign key(zip_code) references zip_data(zip_code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state) references state(abbreviation)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Please list the names of all the counties with at least one residential area that implements daylight saving.",
    "gold_sql": "SELECT DISTINCT T2.county FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T1.daylight_savings = 'Yes'",
    "predicted_sql": "SELECT T2.county FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T1.daylight_savings = 'true' GROUP BY T2.county"
  },
  {
    "idx": 399,
    "relevant_table_schema": {
      "state": {
        "columns": [
          {
            "field": "abbreviation",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "zip_data": {
        "columns": [
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(state) references state(abbreviation)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "multi_county",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "organization",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_zone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "daylight_savings",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "elevation",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "county_fips",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "division",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2020",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population_2010",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "households",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_house_value",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avg_income_per_household",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "persons_per_household",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "white_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "black_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hispanic_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "asian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "american_indian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hawaiian_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "other_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "male_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "female_median_age",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "residential_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_mailboxes",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_delivery_receptacles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "businesses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "1st_quarter_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "annual_payroll",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "employees",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "water_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "land_area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "single_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "multi_family_delivery_units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_beneficiaries",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "disabled_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "parents_and_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "spouses",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "children",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "over_65",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_all",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_retired_workers",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "monthly_benefits_widowed",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CBSA) references CBSA(CBSA)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "In California, how many delivery receptacles are there in the community post office that has the highest number of delivery receptacles?",
    "gold_sql": "SELECT COUNT(*) FROM state AS T1 INNER JOIN zip_data AS T2 ON T1.abbreviation = T2.state WHERE T1.abbreviation = 'CA' AND T2.type LIKE '%Community Post Office%' AND T1.name = 'California' AND T2.state = 'CA'",
    "predicted_sql": "SELECT T2.total_delivery_receptacles FROM state AS T1 INNER JOIN zip_data AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'California' ORDER BY T2.total_delivery_receptacles DESC LIMIT 1"
  },
  {
    "idx": 400,
    "relevant_table_schema": {
      "rootbeer": {
        "columns": [
          {
            "field": "RootBeerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BrandID) references rootbeerbrand(BrandID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ContainerType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references geolocation(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PurchaseDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "transaction": {
        "columns": [
          {
            "field": "TransactionID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "CreditCardNumber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CustomerID) references customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "TransactionDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CreditCardType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(RootBeerID) references rootbeer(RootBeerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PurchasePrice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "rootbeerbrand": {
        "columns": [
          {
            "field": "BrandID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "BrandName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstBrewedYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BreweryName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CaneSugar",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CornSyrup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Honey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ArtificialSweetener",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Caffeinated",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alcoholic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInCans",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInBottles",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInKegs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FacebookPage",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Twitter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WholesaleCost",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrentRetailPrice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Calculate the difference between the number of root beers sold that use cane sugar and corn syrup.",
    "gold_sql": "SELECT COUNT(CASE WHEN T3.CaneSugar = 'TRUE' THEN T1.BrandID ELSE NULL END) - COUNT(CASE WHEN T3.CornSyrup = 'TRUE' THEN T1.BrandID ELSE NULL END) AS DIFFERENCE FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID",
    "predicted_sql": "SELECT T3.CaneSugar - T3.CornSyrup FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID"
  },
  {
    "idx": 401,
    "relevant_table_schema": {
      "location": {
        "columns": [
          {
            "field": "LocationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references geolocation(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "LocationName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StreetAddress",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ZipCode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "geolocation": {
        "columns": [
          {
            "field": "LocationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the precise location of zip code 95819?",
    "gold_sql": "SELECT T2.Latitude, T2.Longitude FROM location AS T1 INNER JOIN geolocation AS T2 ON T1.LocationID = T2.LocationID WHERE T1.ZipCode = 95819",
    "predicted_sql": "SELECT T2.Latitude, T2.Longitude FROM location AS T1 INNER JOIN geolocation AS T2 ON T1.LocationID = T2.LocationID WHERE T1.ZipCode = 95819"
  },
  {
    "idx": 402,
    "relevant_table_schema": {
      "rootbeer": {
        "columns": [
          {
            "field": "RootBeerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BrandID) references rootbeerbrand(BrandID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ContainerType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references geolocation(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PurchaseDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "rootbeerbrand": {
        "columns": [
          {
            "field": "BrandID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "BrandName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstBrewedYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BreweryName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CaneSugar",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CornSyrup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Honey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ArtificialSweetener",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Caffeinated",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alcoholic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInCans",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInBottles",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInKegs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FacebookPage",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Twitter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WholesaleCost",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrentRetailPrice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the brand names of bottled root beer whose first brewing year is no later than 1930.",
    "gold_sql": "SELECT T2.BrandName FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID WHERE T2.FirstBrewedYear < '1930-01-01' AND T1.ContainerType = 'Bottle' ORDER BY T2.FirstBrewedYear LIMIT 1",
    "predicted_sql": "SELECT T2.BrandName FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID WHERE T1.PurchaseDate LIKE '1930%'"
  },
  {
    "idx": 403,
    "relevant_table_schema": {
      "location": {
        "columns": [
          {
            "field": "LocationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references geolocation(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "LocationName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StreetAddress",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ZipCode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "geolocation": {
        "columns": [
          {
            "field": "LocationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the precise coordinate of Sac State Union?",
    "gold_sql": "SELECT T2.Latitude, T2.Longitude FROM location AS T1 INNER JOIN geolocation AS T2 ON T1.LocationID = T2.LocationID WHERE T1.LocationName = 'Sac State Union'",
    "predicted_sql": "SELECT T2.Latitude, T2.Longitude FROM location AS T1 INNER JOIN geolocation AS T2 ON T1.LocationID = T2.LocationID WHERE T1.LocationName = 'Sac State Union'"
  },
  {
    "idx": 404,
    "relevant_table_schema": {
      "rootbeer": {
        "columns": [
          {
            "field": "RootBeerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BrandID) references rootbeerbrand(BrandID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ContainerType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references geolocation(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PurchaseDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "rootbeerbrand": {
        "columns": [
          {
            "field": "BrandID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "BrandName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstBrewedYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BreweryName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CaneSugar",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CornSyrup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Honey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ArtificialSweetener",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Caffeinated",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alcoholic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInCans",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInBottles",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInKegs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FacebookPage",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Twitter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WholesaleCost",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrentRetailPrice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many canned A&W were purchased in 2016?",
    "gold_sql": "SELECT COUNT(T1.BrandID) FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID WHERE T1.ContainerType = 'Can' AND T2.BrandName = 'A&W' AND T1.PurchaseDate LIKE '2016%'",
    "predicted_sql": "SELECT SUM(CASE WHEN SUBSTR(T1.PurchaseDate, -4) = '2016' AND T2.BrandName = 'A&W' AND T2.AvailableInCans = 'TRUE' THEN 1 ELSE 0 END) FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID"
  },
  {
    "idx": 405,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "CustomerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "First",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StreetAddress",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ZipCode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PhoneNumber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstPurchaseDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SubscribedToEmailList",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "transaction": {
        "columns": [
          {
            "field": "TransactionID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "CreditCardNumber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CustomerID) references customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "TransactionDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CreditCardType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(RootBeerID) references rootbeer(RootBeerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PurchasePrice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many times did Anna Himes use her Mastercard when paying between 12/25/2014 and 5/20/2016 ?",
    "gold_sql": "SELECT COUNT(T2.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Anna' AND T1.Last = 'Himes' AND T2.CreditCardType = 'MasterCard' AND T2.TransactionDate BETWEEN '2014-12-25' AND '2016-05-20'",
    "predicted_sql": "SELECT COUNT(T2.CreditCardNumber) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Anna' AND T1.Last = 'Himes' AND T2.TransactionDate BETWEEN '2014-12-25' AND '2016-05-20' AND T2.CreditCardType = 'Mastercard'"
  },
  {
    "idx": 406,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "CustomerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "First",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StreetAddress",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ZipCode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PhoneNumber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstPurchaseDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SubscribedToEmailList",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "transaction": {
        "columns": [
          {
            "field": "TransactionID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "CreditCardNumber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CustomerID) references customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "TransactionDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CreditCardType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(RootBeerID) references rootbeer(RootBeerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PurchasePrice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "rootbeer": {
        "columns": [
          {
            "field": "RootBeerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BrandID) references rootbeerbrand(BrandID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ContainerType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references geolocation(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PurchaseDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "rootbeerbrand": {
        "columns": [
          {
            "field": "BrandID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "BrandName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstBrewedYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BreweryName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CaneSugar",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CornSyrup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Honey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ArtificialSweetener",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Caffeinated",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alcoholic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInCans",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInBottles",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInKegs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FacebookPage",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Twitter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WholesaleCost",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrentRetailPrice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the male customers in Sacramento, what percentage bought Dominion root beer in 2013?",
    "gold_sql": "SELECT CAST(COUNT(CASE WHEN T4.BrandName = 'Dominion' THEN T1.CustomerID ELSE NULL END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeer AS T3 ON T2.RootBeerID = T3.RootBeerID INNER JOIN rootbeerbrand AS T4 ON T3.BrandID = T4.BrandID WHERE T1.City = 'Sacramento' AND T1.Gender = 'M' AND T2.TransactionDate LIKE '2014%'",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN T3.BrandName = 'Dominion' AND strftime('%Y', T3.PurchaseDate) = '2013' AND T2.Gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeer AS T3 ON T2.RootBeerID = T3.RootBeerID INNER JOIN rootbeerbrand AS T4 ON T3.BrandID = T4.BrandID WHERE T1.City = 'Sacramento'"
  },
  {
    "idx": 407,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "CustomerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "First",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StreetAddress",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ZipCode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PhoneNumber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstPurchaseDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SubscribedToEmailList",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many customers are named Charles in Sacramento?",
    "gold_sql": "SELECT COUNT(CustomerID) FROM customers WHERE First = 'Charles' AND City = 'Sacramento'",
    "predicted_sql": "SELECT COUNT(CustomerID) FROM customers WHERE First = 'Charles' AND City = 'Sacramento'"
  },
  {
    "idx": 408,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "CustomerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "First",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Last",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StreetAddress",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ZipCode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PhoneNumber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstPurchaseDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SubscribedToEmailList",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "rootbeerreview": {
        "columns": [
          {
            "field": "foreign key(CustomerID) references customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(BrandID) references rootbeerbrand(BrandID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "StarRating",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ReviewDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Review",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "rootbeerbrand": {
        "columns": [
          {
            "field": "BrandID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "BrandName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstBrewedYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BreweryName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CaneSugar",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CornSyrup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Honey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ArtificialSweetener",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Caffeinated",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alcoholic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInCans",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInBottles",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInKegs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FacebookPage",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Twitter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WholesaleCost",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrentRetailPrice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What are the full names of the customer who gave River City a 5-star?",
    "gold_sql": "SELECT T1.First, T1.Last FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeerbrand AS T3 ON T2.BrandID = T3.BrandID WHERE T3.BrandName = 'River City' AND T2.StarRating = 5",
    "predicted_sql": "SELECT T1.First, T1.Last FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeerbrand AS T3 ON T2.BrandID = T3.BrandID WHERE T2.StarRating = 5 AND T3.BrandName = 'River City'"
  },
  {
    "idx": 409,
    "relevant_table_schema": {
      "rootbeerbrand": {
        "columns": [
          {
            "field": "BrandID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "BrandName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstBrewedYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BreweryName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "State",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CaneSugar",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CornSyrup",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Honey",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ArtificialSweetener",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Caffeinated",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Alcoholic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInCans",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInBottles",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AvailableInKegs",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FacebookPage",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Twitter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WholesaleCost",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrentRetailPrice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "rootbeer": {
        "columns": [
          {
            "field": "RootBeerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BrandID) references rootbeerbrand(BrandID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ContainerType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references geolocation(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PurchaseDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "transaction": {
        "columns": [
          {
            "field": "TransactionID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "CreditCardNumber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CustomerID) references customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "TransactionDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CreditCardType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(LocationID) references location(LocationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(RootBeerID) references rootbeer(RootBeerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PurchasePrice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List out root beer brand that is not caffeinated and not containing cane sugar. What is the total amount sold for this products?",
    "gold_sql": "SELECT T1.BrandName, SUM(T3.PurchasePrice) FROM rootbeerbrand AS T1 INNER JOIN rootbeer AS T2 ON T1.BrandID = T2.BrandID INNER JOIN `transaction` AS T3 ON T2.RootBeerID = T3.RootBeerID WHERE T1.CaneSugar = 'FALSE' AND T1.Caffeinated = 'FALSE' GROUP BY T1.BrandName",
    "predicted_sql": "SELECT T1.BrandName, SUM(T3.PurchasePrice * T2.ContainerType = 'bottle' ? 0.5 : 1) FROM rootbeerbrand AS T1 INNER JOIN rootbeer AS T2 ON T1.BrandID = T2.BrandID INNER JOIN transaction AS T3 ON T2.RootBeerID = T3.RootBeerID WHERE T1.CaneSugar = 'false' AND T1.Caffeinated = 'false'"
  },
  {
    "idx": 410,
    "relevant_table_schema": {
      "sales": {
        "columns": [
          {
            "field": "SalesID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(SalesPersonID) references Employees(EmployeeID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "products": {
        "columns": [
          {
            "field": "ProductID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many employees sold over 20,000 quantities of \"Touring-2000 Blue, 50\"?",
    "gold_sql": "SELECT COUNT(*) FROM ( SELECT SUM(Quantity) FROM Sales WHERE ProductID IN ( SELECT ProductID FROM Products WHERE Name = 'Touring-2000 Blue, 50' ) GROUP BY Quantity, SalesPersonID HAVING SUM(Quantity) > 20000 )",
    "predicted_sql": "SELECT COUNT(T1.SalesID) FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'Touring-2000 Blue, 50' AND T1.Quantity > 20000"
  },
  {
    "idx": 411,
    "relevant_table_schema": {
      "employees": {
        "columns": [
          {
            "field": "EmployeeID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "FirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MiddleInitial",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "sales": {
        "columns": [
          {
            "field": "SalesID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(SalesPersonID) references Employees(EmployeeID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Give the full name of the employee who has sold the most quantity.",
    "gold_sql": "SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID ORDER BY T2.Quantity DESC LIMIT 1",
    "predicted_sql": "SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID GROUP BY T2.Quantity ORDER BY COUNT(T2.Quantity) DESC LIMIT 1"
  },
  {
    "idx": 412,
    "relevant_table_schema": {
      "sales": {
        "columns": [
          {
            "field": "SalesID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(SalesPersonID) references Employees(EmployeeID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "products": {
        "columns": [
          {
            "field": "ProductID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many customer ids have purchased Hex Nut 9?",
    "gold_sql": "SELECT COUNT(T1.CustomerID) FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'Hex Nut 9'",
    "predicted_sql": "SELECT COUNT(DISTINCT T1.CustomerID) FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'Hex Nut 9'"
  },
  {
    "idx": 413,
    "relevant_table_schema": {
      "products": {
        "columns": [
          {
            "field": "ProductID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "sales": {
        "columns": [
          {
            "field": "SalesID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(SalesPersonID) references Employees(EmployeeID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many free gifts have customer with id 11782 received?",
    "gold_sql": "SELECT COUNT(T1.ProductID) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T2.CustomerID = 11782 AND T1.Price = 0",
    "predicted_sql": "SELECT SUM(IIF(T2.Quantity = 0, 1, 0)) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T2.CustomerID = 11782 AND T1.Name = 'Free gift'"
  },
  {
    "idx": 414,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "CustomerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "FirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MiddleInitial",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many customers are named Madison?",
    "gold_sql": "SELECT COUNT(CustomerID) FROM Customers WHERE FirstName = 'Madison'",
    "predicted_sql": "SELECT COUNT(*) FROM Customers WHERE FirstName = 'Madison'"
  },
  {
    "idx": 415,
    "relevant_table_schema": {
      "products": {
        "columns": [
          {
            "field": "ProductID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "sales": {
        "columns": [
          {
            "field": "SalesID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(SalesPersonID) references Employees(EmployeeID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the products that have price ranges from 100 to 150, what is the customer ID and sales ID of the product with a quantity lower than 25?",
    "gold_sql": "SELECT T2.CustomerID, T2.SalesID FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Price BETWEEN 100 AND 150 AND T2.Quantity < 25",
    "predicted_sql": "SELECT T2.CustomerID, T2.SalesID FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Price BETWEEN 100 AND 150 AND T2.Quantity < 25"
  },
  {
    "idx": 416,
    "relevant_table_schema": {
      "products": {
        "columns": [
          {
            "field": "ProductID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "sales": {
        "columns": [
          {
            "field": "SalesID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(SalesPersonID) references Employees(EmployeeID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many sales people managed to sell Headlights - Weatherproof?",
    "gold_sql": "SELECT COUNT(T2.SalesPersonID) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'Headlights - Weatherproof'",
    "predicted_sql": "SELECT COUNT(T2.SalesPersonID) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'Headlights - Weatherproof'"
  },
  {
    "idx": 417,
    "relevant_table_schema": {
      "employees": {
        "columns": [
          {
            "field": "EmployeeID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "FirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MiddleInitial",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "sales": {
        "columns": [
          {
            "field": "SalesID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(SalesPersonID) references Employees(EmployeeID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Write down all of the product ids that were placed by Meander.",
    "gold_sql": "SELECT DISTINCT T2.ProductID FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID WHERE T1.FirstName = 'Meander'",
    "predicted_sql": "SELECT DISTINCT T2.ProductID FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID WHERE T1.FirstName = 'Meander'"
  },
  {
    "idx": 418,
    "relevant_table_schema": {
      "sales": {
        "columns": [
          {
            "field": "SalesID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(SalesPersonID) references Employees(EmployeeID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "products": {
        "columns": [
          {
            "field": "ProductID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Name the product that sold the most quantity.",
    "gold_sql": "SELECT T2.Name FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID ORDER BY T1.Quantity DESC LIMIT 1",
    "predicted_sql": "SELECT T2.Name FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID GROUP BY T1.Quantity, T2.Name ORDER BY T1.Quantity DESC LIMIT 1"
  },
  {
    "idx": 419,
    "relevant_table_schema": {
      "sales": {
        "columns": [
          {
            "field": "SalesID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(SalesPersonID) references Employees(EmployeeID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ProductID) references Products(ProductID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "customers": {
        "columns": [
          {
            "field": "CustomerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "FirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MiddleInitial",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "products": {
        "columns": [
          {
            "field": "ProductID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the full name of the customer who purchased the highest amount of total price in a single purchase?",
    "gold_sql": "SELECT T2.FirstName, T2.MiddleInitial, T2.LastName FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Products AS T3 ON T1.ProductID = T3.ProductID GROUP BY T1.SalesID, T1.Quantity, T3.Price, FirstName, MiddleInitial, LastName ORDER BY T1.Quantity * T3.Price DESC LIMIT 1",
    "predicted_sql": "SELECT T2.FirstName, T2.MiddleInitial, T2.LastName FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Products AS T3 ON T1.ProductID = T3.ProductID GROUP BY T1.SalesID, T1.Quantity, T3.Price, FirstName, MiddleInitial, LastName ORDER BY T1.Quantity * T3.Price DESC LIMIT 1"
  },
  {
    "idx": 420,
    "relevant_table_schema": {
      "menupage": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(menu_id) references Menu(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "page_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "image_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_height",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_width",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "uuid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "menuitem": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(menu_page_id) references MenuPage(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "high_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(dish_id) references Dish(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "created_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "updated_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "xpos",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ypos",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "dish": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "menus_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "times_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lowest_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "highest_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "menu": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sponsor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "event",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "venue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "physical_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "occasion",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "call_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "keywords",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "currency",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "currency_symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "page_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dish_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the menus that include baked apples with cream, who is the sponsor of the menu with the highest price?",
    "gold_sql": "SELECT T4.sponsor FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id INNER JOIN Dish AS T3 ON T2.dish_id = T3.id INNER JOIN Menu AS T4 ON T4.id = T1.menu_id WHERE T3.name = 'Baked apples with cream' AND T3.id = 107 ORDER BY T2.price DESC LIMIT 1",
    "predicted_sql": "SELECT T4.sponsor FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id INNER JOIN Dish AS T3 ON T3.id = T2.dish_id INNER JOIN Menu AS T4 ON T4.id = T3.menus_appeared WHERE T3.highest_price = ( SELECT MAX(T3.highest_price) FROM Dish AS T3 )"
  },
  {
    "idx": 421,
    "relevant_table_schema": {
      "menu": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sponsor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "event",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "venue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "physical_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "occasion",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "call_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "keywords",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "currency",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "currency_symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "page_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dish_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "menupage": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(menu_id) references Menu(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "page_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "image_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_height",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_width",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "uuid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the name of the menu with the highest number of pages?",
    "gold_sql": "SELECT T1.name FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id GROUP BY T2.menu_id ORDER BY COUNT(T2.page_number) DESC LIMIT 1",
    "predicted_sql": "SELECT T1.name FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id GROUP BY T1.name ORDER BY COUNT(T2.page_number) DESC LIMIT 1"
  },
  {
    "idx": 422,
    "relevant_table_schema": {
      "dish": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "menus_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "times_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lowest_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "highest_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "menuitem": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(menu_page_id) references MenuPage(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "high_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(dish_id) references Dish(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "created_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "updated_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "xpos",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ypos",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many dishes have appeared on the menu in less than 5 years?",
    "gold_sql": "SELECT COUNT(*) FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.last_appeared - T1.first_appeared < 5",
    "predicted_sql": "SELECT COUNT(T1.id) FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T2.created_at BETWEEN T1.first_appeared AND T1.last_appeared AND T2.created_at < ( T1.last_appeared + 5 )"
  },
  {
    "idx": 423,
    "relevant_table_schema": {
      "menuitem": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(menu_page_id) references MenuPage(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "high_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(dish_id) references Dish(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "created_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "updated_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "xpos",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ypos",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "dish": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "menus_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "times_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lowest_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "highest_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the names and menu page IDs of the dishes that first appeared in 1861.",
    "gold_sql": "SELECT T2.name, T1.dish_id FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE T2.first_appeared = 1861",
    "predicted_sql": "SELECT T2.name, T1.menu_page_id FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE T2.first_appeared = 1861"
  },
  {
    "idx": 424,
    "relevant_table_schema": {
      "dish": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "menus_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "times_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lowest_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "highest_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the dishes, how many of them are for free?",
    "gold_sql": "SELECT COUNT(*) FROM Dish WHERE lowest_price = 0",
    "predicted_sql": "SELECT COUNT(id) FROM dish WHERE lowest_price = 0"
  },
  {
    "idx": 425,
    "relevant_table_schema": {
      "menu": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sponsor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "event",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "venue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "physical_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "occasion",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "call_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "keywords",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "currency",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "currency_symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "page_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dish_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "menupage": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(menu_id) references Menu(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "page_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "image_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_height",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_width",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "uuid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Under what events was the menu page's full width less than 2000 mm?",
    "gold_sql": "SELECT T1.event FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T2.full_width = 2000",
    "predicted_sql": "SELECT T1.event FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T2.full_width = 2000"
  },
  {
    "idx": 426,
    "relevant_table_schema": {
      "menu": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sponsor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "event",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "venue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "physical_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "occasion",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "call_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "keywords",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "currency",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "currency_symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "page_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dish_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many dishes are there on the menu \"Zentral Theater Terrace\"?",
    "gold_sql": "SELECT COUNT(*) FROM Menu WHERE name = 'Zentral Theater Terrace'",
    "predicted_sql": "SELECT dish_count FROM Menu WHERE name = 'Zentral Theater Terrace'"
  },
  {
    "idx": 427,
    "relevant_table_schema": {
      "menupage": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(menu_id) references Menu(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "page_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "image_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_height",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_width",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "uuid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "menu": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sponsor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "event",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "venue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "physical_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "occasion",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "call_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "keywords",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "currency",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "currency_symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "page_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dish_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List down the menu page IDs for menu sponsored by Occidental & Oriental?",
    "gold_sql": "SELECT T2.id FROM MenuPage AS T1 INNER JOIN Menu AS T2 ON T2.id = T1.menu_id WHERE T2.sponsor = 'Occidental & Oriental'",
    "predicted_sql": "SELECT T1.page_number FROM MenuPage AS T1 INNER JOIN Menu AS T2 ON T1.menu_id = T2.id WHERE T2.sponsor = 'Occidental & Oriental'"
  },
  {
    "idx": 428,
    "relevant_table_schema": {
      "menu": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sponsor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "event",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "venue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "physical_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "occasion",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "call_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "keywords",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "currency",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "currency_symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "page_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dish_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the IDs of all the menus that are DIYs of the restaurant.",
    "gold_sql": "SELECT id FROM Menu WHERE sponsor IS NULL",
    "predicted_sql": "SELECT id FROM Menu WHERE occasion = 'DIY' AND sponsor = 'restaurant'"
  },
  {
    "idx": 429,
    "relevant_table_schema": {
      "menuitem": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(menu_page_id) references MenuPage(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "high_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(dish_id) references Dish(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "created_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "updated_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "xpos",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ypos",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "menupage": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(menu_id) references Menu(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "page_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "image_id",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_height",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "full_width",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "uuid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "menu": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sponsor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "event",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "venue",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "place",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "physical_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "occasion",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "call_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "keywords",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "location_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "currency",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "currency_symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "page_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dish_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "dish": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "menus_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "times_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_appeared",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lowest_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "highest_price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the dishes that appeared at the left upper corner of the CHAS.BRADLEY'S OYSTER & DINING ROOM\"s sponsored menu.",
    "gold_sql": "SELECT T4.name FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T3.sponsor = 'CHAS.BRADLEY''S OYSTER & DINING ROOM' AND T1.xpos < 0.25 AND T1.ypos < 0.25",
    "predicted_sql": "SELECT T4.name FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T2.uuid = 'CHAS.BRADLEY''S OYSTER & DINING ROOM' AND T1.xpos < 0.25 AND T1.ypos < 0.25"
  },
  {
    "idx": 430,
    "relevant_table_schema": {
      "shipment": {
        "columns": [
          {
            "field": "ship_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(cust_id) references customer(cust_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "weight",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(truck_id) references truck(truck_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(driver_id) references driver(driver_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(city_id) references city(city_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ship_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "city_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How much more pounds in total were transported to New York than to Chicago?",
    "gold_sql": "SELECT SUM(CASE WHEN T2.city_name = 'New York' THEN T1.weight ELSE 0 END) - SUM(CASE WHEN T2.city_name = 'Chicago' THEN T1.weight ELSE 0 END) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id",
    "predicted_sql": "SELECT SUM(CASE WHEN T2.city_name = 'New York' THEN weight ELSE 0 END) - SUM(CASE WHEN T2.city_name = 'Chicago' THEN weight ELSE 0 END) FROM shipment AS T1 INNER JOIN city AS T2 ON T2.city_id = T1.city_id"
  },
  {
    "idx": 431,
    "relevant_table_schema": {
      "truck": {
        "columns": [
          {
            "field": "truck_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "make",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "model_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "shipment": {
        "columns": [
          {
            "field": "ship_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(cust_id) references customer(cust_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "weight",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(truck_id) references truck(truck_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(driver_id) references driver(driver_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(city_id) references city(city_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ship_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average shipment weight carried by the oldest Mack?",
    "gold_sql": "SELECT AVG(T2.weight) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T1.make = 'Mack'",
    "predicted_sql": "SELECT AVG(T2.weight) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T1.make = 'Mack' ORDER BY T1.model_year LIMIT 1"
  },
  {
    "idx": 432,
    "relevant_table_schema": {
      "shipment": {
        "columns": [
          {
            "field": "ship_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(cust_id) references customer(cust_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "weight",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(truck_id) references truck(truck_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(driver_id) references driver(driver_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(city_id) references city(city_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ship_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "city_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Calculate the population density of the city as the destination of shipment no.1369.",
    "gold_sql": "SELECT T2.area / T2.population FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T1.ship_id = '1369'",
    "predicted_sql": "SELECT T2.population / T2.area FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T1.ship_id = 1369"
  },
  {
    "idx": 433,
    "relevant_table_schema": {
      "shipment": {
        "columns": [
          {
            "field": "ship_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(cust_id) references customer(cust_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "weight",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(truck_id) references truck(truck_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(driver_id) references driver(driver_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(city_id) references city(city_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ship_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "city_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Where was the destination city of shipment no.1701?",
    "gold_sql": "SELECT T2.city_name FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T1.ship_id = '1701'",
    "predicted_sql": "SELECT T2.city_name FROM shipment AS T1 INNER JOIN city AS T2 ON T2.city_id = T1.city_id WHERE T1.ship_id = '1701'"
  },
  {
    "idx": 434,
    "relevant_table_schema": {
      "shipment": {
        "columns": [
          {
            "field": "ship_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(cust_id) references customer(cust_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "weight",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(truck_id) references truck(truck_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(driver_id) references driver(driver_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(city_id) references city(city_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ship_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "city_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "driver": {
        "columns": [
          {
            "field": "driver_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Determine the number of shipments delivered by Andrea Simons to Huntsville in 2016.",
    "gold_sql": "SELECT COUNT(*) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id INNER JOIN driver AS T3 ON T3.driver_id = T1.driver_id WHERE T3.first_name = 'Andrea' AND T3.last_name = 'Simons' AND T2.city_name = 'Huntsville' AND STRFTIME('%Y', T1.ship_date) = '2016'",
    "predicted_sql": "SELECT COUNT(*) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id INNER JOIN driver AS T3 ON T1.driver_id = T3.driver_id WHERE T3.first_name = 'Andrea' AND T3.last_name = 'Simons' AND T2.city_name = 'Huntsville' AND STRFTIME('%Y', T1.ship_date) = '2016'"
  },
  {
    "idx": 435,
    "relevant_table_schema": {
      "shipment": {
        "columns": [
          {
            "field": "ship_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(cust_id) references customer(cust_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "weight",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(truck_id) references truck(truck_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(driver_id) references driver(driver_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(city_id) references city(city_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ship_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "city_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Where was shipment no. 1002 headed?",
    "gold_sql": "SELECT T2.city_name FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T1.ship_id = '1002'",
    "predicted_sql": "SELECT T2.city_name FROM shipment AS T1 INNER JOIN city AS T2 ON T2.city_id = T1.city_id WHERE T1.ship_id = 1002"
  },
  {
    "idx": 436,
    "relevant_table_schema": {
      "truck": {
        "columns": [
          {
            "field": "truck_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "make",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "model_year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "shipment": {
        "columns": [
          {
            "field": "ship_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(cust_id) references customer(cust_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "weight",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(truck_id) references truck(truck_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(driver_id) references driver(driver_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(city_id) references city(city_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ship_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many shipments with weight of no more than 1,000 pounds were shipped by the oldest truck?",
    "gold_sql": "SELECT COUNT(*) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T2.weight < 1000 ORDER BY T1.model_year ASC LIMIT 1",
    "predicted_sql": "SELECT COUNT(T2.ship_id) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T1.model_year = ( SELECT MAX(model_year) FROM truck ) AND T2.weight <= 1000"
  },
  {
    "idx": 437,
    "relevant_table_schema": {
      "shipment": {
        "columns": [
          {
            "field": "ship_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(cust_id) references customer(cust_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "weight",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(truck_id) references truck(truck_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(driver_id) references driver(driver_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(city_id) references city(city_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ship_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "city_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the shipments in 2017, how many of them have the destination in New Jersey?",
    "gold_sql": "SELECT COUNT(*) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE STRFTIME('%Y', T1.ship_date) = '2017' AND T2.state = 'New Jersey'",
    "predicted_sql": "SELECT COUNT(T1.ship_id) FROM shipment AS T1 INNER JOIN city AS T2 ON T2.city_id = T1.city_id WHERE STRFTIME('%Y', T1.ship_date) = '2017' AND T2.state = 'NJ'"
  },
  {
    "idx": 438,
    "relevant_table_schema": {
      "shipment": {
        "columns": [
          {
            "field": "ship_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(cust_id) references customer(cust_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "weight",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(truck_id) references truck(truck_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(driver_id) references driver(driver_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(city_id) references city(city_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ship_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "customer": {
        "columns": [
          {
            "field": "cust_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "cust_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "annual_revenue",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cust_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Give the annual revenue of the customer of ship ID 1047.",
    "gold_sql": "SELECT T2.annual_revenue FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T1.ship_id = '1047'",
    "predicted_sql": "SELECT T2.annual_revenue FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T1.ship_id = '1047'"
  },
  {
    "idx": 439,
    "relevant_table_schema": {
      "shipment": {
        "columns": [
          {
            "field": "ship_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(cust_id) references customer(cust_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "weight",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(truck_id) references truck(truck_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(driver_id) references driver(driver_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(city_id) references city(city_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ship_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "city_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "city_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the ship ID of shipments shipped to the city with the largest area?",
    "gold_sql": "SELECT T1.ship_id FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id ORDER BY T2.area DESC LIMIT 1",
    "predicted_sql": "SELECT T1.ship_id FROM shipment AS T1 INNER JOIN city AS T2 ON T2.city_id = T1.city_id ORDER BY T2.area DESC LIMIT 1"
  },
  {
    "idx": 440,
    "relevant_table_schema": {
      "pages": {
        "columns": [
          {
            "field": "pid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(lid) references langs(lid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "page",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "revision",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "words",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List down the page id of titles start with alphabet \"b\".",
    "gold_sql": "SELECT pid FROM pages WHERE title LIKE 'b%'",
    "predicted_sql": "SELECT page FROM pages WHERE title LIKE 'b%'"
  },
  {
    "idx": 441,
    "relevant_table_schema": {
      "pages": {
        "columns": [
          {
            "field": "pid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(lid) references langs(lid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "page",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "revision",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "words",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which Wikipedia page number does the Catalan language's name, Acampada, appear on?",
    "gold_sql": "SELECT page FROM pages WHERE title = 'Acampada'",
    "predicted_sql": "SELECT page FROM pages WHERE words = ( SELECT MAX(words) FROM pages )"
  },
  {
    "idx": 442,
    "relevant_table_schema": {
      "pages": {
        "columns": [
          {
            "field": "pid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(lid) references langs(lid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "page",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "revision",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "words",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which Wikipedia page number has the highest number of words in the Catalan language?",
    "gold_sql": "SELECT page FROM pages WHERE words = ( SELECT MAX(words) FROM pages )",
    "predicted_sql": "SELECT page FROM pages WHERE words = ( SELECT MAX(words) FROM pages )"
  },
  {
    "idx": 443,
    "relevant_table_schema": {
      "words": {
        "columns": [
          {
            "field": "wid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "word",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "occurrences",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the Catalan words with an occurrence of over 200000.",
    "gold_sql": "SELECT word FROM words WHERE occurrences > 200000",
    "predicted_sql": "SELECT word FROM words WHERE occurrences > 200000"
  },
  {
    "idx": 444,
    "relevant_table_schema": {
      "pages": {
        "columns": [
          {
            "field": "pid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(lid) references langs(lid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "page",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "revision",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "words",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "pages_words": {
        "columns": [
          {
            "field": "foreign key(pid) references pages(pid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(wid) references words(wid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "occurrences",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many word that has number of different words equal to 3?",
    "gold_sql": "SELECT COUNT(T2.wid) FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T1.words = 3",
    "predicted_sql": "SELECT COUNT(T1.pid) FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T2.occurrences = 3"
  },
  {
    "idx": 445,
    "relevant_table_schema": {
      "biwords": {
        "columns": [
          {
            "field": "foreign key(lid) references langs(lid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(w1st) references words(wid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(w2nd) references words(wid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "occurrences",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "langs": {
        "columns": [
          {
            "field": "lid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "lang",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "locale",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pages",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "words",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the language of the pair of words numbered 1 and 616?",
    "gold_sql": "SELECT T2.lang FROM biwords AS T1 INNER JOIN langs AS T2 ON T1.lid = T2.lid WHERE T1.w1st = 1 AND T1.w2nd = 616",
    "predicted_sql": "SELECT T2.lang FROM biwords AS T1 INNER JOIN langs AS T2 ON T1.lid = T2.lid WHERE T1.w1st = ( SELECT wid FROM words WHERE word = 'number' ) AND T1.w2nd = ( SELECT wid FROM words WHERE word = 'one' ) OR T1.w1st = ( SELECT wid FROM words WHERE word = 'one' ) AND T1.w2nd = ( SELECT wid FROM words WHERE word = 'number' ) OR T1.w1st = ( SELECT wid FROM words WHERE word = 'six' ) AND T1.w2nd = ( SELECT wid FROM words WHERE word = 'one' ) OR T1.w1st = ( SELECT wid FROM words WHERE word = 'one' ) AND T1.w2nd = ( SELECT wid FROM words WHERE word = 'six' ) UNION SELECT T2.lang FROM biwords AS T1 INNER JOIN langs AS T2 ON T1.lid = T2.lid WHERE T1.w1st = ( SELECT wid FROM words WHERE word = 'number' ) AND T1.w2nd = ( SELECT wid FROM words WHERE word = 'six' ) OR T1.w1st = ( SELECT wid FROM words WHERE word = 'six' ) AND T1.w2nd = ( SELECT wid FROM words WHERE word = 'number' )"
  },
  {
    "idx": 446,
    "relevant_table_schema": {
      "words": {
        "columns": [
          {
            "field": "wid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "word",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "occurrences",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "biwords": {
        "columns": [
          {
            "field": "foreign key(lid) references langs(lid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(w1st) references words(wid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(w2nd) references words(wid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "occurrences",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list all the biwords pairs with \"\u00e0bac\" as its first word.",
    "gold_sql": "SELECT T1.word AS W1, T3.word AS W2 FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st INNER JOIN words AS T3 ON T3.wid = T2.w2nd WHERE T1.word = '\u00e0bac'",
    "predicted_sql": "SELECT w2nd FROM biwords WHERE w1st = ( SELECT wid FROM words WHERE word = '\u00e0bac' )"
  },
  {
    "idx": 447,
    "relevant_table_schema": {
      "pages": {
        "columns": [
          {
            "field": "pid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(lid) references langs(lid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "page",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "revision",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "words",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list any three Wikipedia pages with more than 300 words.",
    "gold_sql": "SELECT page FROM pages WHERE words > 300 LIMIT 3",
    "predicted_sql": "SELECT title FROM pages WHERE words > 300 LIMIT 3"
  },
  {
    "idx": 448,
    "relevant_table_schema": {
      "pages": {
        "columns": [
          {
            "field": "pid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(lid) references langs(lid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "page",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "revision",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "words",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "pages_words": {
        "columns": [
          {
            "field": "foreign key(pid) references pages(pid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(wid) references words(wid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "occurrences",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In which Wikipedia page does the word ID No. 174 have the most appearances? Give the title.",
    "gold_sql": "SELECT title FROM pages WHERE pid = ( SELECT pid FROM pages_words WHERE wid = 174 ORDER BY occurrences DESC LIMIT 1 )",
    "predicted_sql": "SELECT T1.title FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T2.wid = 174 ORDER BY T2.occurrences DESC LIMIT 1"
  },
  {
    "idx": 449,
    "relevant_table_schema": {
      "pages": {
        "columns": [
          {
            "field": "pid",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(lid) references langs(lid)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "page",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "revision",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "words",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the wikipedia pages on Catalan with more than 300 different words, how many of them have a revision ID of over 28330000?",
    "gold_sql": "SELECT COUNT(lid) FROM pages WHERE lid = 1 AND words > 300 AND revision > 28330000",
    "predicted_sql": "SELECT COUNT(page) FROM pages WHERE revision > 28330000 AND words > 300"
  },
  {
    "idx": 450,
    "relevant_table_schema": {
      "air carriers": {
        "columns": [
          {
            "field": "Code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the number of air carriers in the database?",
    "gold_sql": "SELECT COUNT(Code) FROM `Air Carriers`",
    "predicted_sql": "SELECT COUNT(Code) FROM `Air Carriers`"
  },
  {
    "idx": 451,
    "relevant_table_schema": {
      "airlines": {
        "columns": [
          {
            "field": "FL_DATE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OP_CARRIER_AIRLINE_ID) references Air Carriers(Code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "TAIL_NUM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OP_CARRIER_FL_NUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ORIGIN) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "DEST_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(DEST) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CRS_DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLED",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLATION_CODE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CRS_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ACTUAL_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CARRIER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WEATHER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NAS_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SECURITY_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LATE_AIRCRAFT_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Provide the destinations of flight number 1596.",
    "gold_sql": "SELECT DEST FROM Airlines WHERE OP_CARRIER_FL_NUM = 1596",
    "predicted_sql": "SELECT DEST FROM Airlines WHERE OP_CARRIER_FL_NUM = 1596"
  },
  {
    "idx": 452,
    "relevant_table_schema": {
      "airlines": {
        "columns": [
          {
            "field": "FL_DATE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OP_CARRIER_AIRLINE_ID) references Air Carriers(Code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "TAIL_NUM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OP_CARRIER_FL_NUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ORIGIN) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "DEST_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(DEST) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CRS_DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLED",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLATION_CODE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CRS_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ACTUAL_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CARRIER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WEATHER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NAS_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SECURITY_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LATE_AIRCRAFT_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "airports": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which airline does the aircraft with the fastest flight belong to?",
    "gold_sql": "SELECT T1.OP_CARRIER_AIRLINE_ID FROM Airlines AS T1 INNER JOIN Airports AS T2 ON T1.ORIGIN = T2.Code WHERE T1.ACTUAL_ELAPSED_TIME IS NOT NULL AND T1.CRS_ELAPSED_TIME IS NOT NULL ORDER BY T1.ACTUAL_ELAPSED_TIME - T1.CRS_ELAPSED_TIME ASC LIMIT 1",
    "predicted_sql": "SELECT T1.OP_CARRIER_AIRLINE_ID FROM Airlines AS T1 INNER JOIN Airports AS T2 ON T2.Code = T1.DEST WHERE T1.ACTUAL_ELAPSED_TIME = ( SELECT MIN(T1.ACTUAL_ELAPSED_TIME) FROM Airlines AS T1 INNER JOIN Airports AS T2 ON T2.Code = T1.DEST )"
  },
  {
    "idx": 453,
    "relevant_table_schema": {
      "air carriers": {
        "columns": [
          {
            "field": "Code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "airlines": {
        "columns": [
          {
            "field": "FL_DATE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OP_CARRIER_AIRLINE_ID) references Air Carriers(Code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "TAIL_NUM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OP_CARRIER_FL_NUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ORIGIN) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "DEST_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(DEST) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CRS_DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLED",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLATION_CODE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CRS_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ACTUAL_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CARRIER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WEATHER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NAS_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SECURITY_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LATE_AIRCRAFT_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Give the air carrier description of the flights that have an earlier arrival and departure.",
    "gold_sql": "SELECT T1.Description FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T2.ARR_DELAY < 0 AND T2.DEP_DELAY < 0 GROUP BY T1.Description",
    "predicted_sql": "SELECT T1.Description FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T2.DEP_TIME < T2.ARR_TIME"
  },
  {
    "idx": 454,
    "relevant_table_schema": {
      "air carriers": {
        "columns": [
          {
            "field": "Code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "airlines": {
        "columns": [
          {
            "field": "FL_DATE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OP_CARRIER_AIRLINE_ID) references Air Carriers(Code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "TAIL_NUM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OP_CARRIER_FL_NUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ORIGIN) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "DEST_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(DEST) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CRS_DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLED",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLATION_CODE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CRS_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ACTUAL_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CARRIER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WEATHER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NAS_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SECURITY_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LATE_AIRCRAFT_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the tail number of a Compass Airline's plane that flew the most number of flights from LAX to ABQ?",
    "gold_sql": "SELECT T2.OP_CARRIER_AIRLINE_ID FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T1.Description = 'Compass Airlines: CP' AND T2.ORIGIN = 'LAX' AND T2.DEST = 'ABQ' GROUP BY T2.OP_CARRIER_AIRLINE_ID ORDER BY COUNT(T2.OP_CARRIER_AIRLINE_ID) DESC LIMIT 1",
    "predicted_sql": "SELECT T2.TAIL_NUM FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T2.ORIGIN = 'LAX' AND T2.DEST = 'ABQ' GROUP BY T2.TAIL_NUM ORDER BY COUNT(T2.FL_DATE) DESC LIMIT 1"
  },
  {
    "idx": 455,
    "relevant_table_schema": {
      "airports": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "airlines": {
        "columns": [
          {
            "field": "FL_DATE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OP_CARRIER_AIRLINE_ID) references Air Carriers(Code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "TAIL_NUM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OP_CARRIER_FL_NUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ORIGIN) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "DEST_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(DEST) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CRS_DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLED",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLATION_CODE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CRS_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ACTUAL_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CARRIER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WEATHER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NAS_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SECURITY_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LATE_AIRCRAFT_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "air carriers": {
        "columns": [
          {
            "field": "Code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the flights operated by American Airlines Inc., how many of them were scheduled to land in New York?",
    "gold_sql": "SELECT SUM(CASE WHEN T2.DEST = 'JFK' THEN 1 ELSE 0 END) AS count FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST INNER JOIN `Air Carriers` AS T3 ON T2.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T3.Description = 'American Airlines Inc.: AA'",
    "predicted_sql": "SELECT COUNT(T2.DEST) FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST INNER JOIN `Air Carriers` AS T3 ON T2.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T3.Description = 'American Airlines Inc.: 9E' AND T2.DEST = 'NYC'"
  },
  {
    "idx": 456,
    "relevant_table_schema": {
      "airports": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "airlines": {
        "columns": [
          {
            "field": "FL_DATE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OP_CARRIER_AIRLINE_ID) references Air Carriers(Code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "TAIL_NUM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OP_CARRIER_FL_NUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ORIGIN) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "DEST_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(DEST) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CRS_DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLED",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLATION_CODE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CRS_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ACTUAL_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CARRIER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WEATHER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NAS_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SECURITY_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LATE_AIRCRAFT_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "air carriers": {
        "columns": [
          {
            "field": "Code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many flights operated by American Airlines Inc. on 2018/8/1 were faster than scheduled?",
    "gold_sql": "SELECT SUM(CASE WHEN T2.ACTUAL_ELAPSED_TIME < CRS_ELAPSED_TIME THEN 1 ELSE 0 END) AS count FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN INNER JOIN `Air Carriers` AS T3 ON T2.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T2.FL_DATE = '2018/8/1' AND T3.Description = 'American Airlines Inc.: AA'",
    "predicted_sql": "SELECT COUNT(*) FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.FL_DATE = '2018/8/1' AND T2.Description = 'American Airlines Inc.: 9E' AND T1.ACTUAL_ELAPSED_TIME < CRS_ELAPSED_TIME"
  },
  {
    "idx": 457,
    "relevant_table_schema": {
      "airlines": {
        "columns": [
          {
            "field": "FL_DATE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OP_CARRIER_AIRLINE_ID) references Air Carriers(Code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "TAIL_NUM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OP_CARRIER_FL_NUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ORIGIN) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "DEST_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(DEST) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CRS_DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLED",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLATION_CODE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CRS_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ACTUAL_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CARRIER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WEATHER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NAS_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SECURITY_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LATE_AIRCRAFT_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "air carriers": {
        "columns": [
          {
            "field": "Code",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which flight carrier operator flies from Atlantic City to Fort Lauderdale?",
    "gold_sql": "SELECT T2.Description FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.ORIGIN = 'ACY' AND T1.DEST = 'FLL' GROUP BY T2.Description",
    "predicted_sql": "SELECT T2.Description FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.ORIGIN = 'ATL' AND T1.DEST = 'FLL'"
  },
  {
    "idx": 458,
    "relevant_table_schema": {
      "airports": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Give the code of the airport described as Driftwood Bay, AK: Driftwood Bay Airport.",
    "gold_sql": "SELECT Code FROM Airports WHERE Description = 'Driftwood Bay, AK: Driftwood Bay Airport'",
    "predicted_sql": "SELECT Code FROM airports WHERE Description = 'Driftwood Bay, AK: Driftwood Bay Airport'"
  },
  {
    "idx": 459,
    "relevant_table_schema": {
      "airports": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "airlines": {
        "columns": [
          {
            "field": "FL_DATE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OP_CARRIER_AIRLINE_ID) references Air Carriers(Code)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "TAIL_NUM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OP_CARRIER_FL_NUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ORIGIN_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ORIGIN) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "DEST_AIRPORT_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_AIRPORT_SEQ_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEST_CITY_MARKET_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(DEST) references Airports(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "CRS_DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DEP_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ARR_DELAY_NEW",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLED",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CANCELLATION_CODE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CRS_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ACTUAL_ELAPSED_TIME",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CARRIER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "WEATHER_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NAS_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SECURITY_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LATE_AIRCRAFT_DELAY",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "For the flight on 2018/8/1 that was delayed for the longest time, which was the destination airport of this flight?",
    "gold_sql": "SELECT T1.Description FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST WHERE T2.FL_DATE = '2018/8/1' ORDER BY T2.DEP_DELAY DESC LIMIT 1",
    "predicted_sql": "SELECT T2.DEST FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST WHERE T2.FL_DATE = '2018/8/1' AND T2.DEP_DELAY = 1500"
  },
  {
    "idx": 460,
    "relevant_table_schema": {
      "cust_order": {
        "columns": [
          {
            "field": "order_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "order_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shipping_method_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dest_address_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "shipping_method": {
        "columns": [
          {
            "field": "method_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "method_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cost",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many percent of orders in 2020 used international shipping?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T2.method_name = 'International' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cust_order AS T1 INNER JOIN shipping_method AS T2 ON T1.shipping_method_id = T2.method_id WHERE STRFTIME('%Y', T1.order_date) = '2020'",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN T2.method_name = 'International Class' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.order_id) FROM cust_order AS T1 INNER JOIN shipping_method AS T2 ON T1.shipping_method_id = T2.method_id WHERE STRFTIME('%Y', T1.order_date) = '2020'"
  },
  {
    "idx": 461,
    "relevant_table_schema": {
      "customer": {
        "columns": [
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the full name of customer with email ckupis4@tamu.edu?",
    "gold_sql": "SELECT first_name, last_name FROM customer WHERE email = 'ckupis4@tamu.edu'",
    "predicted_sql": "SELECT first_name, last_name FROM customer WHERE email = 'ckupis4@tamu.edu'"
  },
  {
    "idx": 462,
    "relevant_table_schema": {
      "book": {
        "columns": [
          {
            "field": "book_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "isbn13",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(language_id) references book_language(language_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "num_pages",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "publication_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(publisher_id) references publisher(publisher_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "order_line": {
        "columns": [
          {
            "field": "line_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "order_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "book_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many customers ordered the oldest book?",
    "gold_sql": "SELECT COUNT(*) FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id GROUP BY T1.publication_date ORDER BY T1.publication_date ASC LIMIT 1",
    "predicted_sql": "SELECT COUNT(T2.order_id) FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id ORDER BY T1.publication_date LIMIT 1"
  },
  {
    "idx": 463,
    "relevant_table_schema": {
      "book": {
        "columns": [
          {
            "field": "book_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "isbn13",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(language_id) references book_language(language_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "num_pages",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "publication_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(publisher_id) references publisher(publisher_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "book_author": {
        "columns": [
          {
            "field": "foreign key(book_id) references book(book_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(author_id) references author(author_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "author": {
        "columns": [
          {
            "field": "author_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "author_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In books authored by Abraham Lincoln, what is the percentage of the books published in 1992?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', T1.publication_date) = '1992' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Abraham Lincoln'",
    "predicted_sql": "SELECT CAST(COUNT(CASE WHEN SUBSTR(T1.publication_date, -4) = '1992' THEN T1.book_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.book_id) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Abraham Lincoln'"
  },
  {
    "idx": 464,
    "relevant_table_schema": {
      "customer": {
        "columns": [
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "customer_address": {
        "columns": [
          {
            "field": "foreign key(customer_id) references customer(customer_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(address_id) references address(address_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "status_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "address": {
        "columns": [
          {
            "field": "address_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "street_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "street_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(country_id) references country(country_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "country_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "country_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which country does Malina Johnson live in?",
    "gold_sql": "SELECT T4.country_name FROM customer AS T1 INNER JOIN customer_address AS T2 ON T1.customer_id = T2.customer_id INNER JOIN address AS T3 ON T3.address_id = T2.address_id INNER JOIN country AS T4 ON T4.country_id = T3.country_id WHERE T1.first_name = 'Malina' AND T1.last_name = 'Johnson' AND T2.status_id = 2",
    "predicted_sql": "SELECT T4.country_name FROM customer AS T1 INNER JOIN customer_address AS T2 ON T1.customer_id = T2.customer_id INNER JOIN address AS T3 ON T3.address_id = T2.address_id INNER JOIN country AS T4 ON T4.country_id = T3.country_id WHERE T1.first_name = 'Malina' AND T1.last_name = 'Johnson'"
  },
  {
    "idx": 465,
    "relevant_table_schema": {
      "order_line": {
        "columns": [
          {
            "field": "line_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "order_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "book_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "cust_order": {
        "columns": [
          {
            "field": "order_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "order_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shipping_method_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dest_address_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "customer": {
        "columns": [
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Who ordered the book with the cheapest price?",
    "gold_sql": "SELECT T3.first_name, T3.last_name FROM order_line AS T1 INNER JOIN cust_order AS T2 ON T2.order_id = T1.order_id INNER JOIN customer AS T3 ON T3.customer_id = T2.customer_id ORDER BY T1.price ASC LIMIT 1",
    "predicted_sql": "SELECT T2.customer_id FROM order_line AS T1 INNER JOIN cust_order AS T2 ON T1.order_id = T2.order_id INNER JOIN customer AS T3 ON T2.customer_id = T3.customer_id ORDER BY T1.price ASC LIMIT 1"
  },
  {
    "idx": 466,
    "relevant_table_schema": {
      "book": {
        "columns": [
          {
            "field": "book_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "isbn13",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(language_id) references book_language(language_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "num_pages",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "publication_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(publisher_id) references publisher(publisher_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "order_line": {
        "columns": [
          {
            "field": "line_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "order_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "book_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "cust_order": {
        "columns": [
          {
            "field": "order_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "order_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shipping_method_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dest_address_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "customer": {
        "columns": [
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List every book that Ursola Purdy has ordered.",
    "gold_sql": "SELECT T1.title FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T4.first_name = 'Ursola' AND T4.last_name = 'Purdy'",
    "predicted_sql": "SELECT T1.title FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T2.order_id = T3.order_id INNER JOIN customer AS T4 ON T3.customer_id = T4.customer_id WHERE T4.first_name = 'Ursola' AND T4.last_name = 'Purdy'"
  },
  {
    "idx": 467,
    "relevant_table_schema": {
      "customer": {
        "columns": [
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "cust_order": {
        "columns": [
          {
            "field": "order_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "order_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shipping_method_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dest_address_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many orders has Cordy Dumbarton made?",
    "gold_sql": "SELECT COUNT(*) FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'Cordy' AND T1.last_name = 'Dumbarton'",
    "predicted_sql": "SELECT COUNT(T2.order_id) FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'Cordy' AND T1.last_name = 'Dumbarton'"
  },
  {
    "idx": 468,
    "relevant_table_schema": {
      "book": {
        "columns": [
          {
            "field": "book_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "isbn13",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(language_id) references book_language(language_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "num_pages",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "publication_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(publisher_id) references publisher(publisher_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "order_line": {
        "columns": [
          {
            "field": "line_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "order_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "book_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the order price of the book \"The Servant Leader\" in 2003?",
    "gold_sql": "SELECT T2.price FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T1.title = 'The Servant Leader' AND STRFTIME('%Y', T1.publication_date) = '2003'",
    "predicted_sql": "SELECT T2.price FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id WHERE T1.title = 'The Servant Leader' AND STRFTIME('%Y', T1.publication_date) = '2003'"
  },
  {
    "idx": 469,
    "relevant_table_schema": {
      "book": {
        "columns": [
          {
            "field": "book_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "isbn13",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(language_id) references book_language(language_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "num_pages",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "publication_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(publisher_id) references publisher(publisher_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "book_author": {
        "columns": [
          {
            "field": "foreign key(book_id) references book(book_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(author_id) references author(author_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "author": {
        "columns": [
          {
            "field": "author_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "author_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average number of pages in the books written by Jennifer Crusie?",
    "gold_sql": "SELECT AVG(T1.num_pages) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Jennifer Crusie'",
    "predicted_sql": "SELECT CAST(SUM(T1.num_pages) AS REAL) / COUNT(T1.book_id) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'Jennifer Crusie'"
  },
  {
    "idx": 470,
    "relevant_table_schema": {
      "establishment": {
        "columns": [
          {
            "field": "license_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "dba_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aka_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "facility_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "risk_level",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ward",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "inspection": {
        "columns": [
          {
            "field": "inspection_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "inspection_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inspection_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "results",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(employee_id) references employee(employee_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(license_no) references establishment(license_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(followup_to) references inspection(inspection_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "How many restaurants were inspected on 2015/5/8?",
    "gold_sql": "SELECT COUNT(T2.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T2.inspection_date = '2015-05-08' AND T1.facility_type = 'Restaurant'",
    "predicted_sql": "SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T2.inspection_date = '2015-05-08' AND T1.facility_type = 'Liquor'"
  },
  {
    "idx": 471,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "employee_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "salary",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(supervisor) references employee(employee_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "inspection": {
        "columns": [
          {
            "field": "inspection_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "inspection_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inspection_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "results",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(employee_id) references employee(employee_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(license_no) references establishment(license_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(followup_to) references inspection(inspection_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "How many employees have salary greater than 70000 but fail the inspection?",
    "gold_sql": "SELECT COUNT(DISTINCT T1.employee_id) FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.results = 'Fail' AND T1.salary > 70000",
    "predicted_sql": "SELECT COUNT(DISTINCT T1.employee_id) FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.results = 'Fail' AND T1.salary > 70000"
  },
  {
    "idx": 472,
    "relevant_table_schema": {
      "inspection_point": {
        "columns": [
          {
            "field": "point_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fine",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "point_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "violation": {
        "columns": [
          {
            "field": "foreign key(inspection_id) references inspection(inspection_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(point_id) references inspection_point(point_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "fine",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inspector_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many inspections were done under the display of inspection report summary category?",
    "gold_sql": "SELECT COUNT(T2.inspection_id) FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T1.category = 'Display of Inspection Report Summary'",
    "predicted_sql": "SELECT COUNT(T1.inspection_id) FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.inspection_id = T2.inspection_id WHERE T1.category = 'Display of Inspection Report Summary'"
  },
  {
    "idx": 473,
    "relevant_table_schema": {
      "establishment": {
        "columns": [
          {
            "field": "license_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "dba_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aka_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "facility_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "risk_level",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ward",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "inspection": {
        "columns": [
          {
            "field": "inspection_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "inspection_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inspection_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "results",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(employee_id) references employee(employee_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(license_no) references establishment(license_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(followup_to) references inspection(inspection_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "violation": {
        "columns": [
          {
            "field": "foreign key(inspection_id) references inspection(inspection_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(point_id) references inspection_point(point_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "fine",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inspector_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Name the taverns that failed the inspection in January 2010.",
    "gold_sql": "SELECT DISTINCT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE strftime('%Y-%m', T2.inspection_date) = '2010-01' AND T2.results = 'Fail' AND T1.facility_type = 'TAVERN'",
    "predicted_sql": "SELECT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE strftime('%Y-%m', T2.inspection_date) = '2010-01' AND T3.results = 'Fail' AND T1.facility_type = 'Tavern'"
  },
  {
    "idx": 474,
    "relevant_table_schema": {
      "inspection": {
        "columns": [
          {
            "field": "inspection_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "inspection_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inspection_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "results",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(employee_id) references employee(employee_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(license_no) references establishment(license_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(followup_to) references inspection(inspection_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "violation": {
        "columns": [
          {
            "field": "foreign key(inspection_id) references inspection(inspection_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(point_id) references inspection_point(point_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "fine",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inspector_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the point IDs and fines of the inspections done on 7th August 2010.",
    "gold_sql": "SELECT T2.point_id, T2.fine FROM inspection AS T1 INNER JOIN violation AS T2 ON T1.inspection_id = T2.inspection_id WHERE T1.inspection_date = '2010-08-07'",
    "predicted_sql": "SELECT DISTINCT T2.point_id, T2.fine FROM inspection AS T1 INNER JOIN violation AS T2 ON T1.inspection_id = T2.inspection_id WHERE T1.inspection_date = '2010-08-07'"
  },
  {
    "idx": 475,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "employee_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "salary",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(supervisor) references employee(employee_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "inspection": {
        "columns": [
          {
            "field": "inspection_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "inspection_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inspection_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "results",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(employee_id) references employee(employee_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(license_no) references establishment(license_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(followup_to) references inspection(inspection_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "establishment": {
        "columns": [
          {
            "field": "license_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "dba_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aka_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "facility_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "risk_level",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ward",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the risk level of the establishment that Bob Benson inspected?",
    "gold_sql": "SELECT DISTINCT T3.risk_level FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN establishment AS T3 ON T2.license_no = T3.license_no WHERE T1.first_name = 'Bob' AND T1.last_name = 'Benson'",
    "predicted_sql": "SELECT T3.risk_level FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN establishment AS T3 ON T3.license_no = T2.license_no WHERE T1.first_name = 'Bob' AND T1.last_name = 'Benson'"
  },
  {
    "idx": 476,
    "relevant_table_schema": {
      "inspection_point": {
        "columns": [
          {
            "field": "point_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fine",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "point_level",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "violation": {
        "columns": [
          {
            "field": "foreign key(inspection_id) references inspection(inspection_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(point_id) references inspection_point(point_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "fine",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inspector_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many of the inspections with serious point levels have no fines?",
    "gold_sql": "SELECT COUNT(DISTINCT T2.inspection_id) FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T1.point_level = 'Serious ' AND T2.fine = 0",
    "predicted_sql": "SELECT COUNT(T2.inspection_id) FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T1.point_level = 'Serious' AND T2.fine = 0"
  },
  {
    "idx": 477,
    "relevant_table_schema": {
      "inspection": {
        "columns": [
          {
            "field": "inspection_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "inspection_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inspection_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "results",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(employee_id) references employee(employee_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(license_no) references establishment(license_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(followup_to) references inspection(inspection_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "employee": {
        "columns": [
          {
            "field": "employee_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "salary",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(supervisor) references employee(employee_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Calculate the average salary for employees who did inspection on License Re-Inspection.",
    "gold_sql": "SELECT AVG(T2.salary) FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id WHERE T1.inspection_type = 'License Re-Inspection'",
    "predicted_sql": "SELECT AVG(T2.salary) FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id WHERE T1.inspection_type = 'License Re-Inspection'"
  },
  {
    "idx": 478,
    "relevant_table_schema": {
      "establishment": {
        "columns": [
          {
            "field": "license_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "dba_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "aka_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "facility_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "risk_level",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ward",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "inspection": {
        "columns": [
          {
            "field": "inspection_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "inspection_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inspection_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "results",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(employee_id) references employee(employee_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(license_no) references establishment(license_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(followup_to) references inspection(inspection_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "What is the average number of inspections did risk level 3 taverns have?",
    "gold_sql": "SELECT CAST(COUNT(T2.inspection_id) AS REAL) / COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.risk_level = 3 AND T1.facility_type = 'TAVERN'",
    "predicted_sql": "SELECT CAST(COUNT(T2.inspection_id) AS REAL) / COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.risk_level = 3 AND T2.results = 'Fail'"
  },
  {
    "idx": 479,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "employee_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "salary",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(supervisor) references employee(employee_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "inspection": {
        "columns": [
          {
            "field": "inspection_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "inspection_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inspection_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "results",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(employee_id) references employee(employee_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(license_no) references establishment(license_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(followup_to) references inspection(inspection_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "What is the title of the employee that inspected the establishment with license number 1576687?",
    "gold_sql": "SELECT DISTINCT T1.title FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.license_no = 1576687",
    "predicted_sql": "SELECT T1.title FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.license_no = 1576687"
  },
  {
    "idx": 480,
    "relevant_table_schema": {
      "coins": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subreddit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notice",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag_names",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "platform_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_added",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_launched",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "historical": {
        "columns": [
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "coin_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cmc_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "market_cap",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "open",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "high",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "low",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "close",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_high",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_low",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "volume_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_1h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_7d",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "circulating_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_market_pairs",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "When is Devcoin most valuable in the market?",
    "gold_sql": "SELECT T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Devcoin' ORDER BY T2.market_cap DESC LIMIT 1",
    "predicted_sql": "SELECT T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Devcoin' AND T2.cmc_rank = 1"
  },
  {
    "idx": 481,
    "relevant_table_schema": {
      "coins": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subreddit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notice",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag_names",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "platform_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_added",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_launched",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Name the coins that have three tags.",
    "gold_sql": "SELECT name FROM coins WHERE LENGTH(tag_names) - LENGTH(replace(tag_names, ',', '')) = 2",
    "predicted_sql": "SELECT name FROM coins WHERE tags LIKE '%,%,%'"
  },
  {
    "idx": 482,
    "relevant_table_schema": {
      "coins": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subreddit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notice",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag_names",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "platform_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_added",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_launched",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "historical": {
        "columns": [
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "coin_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cmc_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "market_cap",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "open",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "high",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "low",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "close",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_high",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_low",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "volume_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_1h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_7d",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "circulating_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_market_pairs",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What was the price of 1 Bitcoin in 2016?",
    "gold_sql": "SELECT AVG(T2.price) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bitcoin' AND STRFTIME('%Y', T2.date) = '2016'",
    "predicted_sql": "SELECT T2.price FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bitcoin' AND STRFTIME('%Y', T2.date) = '2016'"
  },
  {
    "idx": 483,
    "relevant_table_schema": {
      "coins": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subreddit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notice",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag_names",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "platform_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_added",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_launched",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "historical": {
        "columns": [
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "coin_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cmc_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "market_cap",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "open",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "high",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "low",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "close",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_high",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_low",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "volume_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_1h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_7d",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "circulating_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_market_pairs",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "When is the highest closed price of CHNCoin?",
    "gold_sql": "SELECT T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'CHNCoin' ORDER BY T2.close DESC LIMIT 1",
    "predicted_sql": "SELECT T2.close FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'CHNCoin' ORDER BY T2.close DESC LIMIT 1"
  },
  {
    "idx": 484,
    "relevant_table_schema": {
      "coins": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subreddit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notice",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag_names",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "platform_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_added",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_launched",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "historical": {
        "columns": [
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "coin_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cmc_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "market_cap",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "open",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "high",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "low",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "close",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_high",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_low",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "volume_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_1h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_7d",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "circulating_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_market_pairs",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How much was a Bitcoin on 2013/4/28?",
    "gold_sql": "SELECT T2.price FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-04-28' AND T1.name = 'Bitcoin'",
    "predicted_sql": "SELECT T2.price FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bitcoin' AND T2.date = '2013-04-28'"
  },
  {
    "idx": 485,
    "relevant_table_schema": {
      "coins": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subreddit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notice",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag_names",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "platform_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_added",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_launched",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "historical": {
        "columns": [
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "coin_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cmc_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "market_cap",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "open",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "high",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "low",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "close",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_high",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_low",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "volume_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_1h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_7d",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "circulating_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_market_pairs",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What was the price of Bitcoin when it closed at the end of the day on 2013/4/29?",
    "gold_sql": "SELECT T2.close FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-04-29' AND T1.name = 'Bitcoin'",
    "predicted_sql": "SELECT T2.price FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bitcoin' AND T2.date = '2013-04-29' AND T2.close IS NOT NULL"
  },
  {
    "idx": 486,
    "relevant_table_schema": {
      "coins": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subreddit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notice",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag_names",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "platform_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_added",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_launched",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "historical": {
        "columns": [
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "coin_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cmc_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "market_cap",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "open",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "high",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "low",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "close",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_high",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_low",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "volume_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_1h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_7d",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "circulating_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_market_pairs",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the price for Zetacoin on 13/11/1 and the next 7 consecutive days. What is the average price for these 7 days?",
    "gold_sql": "SELECT T2.price FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Zetacoin' AND T2.date BETWEEN '2013-11-01' AND '2013-11-07' UNION ALL SELECT AVG(T2.PRICE) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Zetacoin' AND T2.date BETWEEN '2013-11-01' AND '2013-11-07'",
    "predicted_sql": "SELECT T2.price, ( SELECT AVG(T2.price) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Zetacoin' AND T2.date BETWEEN '2011-11-13' AND '2011-11-20' ) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Zetacoin' AND T2.date = '2011-11-13'"
  },
  {
    "idx": 487,
    "relevant_table_schema": {
      "coins": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subreddit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notice",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag_names",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "platform_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_added",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_launched",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "historical": {
        "columns": [
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "coin_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cmc_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "market_cap",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "open",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "high",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "low",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "close",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_high",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_low",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "volume_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_1h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_7d",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "circulating_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_market_pairs",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many times was Bytecoin traded in June 2013?",
    "gold_sql": "SELECT COUNT(T2.coin_id) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bytecoin' AND STRFTIME('%Y-%m', T2.date) = '2013-06'",
    "predicted_sql": "SELECT COUNT(T2.coin_id) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Bytecoin' AND STRFTIME('%Y-%m', T2.date) = '2013-06'"
  },
  {
    "idx": 488,
    "relevant_table_schema": {
      "coins": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subreddit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notice",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag_names",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "platform_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_added",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_launched",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "historical": {
        "columns": [
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "coin_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cmc_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "market_cap",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "open",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "high",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "low",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "close",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_high",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time_low",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "volume_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_1h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_24h",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "percent_change_7d",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "circulating_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_supply",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_market_pairs",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "State the transaction date whereby DigixDAO was transacted at the hightest price.",
    "gold_sql": "SELECT T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'DigixDAO' ORDER BY T2.price DESC LIMIT 1",
    "predicted_sql": "SELECT T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'DigixDAO' ORDER BY T2.high DESC LIMIT 1"
  },
  {
    "idx": 489,
    "relevant_table_schema": {
      "coins": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "symbol",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "status",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subreddit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notice",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tags",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tag_names",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "website",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "platform_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_added",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date_launched",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the names and symbols of the coins that were added on June 14, 2013.",
    "gold_sql": "SELECT name, symbol FROM coins WHERE date_added LIKE '2013-06-14%'",
    "predicted_sql": "SELECT name, symbol FROM coins WHERE date_added LIKE '2013-06-14%'"
  },
  {
    "idx": 490,
    "relevant_table_schema": {
      "products": {
        "columns": [
          {
            "field": "ProductID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ProductName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(SupplierID) references Suppliers(SupplierID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(CategoryID) references Categories(CategoryID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "suppliers": {
        "columns": [
          {
            "field": "SupplierID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "SupplierName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ContactName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostalCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which company supplies Gula Malacca?",
    "gold_sql": "SELECT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ProductName = 'Gula Malacca'",
    "predicted_sql": "SELECT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.ProductName = 'Gula Malacca'"
  },
  {
    "idx": 491,
    "relevant_table_schema": {
      "orders": {
        "columns": [
          {
            "field": "OrderID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(EmployeeID) references Employees(EmployeeID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "OrderDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ShipperID) references Shippers(ShipperID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "shippers": {
        "columns": [
          {
            "field": "ShipperID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ShipperName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many orders were shipped by \"Speedy Express\"?",
    "gold_sql": "SELECT COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Speedy Express'",
    "predicted_sql": "SELECT COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.ShipperName = 'Speedy Express'"
  },
  {
    "idx": 492,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "CustomerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "CustomerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ContactName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostalCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many companies are there in the city of London?",
    "gold_sql": "SELECT COUNT(CompanyName) FROM Customers WHERE City = 'London'",
    "predicted_sql": "SELECT COUNT(CustomerID) FROM customers WHERE City = 'London'"
  },
  {
    "idx": 493,
    "relevant_table_schema": {
      "orders": {
        "columns": [
          {
            "field": "OrderID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(EmployeeID) references Employees(EmployeeID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "OrderDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ShipperID) references Shippers(ShipperID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "How many of the orders are shipped to France?",
    "gold_sql": "SELECT COUNT(ShipCountry) FROM Orders WHERE ShipCountry = 'France'",
    "predicted_sql": "SELECT COUNT(OrderID) FROM Orders WHERE ShipCountry = 'France'"
  },
  {
    "idx": 494,
    "relevant_table_schema": {
      "products": {
        "columns": [
          {
            "field": "ProductID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ProductName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(SupplierID) references Suppliers(SupplierID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(CategoryID) references Categories(CategoryID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "suppliers": {
        "columns": [
          {
            "field": "SupplierID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "SupplierName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ContactName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostalCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Give the reorder level for the products from the supplier \"Nord-Ost-Fisch Handelsgesellschaft mbH\".",
    "gold_sql": "SELECT T1.ReorderLevel FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Nord-Ost-Fisch Handelsgesellschaft mbH'",
    "predicted_sql": "SELECT T1.ReorderLevel FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Nord-Ost-Fisch Handelsgesellschaft mbH'"
  },
  {
    "idx": 495,
    "relevant_table_schema": {},
    "question": "How many territories are there in the region with the highest number of territories?",
    "gold_sql": "SELECT COUNT(T2.RegionDescription), T1.TerritoryDescription, COUNT(*) AS num FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID GROUP BY T1.TerritoryDescription ORDER BY num DESC LIMIT 1",
    "predicted_sql": "SELECT COUNT(name) FROM territories WHERE region_id = ( SELECT MAX(region_id) FROM regions )"
  },
  {
    "idx": 496,
    "relevant_table_schema": {
      "products": {
        "columns": [
          {
            "field": "ProductID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ProductName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(SupplierID) references Suppliers(SupplierID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(CategoryID) references Categories(CategoryID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Price",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the total production of the product that is ordered in the highest quantity in order no. 10248?",
    "gold_sql": "SELECT T1.UnitsInStock + T1.UnitsOnOrder FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T2.OrderID = 10248 ORDER BY T2.Quantity DESC LIMIT 1",
    "predicted_sql": "SELECT SUM(IF(T1.ProductID = ( SELECT ProductID FROM OrderDetails WHERE OrderID = 10248 ORDER BY Quantity DESC LIMIT 1 ), UnitsInStock + UnitsOnOrder, 0)) FROM Products AS T1 INNER JOIN OrderDetails AS T2 ON T1.ProductID = T2.ProductID"
  },
  {
    "idx": 497,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "CustomerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "CustomerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ContactName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostalCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "orders": {
        "columns": [
          {
            "field": "OrderID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(EmployeeID) references Employees(EmployeeID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "OrderDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ShipperID) references Shippers(ShipperID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Which company placed the order with the id 10257?",
    "gold_sql": "SELECT T1.CompanyName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.OrderID = 10257",
    "predicted_sql": "SELECT T1.CompanyName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.OrderID = 10257"
  },
  {
    "idx": 498,
    "relevant_table_schema": {
      "employees": {
        "columns": [
          {
            "field": "EmployeeID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "LastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BirthDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Photo",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Notes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average salary of sales representatives in the United Kingdom?",
    "gold_sql": "SELECT AVG(Salary) FROM Employees WHERE Title = 'Sales Representative' AND Country = 'UK'",
    "predicted_sql": "SELECT AVG(Salary) FROM Employees WHERE Country = 'United Kingdom' AND Title = 'Sales Rep'"
  },
  {
    "idx": 499,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "CustomerID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "CustomerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ContactName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostalCode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "orders": {
        "columns": [
          {
            "field": "OrderID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CustomerID) references Customers(CustomerID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(EmployeeID) references Employees(EmployeeID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "OrderDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ShipperID) references Shippers(ShipperID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Which company had the most orders in 1998?",
    "gold_sql": "SELECT T1.CompanyName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y', T2.OrderDate) = '1998' GROUP BY T1.CompanyName ORDER BY COUNT(T2.OrderID) DESC LIMIT 1",
    "predicted_sql": "SELECT T1.CompanyName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE strftime('%Y', T2.OrderDate) = '1998' GROUP BY T1.CompanyName ORDER BY COUNT(T2.CustomerID) DESC LIMIT 1"
  },
  {
    "idx": 500,
    "relevant_table_schema": {
      "nation": {
        "columns": [
          {
            "field": "n_nationkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "n_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(n_regionkey) references region(r_regionkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "n_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "region": {
        "columns": [
          {
            "field": "r_regionkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "r_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "r_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "supplier": {
        "columns": [
          {
            "field": "s_suppkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(s_nationkey) references nation(n_nationkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "s_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_acctbal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among all the suppliers in debt, how many of them are in Europe?",
    "gold_sql": "SELECT COUNT(T1.n_nationkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey INNER JOIN supplier AS T3 ON T1.n_nationkey = T3.s_nationkey WHERE T2.r_name = 'EUROPE' AND T3.s_acctbal < 0",
    "predicted_sql": "SELECT COUNT(T3.s_suppkey) FROM nation AS T1 INNER JOIN region AS T2 ON T1.n_regionkey = T2.r_regionkey INNER JOIN supplier AS T3 ON T1.n_nationkey = T3.s_nationkey WHERE T2.r_name = 'EUROPE' AND T3.s_acctbal < 0"
  },
  {
    "idx": 501,
    "relevant_table_schema": {
      "customer": {
        "columns": [
          {
            "field": "c_custkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "c_mktsegment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(c_nationkey) references nation(n_nationkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "c_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "c_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "c_phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "c_acctbal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "c_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "nation": {
        "columns": [
          {
            "field": "n_nationkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "n_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(n_regionkey) references region(r_regionkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "n_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among all the customers in Brazil, how many of them have an account balance of less than 1000?",
    "gold_sql": "SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'BRAZIL' AND T1.c_acctbal < 1000",
    "predicted_sql": "SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'BRAZIL' AND T1.c_acctbal < 1000"
  },
  {
    "idx": 502,
    "relevant_table_schema": {
      "customer": {
        "columns": [
          {
            "field": "c_custkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "c_mktsegment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(c_nationkey) references nation(n_nationkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "c_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "c_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "c_phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "c_acctbal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "c_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "nation": {
        "columns": [
          {
            "field": "n_nationkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "n_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(n_regionkey) references region(r_regionkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "n_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the customers from the United States, which market segment has the highest number of customers?",
    "gold_sql": "SELECT T.c_mktsegment FROM ( SELECT T1.c_mktsegment, COUNT(T1.c_custkey) AS num FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'UNITED STATES' GROUP BY T1.c_mktsegment ) AS T ORDER BY T.num DESC LIMIT 1",
    "predicted_sql": "SELECT T1.c_mktsegment FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'UNITED STATES' GROUP BY T1.c_mktsegment ORDER BY COUNT(T1.c_custkey) DESC LIMIT 1"
  },
  {
    "idx": 503,
    "relevant_table_schema": {
      "supplier": {
        "columns": [
          {
            "field": "s_suppkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(s_nationkey) references nation(n_nationkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "s_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_acctbal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "nation": {
        "columns": [
          {
            "field": "n_nationkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "n_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(n_regionkey) references region(r_regionkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "n_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many suppliers from Germany have left a comment with 'carefully regular packages'?",
    "gold_sql": "SELECT COUNT(T1.s_suppkey) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T2.n_name = 'GERMANY' AND T1.s_comment LIKE '%carefully regular packages%'",
    "predicted_sql": "SELECT COUNT(T1.s_suppkey) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T2.n_name = 'GERMANY' AND T1.s_comment = 'carefully regular packages'"
  },
  {
    "idx": 504,
    "relevant_table_schema": {
      "orders": {
        "columns": [
          {
            "field": "o_orderdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_orderkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(o_custkey) references customer(c_custkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "o_orderpriority",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_shippriority",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_clerk",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_orderstatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_totalprice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "o_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "lineitem": {
        "columns": [
          {
            "field": "l_shipdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(l_orderkey) references orders(o_orderkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "l_discount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_extendedprice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(l_suppkey) references partsupp(ps_suppkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "l_quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_returnflag",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(l_partkey) references partsupp(ps_partkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "l_linestatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_tax",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_commitdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_receiptdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_shipmode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_linenumber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_shipinstruct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "customer": {
        "columns": [
          {
            "field": "c_custkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "c_mktsegment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(c_nationkey) references nation(n_nationkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "c_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "c_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "c_phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "c_acctbal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "c_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the name of the customer whose order was delivered the longest?",
    "gold_sql": "SELECT T3.c_name FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey INNER JOIN customer AS T3 ON T1.o_custkey = T3.c_custkey ORDER BY (JULIANDAY(T2.l_receiptdate) - JULIANDAY(T2.l_commitdate)) DESC LIMIT 1",
    "predicted_sql": "SELECT T3.c_name FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey INNER JOIN customer AS T3 ON T1.o_custkey = T3.c_custkey WHERE T2.l_shipdate = ( SELECT MAX(T2.l_shipdate) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey INNER JOIN customer AS T3 ON T1.o_custkey = T3.c_custkey )"
  },
  {
    "idx": 505,
    "relevant_table_schema": {
      "part": {
        "columns": [
          {
            "field": "p_partkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "p_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_size",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_brand",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_container",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_mfgr",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_retailprice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "partsupp": {
        "columns": [
          {
            "field": "foreign key(ps_partkey) references part(p_partkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ps_suppkey) references supplier(s_suppkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ps_supplycost",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ps_availqty",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ps_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "supplier": {
        "columns": [
          {
            "field": "s_suppkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(s_nationkey) references nation(n_nationkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "s_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_acctbal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the names of all the suppliers for the part with the highest retail price.",
    "gold_sql": "SELECT T3.s_phone FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey INNER JOIN supplier AS T3 ON T2.ps_suppkey = T3.s_suppkey WHERE T1.p_name = 'hot spring dodger dim light' ORDER BY T1.p_size DESC LIMIT 1",
    "predicted_sql": "SELECT T3.s_name FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey INNER JOIN supplier AS T3 ON T3.s_suppkey = T2.ps_suppkey ORDER BY T2.ps_retailprice DESC LIMIT 1"
  },
  {
    "idx": 506,
    "relevant_table_schema": {
      "part": {
        "columns": [
          {
            "field": "p_partkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "p_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_size",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_brand",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_container",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_mfgr",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_retailprice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list all the brands that contain a part under the type \"promo brushed steel\".",
    "gold_sql": "SELECT p_brand FROM part WHERE p_type = 'PROMO BRUSHED STEEL'",
    "predicted_sql": "SELECT DISTINCT p_brand FROM part WHERE p_type = 'promo brushed steel'"
  },
  {
    "idx": 507,
    "relevant_table_schema": {
      "lineitem": {
        "columns": [
          {
            "field": "l_shipdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(l_orderkey) references orders(o_orderkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "l_discount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_extendedprice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(l_suppkey) references partsupp(ps_suppkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "l_quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_returnflag",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(l_partkey) references partsupp(ps_partkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "l_linestatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_tax",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_commitdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_receiptdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_shipmode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_linenumber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_shipinstruct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List by order number the 3 items with the lowest price after applying the discount.",
    "gold_sql": "SELECT l_orderkey FROM lineitem ORDER BY l_extendedprice * (1 - l_discount) LIMIT 3",
    "predicted_sql": "SELECT T1.l_orderkey, T1.l_partkey FROM lineitem AS T1 INNER JOIN orders AS T2 ON T1.l_orderkey = T2.o_orderkey WHERE T1.l_quantity < 4 AND T1.l_returnflag = 'R' AND T1.l_discount = 0.05 AND T1.l_shipmode = 'TRUCK'"
  },
  {
    "idx": 508,
    "relevant_table_schema": {
      "lineitem": {
        "columns": [
          {
            "field": "l_shipdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(l_orderkey) references orders(o_orderkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "l_discount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_extendedprice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(l_suppkey) references partsupp(ps_suppkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "l_quantity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_returnflag",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(l_partkey) references partsupp(ps_partkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "l_linestatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_tax",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_commitdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_receiptdate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_shipmode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_linenumber",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_shipinstruct",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which order has a higher priority, order no. 4 or order no. 36?",
    "gold_sql": "SELECT l_orderkey FROM lineitem WHERE l_orderkey IN (4, 36) ORDER BY l_shipdate DESC LIMIT 1",
    "predicted_sql": "SELECT CASE WHEN o_orderkey = 4 THEN 'order no. 4' WHEN o_orderkey = 36 THEN 'order no. 36' END AS highprio"
  },
  {
    "idx": 509,
    "relevant_table_schema": {
      "partsupp": {
        "columns": [
          {
            "field": "foreign key(ps_partkey) references part(p_partkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ps_suppkey) references supplier(s_suppkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ps_supplycost",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ps_availqty",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ps_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "part": {
        "columns": [
          {
            "field": "p_partkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "p_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_size",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_brand",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_container",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_mfgr",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_retailprice",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "p_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "supplier": {
        "columns": [
          {
            "field": "s_suppkey",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(s_nationkey) references nation(n_nationkey)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "s_comment",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "s_acctbal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the parts supplied by Supplier#000000018, provide parts names which had supply costs above 900.",
    "gold_sql": "SELECT T2.p_name FROM partsupp AS T1 INNER JOIN part AS T2 ON T1.ps_partkey = T2.p_partkey INNER JOIN supplier AS T3 ON T1.ps_suppkey = T3.s_suppkey WHERE T1.ps_supplycost > 900 AND T3.s_name = 'Supplier#000000018'",
    "predicted_sql": "SELECT T2.p_name FROM partsupp AS T1 INNER JOIN part AS T2 ON T1.ps_partkey = T2.p_partkey INNER JOIN supplier AS T3 ON T1.ps_suppkey = T3.s_suppkey WHERE T3.s_suppkey = '000000018' AND T1.ps_supplycost > 900"
  },
  {
    "idx": 510,
    "relevant_table_schema": {
      "height_info": {
        "columns": [
          {
            "field": "height_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "height_in_cm",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height_in_inch",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "playerinfo": {
        "columns": [
          {
            "field": "ELITEID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "PlayerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthyear",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthmonth",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(height) references height_info(height_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(weight) references weight_info(weight_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position_info",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shoots",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftyear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftround",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overall",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overallby",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CSS_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_TOI",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP_greater_than_0",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many players were born in 1982 and have a height above 182cm?",
    "gold_sql": "SELECT COUNT(T2.ELITEID) FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height WHERE T1.height_in_cm > 182 AND strftime('%Y', T2.birthdate) = '1982'",
    "predicted_sql": "SELECT COUNT(T2.ELITEID) FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height WHERE T1.height_in_cm > 182 AND strftime('%Y', T2.birthdate) = '1982'"
  },
  {
    "idx": 511,
    "relevant_table_schema": {
      "playerinfo": {
        "columns": [
          {
            "field": "ELITEID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "PlayerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthyear",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthmonth",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(height) references height_info(height_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(weight) references weight_info(weight_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position_info",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shoots",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftyear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftround",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overall",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overallby",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CSS_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_TOI",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP_greater_than_0",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "height_info": {
        "columns": [
          {
            "field": "height_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "height_in_cm",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height_in_inch",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the name of players who have a height over 5'9.",
    "gold_sql": "SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T2.height_in_inch > '5''9\"'",
    "predicted_sql": "SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T2.height_in_inch > '5''9\"'"
  },
  {
    "idx": 512,
    "relevant_table_schema": {
      "height_info": {
        "columns": [
          {
            "field": "height_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "height_in_cm",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height_in_inch",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "playerinfo": {
        "columns": [
          {
            "field": "ELITEID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "PlayerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthyear",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthmonth",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(height) references height_info(height_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(weight) references weight_info(weight_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position_info",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shoots",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftyear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftround",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overall",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overallby",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CSS_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_TOI",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP_greater_than_0",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the Italian players, who has the shortest height?",
    "gold_sql": "SELECT T2.PlayerName FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height WHERE T2.nation = 'Italy' ORDER BY T1.height_in_cm ASC LIMIT 1",
    "predicted_sql": "SELECT T2.PlayerName FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height WHERE T1.height_in_cm = ( SELECT MIN(T1.height_in_cm) FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height WHERE T2.nation = 'Italy' )"
  },
  {
    "idx": 513,
    "relevant_table_schema": {
      "playerinfo": {
        "columns": [
          {
            "field": "ELITEID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "PlayerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthyear",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthmonth",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(height) references height_info(height_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(weight) references weight_info(weight_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position_info",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shoots",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftyear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftround",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overall",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overallby",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CSS_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_TOI",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP_greater_than_0",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "height_info": {
        "columns": [
          {
            "field": "height_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "height_in_cm",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height_in_inch",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the players with a height of over 6'2\" inches, how many of them were born in Sweden?",
    "gold_sql": "SELECT COUNT(T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T2.height_in_inch > '6''2\"' AND T1.nation = 'Sweden'",
    "predicted_sql": "SELECT COUNT(T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T2.height_in_inch > '6''2\"' AND T1.nation = 'Sweden'"
  },
  {
    "idx": 514,
    "relevant_table_schema": {
      "seasonstatus": {
        "columns": [
          {
            "field": "foreign key(ELITEID) references PlayerInfo(ELITEID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "SEASON",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "TEAM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LEAGUE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GAMETYPE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "G",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "P",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PIM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PLUSMINUS",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "playerinfo": {
        "columns": [
          {
            "field": "ELITEID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "PlayerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthyear",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthmonth",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(height) references height_info(height_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(weight) references weight_info(weight_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position_info",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shoots",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftyear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftround",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overall",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overallby",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CSS_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_TOI",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP_greater_than_0",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "height_info": {
        "columns": [
          {
            "field": "height_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "height_in_cm",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height_in_inch",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How tall is the player from Yale University who picked up 28 penalty minutes in the 2005-2006 season?",
    "gold_sql": "SELECT T3.height_in_cm FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID INNER JOIN height_info AS T3 ON T2.height = T3.height_id WHERE T1.SEASON = '2005-2006' AND T1.TEAM = 'Yale Univ.' AND T1.PIM = 28",
    "predicted_sql": "SELECT T3.height_in_inch FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID INNER JOIN height_info AS T3 ON T2.height = T3.height_id WHERE T1.SEASON = '2005-2006' AND T1.PIM = 28 AND T2.PlayerName = 'Jordan Schroeder' AND T2.overallby = 'Yale University'"
  },
  {
    "idx": 515,
    "relevant_table_schema": {
      "playerinfo": {
        "columns": [
          {
            "field": "ELITEID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "PlayerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthyear",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthmonth",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(height) references height_info(height_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(weight) references weight_info(weight_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position_info",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shoots",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftyear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftround",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overall",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overallby",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CSS_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_TOI",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP_greater_than_0",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "weight_info": {
        "columns": [
          {
            "field": "weight_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "weight_in_kg",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight_in_lbs",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How much does David Bornhammar weigh in kilograms?",
    "gold_sql": "SELECT T2.weight_in_kg FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T1.PlayerName = 'David Bornhammar'",
    "predicted_sql": "SELECT T2.weight_in_kg FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T1.PlayerName = 'David Bornhammar'"
  },
  {
    "idx": 516,
    "relevant_table_schema": {
      "seasonstatus": {
        "columns": [
          {
            "field": "foreign key(ELITEID) references PlayerInfo(ELITEID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "SEASON",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "TEAM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LEAGUE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GAMETYPE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "G",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "P",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PIM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PLUSMINUS",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "playerinfo": {
        "columns": [
          {
            "field": "ELITEID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "PlayerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthyear",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthmonth",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(height) references height_info(height_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(weight) references weight_info(weight_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position_info",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shoots",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftyear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftround",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overall",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overallby",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CSS_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_TOI",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP_greater_than_0",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Who is the most valuable player in QMJHL league during the 2004-2005 season?",
    "gold_sql": "SELECT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON BETWEEN '2004' AND '2005' AND T1.LEAGUE = 'QMJHL' ORDER BY T1.P DESC LIMIT 1",
    "predicted_sql": "SELECT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2004-2005' AND T1.LEAGUE = 'QMJHL' ORDER BY T1.P DESC LIMIT 1"
  },
  {
    "idx": 517,
    "relevant_table_schema": {
      "playerinfo": {
        "columns": [
          {
            "field": "ELITEID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "PlayerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthyear",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthmonth",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(height) references height_info(height_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(weight) references weight_info(weight_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position_info",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shoots",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftyear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftround",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overall",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overallby",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CSS_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_TOI",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP_greater_than_0",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "seasonstatus": {
        "columns": [
          {
            "field": "foreign key(ELITEID) references PlayerInfo(ELITEID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "SEASON",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "TEAM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LEAGUE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GAMETYPE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "G",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "P",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PIM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PLUSMINUS",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "weight_info": {
        "columns": [
          {
            "field": "weight_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "weight_in_kg",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight_in_lbs",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many teams did the heaviest player drafted by Arizona Coyotes have played for?",
    "gold_sql": "SELECT COUNT(T2.TEAM) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID INNER JOIN weight_info AS T3 ON T1.weight = T3.weight_id WHERE T1.overallby = 'Arizona Coyotes' ORDER BY T3.weight_in_lbs DESC LIMIT 1",
    "predicted_sql": "SELECT COUNT(T2.TEAM) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID INNER JOIN weight_info AS T3 ON T1.weight = T3.weight_id WHERE T1.overallby = 'Arizona Coyotes' ORDER BY T3.weight_in_kg DESC LIMIT 1"
  },
  {
    "idx": 518,
    "relevant_table_schema": {
      "seasonstatus": {
        "columns": [
          {
            "field": "foreign key(ELITEID) references PlayerInfo(ELITEID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "SEASON",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "TEAM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LEAGUE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GAMETYPE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "G",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "P",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PIM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PLUSMINUS",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "playerinfo": {
        "columns": [
          {
            "field": "ELITEID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "PlayerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthyear",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthmonth",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(height) references height_info(height_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(weight) references weight_info(weight_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position_info",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shoots",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftyear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftround",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overall",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overallby",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CSS_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_TOI",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP_greater_than_0",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many games did the tallest player have ever played?",
    "gold_sql": "SELECT T1.GP FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.ELITEID = ( SELECT t.ELITEID FROM PlayerInfo t ORDER BY t.height DESC LIMIT 1 )",
    "predicted_sql": "SELECT T1.GP FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID ORDER BY T2.height DESC LIMIT 1"
  },
  {
    "idx": 519,
    "relevant_table_schema": {
      "playerinfo": {
        "columns": [
          {
            "field": "ELITEID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "PlayerName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthdate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthyear",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthmonth",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthday",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthplace",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(height) references height_info(height_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(weight) references weight_info(weight_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "position_info",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shoots",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftyear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "draftround",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overall",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "overallby",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CSS_rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sum_7yr_TOI",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP_greater_than_0",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "weight_info": {
        "columns": [
          {
            "field": "weight_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "weight_in_kg",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight_in_lbs",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the weight in pounds of the heaviest player?",
    "gold_sql": "SELECT MAX(T2.weight_in_lbs) FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id",
    "predicted_sql": "SELECT T2.weight_in_lbs FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id ORDER BY T1.weight DESC LIMIT 1"
  },
  {
    "idx": 520,
    "relevant_table_schema": {
      "contacttype": {
        "columns": [
          {
            "field": "ContactTypeID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "businessentitycontact": {
        "columns": [
          {
            "field": "foreign key(BusinessEntityID) references BusinessEntity(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(PersonID) references Person(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ContactTypeID) references ContactType(ContactTypeID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "rowguid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "store": {
        "columns": [
          {
            "field": "BusinessEntityID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BusinessEntityID) references BusinessEntity(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(SalesPersonID) references SalesPerson(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Demographics",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rowguid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Who is the \"Next-Door Bike Store\" point of contact?",
    "gold_sql": "SELECT T1.Name FROM ContactType AS T1 INNER JOIN BusinessEntityContact AS T2 ON T1.ContactTypeID = T2.ContactTypeID INNER JOIN Store AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T3.Name = 'Next-Door Bike Store'",
    "predicted_sql": "SELECT T2.PersonID FROM ContactType AS T1 INNER JOIN BusinessEntityContact AS T2 ON T1.ContactTypeID = T2.ContactTypeID INNER JOIN Store AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T3.Name = 'Next-Door Bike Store'"
  },
  {
    "idx": 521,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "BusinessEntityID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BusinessEntityID) references Person(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "NationalIDNumber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LoginID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrganizationNode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrganizationLevel",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "JobTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BirthDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MaritalStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HireDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SalariedFlag",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VacationHours",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SickLeaveHours",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrentFlag",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rowguid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "BusinessEntityID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BusinessEntityID) references BusinessEntity(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PersonType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NameStyle",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MiddleName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Suffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EmailPromotion",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AdditionalContactInfo",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Demographics",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rowguid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "State the full name of accountants in the company.",
    "gold_sql": "SELECT T2.FirstName, T2.MiddleName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle = 'Accountant'",
    "predicted_sql": "SELECT T2.FirstName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle = 'Accountant'"
  },
  {
    "idx": 522,
    "relevant_table_schema": {
      "person": {
        "columns": [
          {
            "field": "BusinessEntityID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BusinessEntityID) references BusinessEntity(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PersonType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NameStyle",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MiddleName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Suffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EmailPromotion",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AdditionalContactInfo",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Demographics",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rowguid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "personcreditcard": {
        "columns": [
          {
            "field": "foreign key(BusinessEntityID) references Person(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(CreditCardID) references CreditCard(CreditCardID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the credit card IDs of the employees who work as store contact.",
    "gold_sql": "SELECT T2.CreditCardID FROM Person AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.PersonType = 'SC'",
    "predicted_sql": "SELECT T2.CreditCardID FROM Person AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.PersonType = 'StoreContact'"
  },
  {
    "idx": 523,
    "relevant_table_schema": {
      "shipmethod": {
        "columns": [
          {
            "field": "ShipMethodID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ShipBase",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ShipRate",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rowguid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the minimum shipping charge for \"OVERSEAS - DELUXE\"?",
    "gold_sql": "SELECT ShipBase FROM ShipMethod WHERE Name = 'OVERSEAS - DELUXE'",
    "predicted_sql": "SELECT ShipBase FROM ShipMethod WHERE Name = 'OVERSEAS - DELUXE'"
  },
  {
    "idx": 524,
    "relevant_table_schema": {
      "employeedepartmenthistory": {
        "columns": [
          {
            "field": "BusinessEntityID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DepartmentID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ShiftID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StartDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EndDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "department": {
        "columns": [
          {
            "field": "DepartmentID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GroupName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "creditcard": {
        "columns": [
          {
            "field": "CreditCardID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "CardType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CardNumber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ExpMonth",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ExpYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "personcreditcard": {
        "columns": [
          {
            "field": "foreign key(BusinessEntityID) references Person(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(CreditCardID) references CreditCard(CreditCardID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the credit card numbers of all the employees who have left the Finance Department.",
    "gold_sql": "SELECT T3.CardNumber FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID INNER JOIN CreditCard AS T3 ON T1.ModifiedDate = T3.ModifiedDate INNER JOIN PersonCreditCard AS T4 ON T3.CreditCardID = T4.CreditCardID WHERE T2.Name = 'Finance' AND T1.EndDate IS NOT NULL",
    "predicted_sql": "SELECT DISTINCT T4.CardNumber FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID INNER JOIN CreditCard AS T3 ON T3.CreditCardID = T4.CreditCardID INNER JOIN PersonCreditCard AS T4 ON T4.CreditCardID = T3.CreditCardID WHERE T2.Name != 'Finance'"
  },
  {
    "idx": 525,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "BusinessEntityID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BusinessEntityID) references Person(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "NationalIDNumber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LoginID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrganizationNode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrganizationLevel",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "JobTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BirthDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MaritalStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HireDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SalariedFlag",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VacationHours",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SickLeaveHours",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrentFlag",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rowguid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "BusinessEntityID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BusinessEntityID) references BusinessEntity(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PersonType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NameStyle",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MiddleName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Suffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EmailPromotion",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AdditionalContactInfo",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Demographics",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rowguid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please give the additional contact information of the oldest employee with the jod position of sales person.",
    "gold_sql": "SELECT T2.AdditionalContactInfo FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE PersonType = 'SP' ORDER BY T1.BirthDate ASC LIMIT 1",
    "predicted_sql": "SELECT T2.AdditionalContactInfo FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle = 'Sales Rep' ORDER BY T1.HireDate LIMIT 1"
  },
  {
    "idx": 526,
    "relevant_table_schema": {
      "employeedepartmenthistory": {
        "columns": [
          {
            "field": "BusinessEntityID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "DepartmentID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ShiftID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "StartDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EndDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "department": {
        "columns": [
          {
            "field": "DepartmentID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GroupName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "BusinessEntityID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BusinessEntityID) references BusinessEntity(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PersonType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NameStyle",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MiddleName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Suffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EmailPromotion",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AdditionalContactInfo",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Demographics",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rowguid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the employees in the Manufacturing group in 2007, how many of them are store contacts?",
    "gold_sql": "SELECT COUNT(T1.BusinessEntityID) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID INNER JOIN Person AS T3 ON T1.BusinessEntityID WHERE T3.PersonType = 'SC' AND T2.GroupName = 'Manufacturing' AND STRFTIME('%Y', T1.EndDate) >= '2007' AND STRFTIME('%Y', T1.StartDate) <= '2007'",
    "predicted_sql": "SELECT COUNT(T3.BusinessEntityID) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID INNER JOIN Person AS T3 ON T3.BusinessEntityID = T1.BusinessEntityID WHERE T2.GroupName = 'Manufacturing' AND T1.StartDate LIKE '2007%' AND T3.PersonType = 'StoreContact'"
  },
  {
    "idx": 527,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "BusinessEntityID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BusinessEntityID) references Person(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "NationalIDNumber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LoginID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrganizationNode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrganizationLevel",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "JobTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BirthDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MaritalStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HireDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SalariedFlag",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VacationHours",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SickLeaveHours",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrentFlag",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rowguid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "BusinessEntityID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BusinessEntityID) references BusinessEntity(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PersonType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NameStyle",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MiddleName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Suffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EmailPromotion",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AdditionalContactInfo",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Demographics",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rowguid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the employees who are married, how many of them have a western name style?",
    "gold_sql": "SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.NameStyle = 0 AND T1.MaritalStatus = 'M'",
    "predicted_sql": "SELECT COUNT(T2.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.MaritalStatus = 'Married' AND T2.NameStyle = 1"
  },
  {
    "idx": 528,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "BusinessEntityID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BusinessEntityID) references Person(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "NationalIDNumber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LoginID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrganizationNode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrganizationLevel",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "JobTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BirthDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MaritalStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HireDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SalariedFlag",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VacationHours",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SickLeaveHours",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrentFlag",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rowguid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the employees born before 1980 , how many of them are single?",
    "gold_sql": "SELECT COUNT(BusinessEntityID) FROM Employee WHERE MaritalStatus = 's' AND BirthDate < '1980-1-1'",
    "predicted_sql": "SELECT COUNT(*) FROM Employee WHERE BirthDate < 1980 AND MaritalStatus = 'S'"
  },
  {
    "idx": 529,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "BusinessEntityID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BusinessEntityID) references Person(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "NationalIDNumber",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LoginID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrganizationNode",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OrganizationLevel",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "JobTitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BirthDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MaritalStatus",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HireDate",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SalariedFlag",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "VacationHours",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SickLeaveHours",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CurrentFlag",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rowguid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "person": {
        "columns": [
          {
            "field": "BusinessEntityID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(BusinessEntityID) references BusinessEntity(BusinessEntityID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "PersonType",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "NameStyle",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "FirstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MiddleName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Suffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EmailPromotion",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "AdditionalContactInfo",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Demographics",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rowguid",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ModifiedDate",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the job position currently occupied by Ken J S\u00c3\u00a1nchez?",
    "gold_sql": "SELECT T1.JobTitle FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.FirstName = 'Ken' AND T2.MiddleName = 'J' AND T2.LastName = 'S\u00e1nchez'",
    "predicted_sql": "SELECT T1.JobTitle FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.FirstName = 'Ken' AND T2.LastName = 'S\u00e1nchez'"
  },
  {
    "idx": 530,
    "relevant_table_schema": {
      "obj_classes": {
        "columns": [
          {
            "field": "OBJ_CLASS_ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "OBJ_CLASS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "img_obj": {
        "columns": [
          {
            "field": "IMG_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OBJ_SAMPLE_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OBJ_CLASS_ID) references OBJ_CLASSES(OBJ_CLASS_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "X",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Y",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "H",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many object samples in image no.1 are in the class of \"man\"?",
    "gold_sql": "SELECT SUM(CASE WHEN T1.OBJ_CLASS = 'man' THEN 1 ELSE 0 END) FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.IMG_ID = 1",
    "predicted_sql": "SELECT COUNT(T2.OBJ_SAMPLE_ID) FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.OBJ_CLASS = 'man' AND T2.IMG_ID = 1"
  },
  {
    "idx": 531,
    "relevant_table_schema": {
      "img_obj": {
        "columns": [
          {
            "field": "IMG_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OBJ_SAMPLE_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OBJ_CLASS_ID) references OBJ_CLASSES(OBJ_CLASS_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "X",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Y",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "H",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Define the bounding box of the object sample no. 7 on image no. 42.",
    "gold_sql": "SELECT X, Y, W, H FROM IMG_OBJ WHERE IMG_ID = 42 AND OBJ_SAMPLE_ID = 7",
    "predicted_sql": "SELECT X, Y, W, H FROM IMG_OBJ WHERE IMG_ID = 42 AND OBJ_SAMPLE_ID = 7"
  },
  {
    "idx": 532,
    "relevant_table_schema": {
      "img_obj": {
        "columns": [
          {
            "field": "IMG_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OBJ_SAMPLE_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OBJ_CLASS_ID) references OBJ_CLASSES(OBJ_CLASS_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "X",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Y",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "H",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "obj_classes": {
        "columns": [
          {
            "field": "OBJ_CLASS_ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "OBJ_CLASS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Count the number of 'dress' object classes and include their X and Y coordinates in image ID 1764.",
    "gold_sql": "SELECT T1.X, T1.Y FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 1764 AND T2.OBJ_CLASS = 'dress'",
    "predicted_sql": "SELECT COUNT(T2.OBJ_CLASS) , T1.X, T1.Y FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 1764 AND T2.OBJ_CLASS = 'dress'"
  },
  {
    "idx": 533,
    "relevant_table_schema": {
      "img_obj": {
        "columns": [
          {
            "field": "IMG_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OBJ_SAMPLE_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OBJ_CLASS_ID) references OBJ_CLASSES(OBJ_CLASS_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "X",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Y",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "H",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "obj_classes": {
        "columns": [
          {
            "field": "OBJ_CLASS_ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "OBJ_CLASS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the most common object class of image ID 56?",
    "gold_sql": "SELECT T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 56 GROUP BY T2.OBJ_CLASS ORDER BY COUNT(T2.OBJ_CLASS_ID) DESC LIMIT 1",
    "predicted_sql": "SELECT T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 56 GROUP BY T2.OBJ_CLASS ORDER BY COUNT(T2.OBJ_CLASS) DESC LIMIT 1"
  },
  {
    "idx": 534,
    "relevant_table_schema": {
      "img_obj_att": {
        "columns": [
          {
            "field": "foreign key(IMG_ID) references IMG_OBJ(IMG_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ATT_CLASS_ID) references ATT_CLASSES(ATT_CLASS_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(OBJ_SAMPLE_ID) references IMG_OBJ(OBJ_SAMPLE_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "att_classes": {
        "columns": [
          {
            "field": "ATT_CLASS_ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "ATT_CLASS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "On image no. 99 identify the percentage of objects that are described as white.",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T2.ATT_CLASS = 'white' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(OBJ_SAMPLE_ID) FROM IMG_OBJ_ATT AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.IMG_ID = 99",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN T2.ATT_CLASS = 'white' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.IMG_ID) FROM IMG_OBJ_ATT AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.IMG_ID = 99"
  },
  {
    "idx": 535,
    "relevant_table_schema": {
      "img_obj": {
        "columns": [
          {
            "field": "IMG_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OBJ_SAMPLE_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OBJ_CLASS_ID) references OBJ_CLASSES(OBJ_CLASS_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "X",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Y",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "H",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "obj_classes": {
        "columns": [
          {
            "field": "OBJ_CLASS_ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "OBJ_CLASS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many images have \"keyboard\" as their object class?",
    "gold_sql": "SELECT COUNT(T1.IMG_ID) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'keyboard'",
    "predicted_sql": "SELECT COUNT(T1.IMG_ID) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'keyboard'"
  },
  {
    "idx": 536,
    "relevant_table_schema": {
      "obj_classes": {
        "columns": [
          {
            "field": "OBJ_CLASS_ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "OBJ_CLASS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "img_obj": {
        "columns": [
          {
            "field": "IMG_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OBJ_SAMPLE_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OBJ_CLASS_ID) references OBJ_CLASSES(OBJ_CLASS_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "X",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Y",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "H",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the percentage of the object samples in the class of \"man\" in image no.1?",
    "gold_sql": "SELECT CAST(COUNT(CASE WHEN T1.OBJ_CLASS = 'man' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.OBJ_CLASS_ID) FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.IMG_ID = 1",
    "predicted_sql": "SELECT CAST(COUNT(CASE WHEN T1.OBJ_CLASS = 'man' THEN T2.OBJ_SAMPLE_ID ELSE NULL END) AS REAL) * 100 / COUNT(T2.OBJ_SAMPLE_ID) FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.IMG_ID = 1"
  },
  {
    "idx": 537,
    "relevant_table_schema": {
      "img_obj": {
        "columns": [
          {
            "field": "IMG_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OBJ_SAMPLE_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OBJ_CLASS_ID) references OBJ_CLASSES(OBJ_CLASS_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "X",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Y",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "H",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Indicate the bounding box of the image 8.",
    "gold_sql": "SELECT X, Y, W, H FROM IMG_OBJ WHERE IMG_ID = 8",
    "predicted_sql": "SELECT X, Y, W, H FROM IMG_OBJ WHERE IMG_ID = 8"
  },
  {
    "idx": 538,
    "relevant_table_schema": {
      "img_obj": {
        "columns": [
          {
            "field": "IMG_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OBJ_SAMPLE_ID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(OBJ_CLASS_ID) references OBJ_CLASSES(OBJ_CLASS_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "X",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Y",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "H",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "obj_classes": {
        "columns": [
          {
            "field": "OBJ_CLASS_ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "OBJ_CLASS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Write the object classes of image ID 22 alongside the object's width and height.",
    "gold_sql": "SELECT T1.W, T1.H, T2.OBJ_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 22",
    "predicted_sql": "SELECT T2.OBJ_CLASS, T1.W, T1.H FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 22"
  },
  {
    "idx": 539,
    "relevant_table_schema": {
      "img_rel": {
        "columns": [
          {
            "field": "foreign key(IMG_ID) references IMG_OBJ(IMG_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(PRED_CLASS_ID) references PRED_CLASSES(PRED_CLASS_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(OBJ1_SAMPLE_ID) references IMG_OBJ(OBJ_SAMPLE_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(OBJ2_SAMPLE_ID) references IMG_OBJ(OBJ_SAMPLE_ID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "pred_classes": {
        "columns": [
          {
            "field": "PRED_CLASS_ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "PRED_CLASS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Name the most common predicate class of image ID 4434.",
    "gold_sql": "SELECT T2.PRED_CLASS FROM IMG_REL AS T1 INNER JOIN PRED_CLASSES AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T1.IMG_ID = 4434 ORDER BY T2.PRED_CLASS DESC LIMIT 1",
    "predicted_sql": "SELECT T2.PRED_CLASS FROM IMG_REL AS T1 INNER JOIN PRED_CLASSES AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T1.IMG_ID = 4434 GROUP BY T2.PRED_CLASS ORDER BY COUNT(T2.PRED_CLASS) DESC LIMIT 1"
  },
  {
    "idx": 540,
    "relevant_table_schema": {
      "master": {
        "columns": [
          {
            "field": "playerID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(coachID) references Coaches(coachID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "hofID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameNote",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameGiven",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameNick",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shootCatch",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "legendsID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ihdbID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hrefID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstNHL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastNHL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstWHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastWHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pos",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthMon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthDay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathMon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathDay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many former athletes go on to become coaches after retiring?",
    "gold_sql": "SELECT COUNT(playerID) FROM Master WHERE playerID IS NOT NULL AND coachID IS NOT NULL",
    "predicted_sql": "SELECT COUNT(DISTINCT T1.playerID) FROM Master AS T1 INNER JOIN Coaches AS T2 ON T1.coachID = T2.coachID WHERE T1.coachID IS NOT NULL"
  },
  {
    "idx": 541,
    "relevant_table_schema": {
      "master": {
        "columns": [
          {
            "field": "playerID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(coachID) references Coaches(coachID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "hofID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameNote",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameGiven",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameNick",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shootCatch",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "legendsID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ihdbID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hrefID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstNHL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastNHL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstWHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastWHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pos",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthMon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthDay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathMon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathDay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "scoring": {
        "columns": [
          {
            "field": "foreign key(playerID) references Master(playerID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(year) references Teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "stint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(tmID) references Teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pos",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "G",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Pts",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PIM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "+/-",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PPG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PPA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SHG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GWG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GTG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SOG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostPts",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostPIM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Post+/-",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostPPG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostPPA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSHG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGWG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSOG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the total number of game played for players from USA?",
    "gold_sql": "SELECT COUNT(T2.GP) FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T1.birthCountry = 'USA'",
    "predicted_sql": "SELECT SUM(T2.GP) FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T1.birthCountry = 'USA'"
  },
  {
    "idx": 542,
    "relevant_table_schema": {
      "goalies": {
        "columns": [
          {
            "field": "foreign key(playerID) references Master(playerID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(year) references Teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "stint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(tmID) references Teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Min",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "L",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "T/OL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ENG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SHO",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostMin",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostW",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostT",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostENG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSHO",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many teams scored against their opponent who had pulled their goalie in the year 2005?",
    "gold_sql": "SELECT COUNT(tmID) FROM Goalies WHERE year = 2005 AND ENG IS NULL",
    "predicted_sql": "SELECT COUNT(DISTINCT tmID) FROM Goalies WHERE year = 2005 AND GA > 0"
  },
  {
    "idx": 543,
    "relevant_table_schema": {
      "scoring": {
        "columns": [
          {
            "field": "foreign key(playerID) references Master(playerID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(year) references Teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "stint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(tmID) references Teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pos",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "G",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Pts",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PIM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "+/-",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PPG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PPA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SHG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GWG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GTG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SOG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostPts",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostPIM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Post+/-",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostPPG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostPPA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSHG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGWG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSOG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "master": {
        "columns": [
          {
            "field": "playerID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(coachID) references Coaches(coachID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "hofID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameNote",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameGiven",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameNick",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shootCatch",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "legendsID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ihdbID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hrefID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstNHL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastNHL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstWHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastWHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pos",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthMon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthDay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathMon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathDay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Between 2003 to 2005, what are the given names of the players with the most number of games played whose Penalty minutes is between 200 to 250?",
    "gold_sql": "SELECT T2.nameGiven FROM Scoring AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID AND T1.PIM BETWEEN 200 AND 250 AND T1.year BETWEEN 2003 AND 2005 ORDER BY T1.GP DESC LIMIT 1",
    "predicted_sql": "SELECT DISTINCT T2.nameGiven FROM Scoring AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T1.PIM BETWEEN 200 AND 250 AND T1.year BETWEEN 2003 AND 2005"
  },
  {
    "idx": 544,
    "relevant_table_schema": {
      "goalies": {
        "columns": [
          {
            "field": "foreign key(playerID) references Master(playerID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(year) references Teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "stint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(tmID) references Teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Min",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "L",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "T/OL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ENG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SHO",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostMin",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostW",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostT",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostENG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSHO",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many games did player Id \"vanbijo01\" win in the 1990 season?",
    "gold_sql": "SELECT W FROM Goalies WHERE playerID = 'vanbijo01' AND year = 1990",
    "predicted_sql": "SELECT W FROM Goalies WHERE year = 1990 AND playerID = 'vanbijo01'"
  },
  {
    "idx": 545,
    "relevant_table_schema": {
      "master": {
        "columns": [
          {
            "field": "playerID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(coachID) references Coaches(coachID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "hofID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameNote",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameGiven",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameNick",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shootCatch",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "legendsID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ihdbID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hrefID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstNHL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastNHL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstWHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastWHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pos",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthMon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthDay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathMon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathDay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "goalies": {
        "columns": [
          {
            "field": "foreign key(playerID) references Master(playerID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(year) references Teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "stint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(tmID) references Teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Min",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "L",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "T/OL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ENG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SHO",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostMin",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostW",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostT",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostENG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSHO",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "teams": {
        "columns": [
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "franchID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "confID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "divID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "playoff",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "G",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "L",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "T",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OTL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Pts",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SoW",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SoL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GF",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GA",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PIM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BenchMinor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PPG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PPC",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PKG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PKC",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SHF",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "State the nick name of player ID 'aubinje01'. List all the teams and season he played for.",
    "gold_sql": "SELECT DISTINCT T1.nameNick, T3.year, T3.name FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID INNER JOIN Teams AS T3 ON T2.tmID = T3.tmID WHERE T1.playerID = 'aubinje01'",
    "predicted_sql": "SELECT DISTINCT T1.nameNick, T3.name, T3.year FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID INNER JOIN Teams AS T3 ON T2.tmID = T3.tmID WHERE T1.playerID = 'aubinje01'"
  },
  {
    "idx": 546,
    "relevant_table_schema": {
      "goalies": {
        "columns": [
          {
            "field": "foreign key(playerID) references Master(playerID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(year) references Teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "stint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(tmID) references Teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Min",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "L",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "T/OL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ENG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SHO",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostMin",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostW",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostT",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostENG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSHO",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many goals were scored while the goalkeeper was on the ice in the 1924 WCHL by the goalie with the most goals scored?",
    "gold_sql": "SELECT SUM(PostGA) FROM Goalies WHERE lgID = 'WCHL' AND year = '1924' GROUP BY playerID ORDER BY SUM(PostGA) DESC LIMIT 1",
    "predicted_sql": "SELECT GA FROM Goalies WHERE year = 1924 ORDER BY GA DESC LIMIT 1"
  },
  {
    "idx": 547,
    "relevant_table_schema": {
      "goalies": {
        "columns": [
          {
            "field": "foreign key(playerID) references Master(playerID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(year) references Teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "stint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(tmID) references Teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Min",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "L",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "T/OL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ENG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SHO",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostMin",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostW",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostT",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostENG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSHO",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many teams have the same total number of postseason wins and postseason loses?",
    "gold_sql": "SELECT DISTINCT COUNT(tmID) FROM Goalies WHERE PostW = PostL",
    "predicted_sql": "SELECT COUNT(DISTINCT T1.tmID) FROM Goalies AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID WHERE T1.PostW = T1.PostL"
  },
  {
    "idx": 548,
    "relevant_table_schema": {
      "goalies": {
        "columns": [
          {
            "field": "foreign key(playerID) references Master(playerID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(year) references Teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "stint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(tmID) references Teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Min",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "L",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "T/OL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ENG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SHO",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGP",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostMin",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostW",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostT",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostENG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSHO",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostGA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PostSA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "master": {
        "columns": [
          {
            "field": "playerID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(coachID) references Coaches(coachID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "hofID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameNote",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameGiven",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameNick",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shootCatch",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "legendsID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ihdbID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hrefID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstNHL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastNHL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstWHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastWHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pos",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthMon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthDay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathMon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathDay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "For the goalie whose last name is \"Young\", how many teams did he play in?",
    "gold_sql": "SELECT COUNT(DISTINCT T1.tmID) FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T2.lastName = 'Young'",
    "predicted_sql": "SELECT COUNT(DISTINCT tmID) FROM Goalies WHERE lastName = 'Young'"
  },
  {
    "idx": 549,
    "relevant_table_schema": {
      "teams": {
        "columns": [
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "franchID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "confID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "divID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rank",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "playoff",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "G",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "W",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "L",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "T",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OTL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Pts",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SoW",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SoL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GF",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GA",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PIM",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "BenchMinor",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PPG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PPC",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PKG",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "PKC",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SHF",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "coaches": {
        "columns": [
          {
            "field": "coachID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(year) references Teams(year)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(tmID) references Teams(tmID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "lgID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "notes",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "g",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "w",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "l",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "t",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postg",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postw",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postl",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postt",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "master": {
        "columns": [
          {
            "field": "playerID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(coachID) references Coaches(coachID)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "hofID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameNote",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameGiven",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "nameNick",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "height",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "weight",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "shootCatch",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "legendsID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ihdbID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hrefID",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstNHL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastNHL",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstWHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lastWHA",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pos",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthMon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthDay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "birthCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathYear",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathMon",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathDay",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathCountry",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "deathCity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Who was the coach for the team which had the most bench minors penalty in 2003\uff1f",
    "gold_sql": "SELECT DISTINCT T3.firstName, T3.lastName FROM Teams AS T1 INNER JOIN Coaches AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year INNER JOIN Master AS T3 ON T2.coachID = T3.coachID WHERE T1.year = '2003' GROUP BY T3.firstName, T3.lastName ORDER BY SUM(T1.BenchMinor) DESC LIMIT 1",
    "predicted_sql": "SELECT T2.firstName, T2.lastName FROM Teams AS T1 INNER JOIN Coaches AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year INNER JOIN Master AS T3 ON T2.coachID = T3.coachID WHERE T1.year = 2003 AND T1.BenchMinor = ( SELECT MAX(T1.BenchMinor) FROM Teams AS T1 )"
  },
  {
    "idx": 550,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Continent",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurfaceArea",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndepYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LifeExpectancy",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNP",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNPOld",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LocalName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentForm",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HeadOfState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Code2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "countrylanguage": {
        "columns": [
          {
            "field": "foreign key(CountryCode) references Country(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsOfficial",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Percentage",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CountryCode) references Country(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "District",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Provide the country, population, capital city, and official language of the country with the smallest surface area.",
    "gold_sql": "SELECT T1.Name, T1.Population, T1.Capital, T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode INNER JOIN City AS T3 ON T1.Code = T3.CountryCode WHERE T2.IsOfficial = 'T' ORDER BY T1.SurfaceArea LIMIT 1",
    "predicted_sql": "SELECT T1.Name, T1.Population, T3.Name, T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode INNER JOIN City AS T3 ON T1.Code = T3.CountryCode ORDER BY T1.SurfaceArea ASC LIMIT 1"
  },
  {
    "idx": 551,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Continent",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurfaceArea",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndepYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LifeExpectancy",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNP",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNPOld",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LocalName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentForm",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HeadOfState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Code2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "countrylanguage": {
        "columns": [
          {
            "field": "foreign key(CountryCode) references Country(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsOfficial",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Percentage",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the countries and their official languages in Antarctica.",
    "gold_sql": "SELECT T1.Name, T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Antarctica' AND T2.IsOfficial = 'T'",
    "predicted_sql": "SELECT T1.Name, T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'Antarctica' AND T2.IsOfficial = 't'"
  },
  {
    "idx": 552,
    "relevant_table_schema": {
      "city": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CountryCode) references Country(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "District",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Continent",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurfaceArea",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndepYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LifeExpectancy",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNP",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNPOld",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LocalName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentForm",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HeadOfState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Code2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the cities with a population between 140000 and 150000, list the country that has life expectancy greater than 80% life expectancy of all countries.",
    "gold_sql": "SELECT T2.Name FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Population BETWEEN 140000 AND 150000 GROUP BY T2.Name, LifeExpectancy HAVING LifeExpectancy < ( SELECT AVG(LifeExpectancy) FROM Country ) * 0.8",
    "predicted_sql": "SELECT T2.Name FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Population BETWEEN 140000 AND 150000 AND T2.LifeExpectancy > 80"
  },
  {
    "idx": 553,
    "relevant_table_schema": {
      "city": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CountryCode) references Country(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "District",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Continent",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurfaceArea",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndepYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LifeExpectancy",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNP",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNPOld",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LocalName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentForm",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HeadOfState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Code2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the surface area and GNP of the country where Namibe district belongs?",
    "gold_sql": "SELECT T2.SurfaceArea, T2.GNP FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.District = 'Namibe'",
    "predicted_sql": "SELECT T2.SurfaceArea, T2.GNP FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.District = 'Namibe'"
  },
  {
    "idx": 554,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Continent",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurfaceArea",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndepYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LifeExpectancy",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNP",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNPOld",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LocalName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentForm",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HeadOfState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Code2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CountryCode) references Country(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "District",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the GNP growth rate by the country of Shanghai?",
    "gold_sql": "SELECT CAST((T1.GNP - T1.GNPOld) AS REAL) / T1.GNPOld FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Shanghai'",
    "predicted_sql": "SELECT CAST(GNP - GNPOld AS REAL) / GNPOld FROM Country WHERE Name = 'Shanghai'"
  },
  {
    "idx": 555,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Continent",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurfaceArea",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndepYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LifeExpectancy",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNP",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNPOld",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LocalName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentForm",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HeadOfState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Code2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "countrylanguage": {
        "columns": [
          {
            "field": "foreign key(CountryCode) references Country(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsOfficial",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Percentage",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many languages are used in Cyprus?",
    "gold_sql": "SELECT SUM(CASE WHEN T1.Name = 'Cyprus' THEN 1 ELSE 0 END) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode",
    "predicted_sql": "SELECT COUNT(T2.Language) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Cyprus'"
  },
  {
    "idx": 556,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Continent",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurfaceArea",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndepYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LifeExpectancy",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNP",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNPOld",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LocalName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentForm",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HeadOfState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Code2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "countrylanguage": {
        "columns": [
          {
            "field": "foreign key(CountryCode) references Country(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsOfficial",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Percentage",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CountryCode) references Country(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "District",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Provide the name, capital city and its official language of the country with the highest life expectancy.",
    "gold_sql": "SELECT T1.Name, T1.Capital, T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode INNER JOIN City AS T3 ON T1.Code = T3.CountryCode WHERE T2.IsOfficial = 'T' ORDER BY T1.LifeExpectancy DESC LIMIT 1",
    "predicted_sql": "SELECT T1.Name, T3.Name, T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode INNER JOIN City AS T3 ON T1.Code = T3.CountryCode ORDER BY T1.LifeExpectancy DESC LIMIT 1"
  },
  {
    "idx": 557,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Continent",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurfaceArea",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndepYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LifeExpectancy",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNP",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNPOld",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LocalName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentForm",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HeadOfState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Code2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(CountryCode) references Country(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "District",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List down the cities that belong to the country with a life expectancy of 66.4.",
    "gold_sql": "SELECT T2.Name FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T1.LifeExpectancy = 66.4",
    "predicted_sql": "SELECT T2.Name FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T1.LifeExpectancy = 66.4"
  },
  {
    "idx": 558,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Continent",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurfaceArea",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndepYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LifeExpectancy",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNP",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNPOld",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LocalName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentForm",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HeadOfState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Code2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "countrylanguage": {
        "columns": [
          {
            "field": "foreign key(CountryCode) references Country(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsOfficial",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Percentage",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all the official and unofficial languages used by the country that declared its independence in 1830.",
    "gold_sql": "SELECT T2.Language, T2.IsOfficial FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.IndepYear = 1830 GROUP BY T2.Language, T2.IsOfficial",
    "predicted_sql": "SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.IndepYear = 1830 AND T2.IsOfficial = 't' UNION SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.IndepYear = 1830 AND T2.IsOfficial = 'f'"
  },
  {
    "idx": 559,
    "relevant_table_schema": {
      "countrylanguage": {
        "columns": [
          {
            "field": "foreign key(CountryCode) references Country(Code)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "Language",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IsOfficial",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Percentage",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Continent",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Region",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SurfaceArea",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "IndepYear",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LifeExpectancy",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNP",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GNPOld",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "LocalName",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GovernmentForm",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "HeadOfState",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Code2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the names of the country that officially uses English as their language.",
    "gold_sql": "SELECT T2.Name FROM CountryLanguage AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.IsOfficial = 'T' AND T1.Language = 'English'",
    "predicted_sql": "SELECT T2.Name FROM CountryLanguage AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.IsOfficial = 'TRUE' AND T1.Language = 'English'"
  },
  {
    "idx": 560,
    "relevant_table_schema": {
      "reviews": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "content",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "author_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "created_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the content of the review under the title \"really interesting!\" and is created on 2018-04-24 at 12:05:16?",
    "gold_sql": "SELECT content FROM reviews WHERE title = 'really interesting!' AND created_at = '2018-04-24T12:05:16-07:00'",
    "predicted_sql": "SELECT content FROM reviews WHERE title = 'really interesting!' AND created_at = '2018-04-24T12:05:16-07:00'"
  },
  {
    "idx": 561,
    "relevant_table_schema": {
      "categories": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "podcasts": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "itunes_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "itunes_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all the podcast title and its itunes url under the 'society-culture' category.",
    "gold_sql": "SELECT T2.title, T2.itunes_url FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'society-culture'",
    "predicted_sql": "SELECT T2.title, T2.itunes_url FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'society-culture'"
  },
  {
    "idx": 562,
    "relevant_table_schema": {
      "reviews": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "content",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "author_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "created_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "podcasts": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "itunes_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "itunes_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What dates were the Don't Lie To Your Life Coach podcast reviews created?",
    "gold_sql": "SELECT created_at FROM reviews WHERE podcast_id = ( SELECT podcast_id FROM podcasts WHERE title = 'Don''t Lie To Your Life Coach' )",
    "predicted_sql": "SELECT T1.created_at FROM reviews AS T1 INNER JOIN podcasts AS T2 ON T1.podcast_id = T2.podcast_id WHERE T2.title LIKE 'Don%t Lie To Your Life Coach'"
  },
  {
    "idx": 563,
    "relevant_table_schema": {
      "categories": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "reviews": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "content",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "author_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "created_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all of the two-star reviews and their categories.",
    "gold_sql": "SELECT T1.category FROM categories AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.rating = 2",
    "predicted_sql": "SELECT T1.category FROM categories AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.rating = 2"
  },
  {
    "idx": 564,
    "relevant_table_schema": {
      "podcasts": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "itunes_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "itunes_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "reviews": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "content",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "author_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "created_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Name the podcast title, rating and review content created by '76A4C24B6038145'.",
    "gold_sql": "SELECT T2.title, T2.rating, T2.content FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.author_id = '76A4C24B6038145'",
    "predicted_sql": "SELECT T1.title, T2.rating, T2.content FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T1.podcast_id = T2.podcast_id WHERE T2.author_id = '76A4C24B6038145'"
  },
  {
    "idx": 565,
    "relevant_table_schema": {
      "podcasts": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "itunes_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "itunes_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "reviews": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "content",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "author_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "created_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the review with the title \"Hosts bring the show down\" for?",
    "gold_sql": "SELECT title FROM podcasts WHERE podcast_id = ( SELECT podcast_id FROM reviews WHERE title = 'Hosts bring the show down' )",
    "predicted_sql": "SELECT T2.podcast_id FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T1.podcast_id = T2.podcast_id WHERE T2.title = 'Hosts bring the show down'"
  },
  {
    "idx": 566,
    "relevant_table_schema": {
      "podcasts": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "itunes_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "itunes_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "reviews": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "content",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "author_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "created_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average rating of the podcast \"Please Excuse My Dead Aunt Sally\"?",
    "gold_sql": "SELECT AVG(T2.rating) FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'Please Excuse My Dead Aunt Sally'",
    "predicted_sql": "SELECT AVG(T2.rating) FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T1.podcast_id = T2.podcast_id WHERE T1.title = 'Please Excuse My Dead Aunt Sally'"
  },
  {
    "idx": 567,
    "relevant_table_schema": {
      "podcasts": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "itunes_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "itunes_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "reviews": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "content",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "author_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "created_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Indicate the id of the reviewer whose itunes id is 1516665400.",
    "gold_sql": "SELECT T2.author_id FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.itunes_id = 1516665400",
    "predicted_sql": "SELECT T2.author_id FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T1.podcast_id = T2.podcast_id WHERE T1.itunes_id = 1516665400"
  },
  {
    "idx": 568,
    "relevant_table_schema": {
      "podcasts": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "itunes_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "itunes_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "reviews": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "content",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "author_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "created_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all the podcasts reviewed by a reviewer who has a review titled \"Inspired & On Fire!\".",
    "gold_sql": "SELECT T1.title FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.title = 'Inspired & On Fire!'",
    "predicted_sql": "SELECT T1.title FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T1.podcast_id = T2.podcast_id WHERE T2.title = 'Inspired & On Fire!'"
  },
  {
    "idx": 569,
    "relevant_table_schema": {
      "podcasts": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "itunes_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "slug",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "itunes_url",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "reviews": {
        "columns": [
          {
            "field": "podcast_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "content",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "author_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "created_at",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the content of the earliest review for the \"Stuff You Should Know\" podcast?",
    "gold_sql": "SELECT T2.content FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.title = 'Stuff You Should Know' ORDER BY T2.created_at ASC LIMIT 1",
    "predicted_sql": "SELECT T2.content FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T1.podcast_id = T2.podcast_id WHERE T1.title = 'Stuff You Should Know' ORDER BY T2.created_at LIMIT 1"
  },
  {
    "idx": 570,
    "relevant_table_schema": {
      "university": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(country_id) references country(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "university_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "university_year": {
        "columns": [
          {
            "field": "foreign key(university_id) references university(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_staff_ratio",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_international_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_female_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "country_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the universities in Australia, how many of them have more than 15000 students in 2011?",
    "gold_sql": "SELECT COUNT(*) FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T3.country_name = 'Australia' AND T2.year = 2011 AND T2.num_students > 15000",
    "predicted_sql": "SELECT COUNT(T1.id) FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T3.country_name = 'Australia' AND T2.year = 2011 AND T2.num_students > 15000"
  },
  {
    "idx": 571,
    "relevant_table_schema": {
      "university_year": {
        "columns": [
          {
            "field": "foreign key(university_id) references university(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_staff_ratio",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_international_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_female_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "university": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(country_id) references country(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "university_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many times more was the number of students of University of Ottawa than Joseph Fourier University in 2013?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T2.university_name = 'University of Ottawa' THEN T1.num_students ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.university_name = 'Joseph Fourier University' THEN T1.num_students ELSE 0 END) FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2013",
    "predicted_sql": "SELECT CAST(T1.num_students AS REAL) / ( SELECT num_students FROM university_year WHERE year = 2013 AND university_name = 'Joseph Fourier University' ) FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2013 AND T2.university_name = 'University of Ottawa'"
  },
  {
    "idx": 572,
    "relevant_table_schema": {
      "university_year": {
        "columns": [
          {
            "field": "foreign key(university_id) references university(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_staff_ratio",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_international_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_female_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "university": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(country_id) references country(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "university_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the difference in overall student enrollment and international student enrollment at the Harvard university from 2011 to 2012?",
    "gold_sql": "SELECT SUM(T1.num_students) - SUM(CAST(T1.num_students * T1.pct_international_students AS REAL) / 100) FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T2.university_name = 'Harvard University' AND T1.year BETWEEN 2011 AND 2012",
    "predicted_sql": "SELECT (SUM(CASE WHEN T1.year = 2012 THEN T1.num_students ELSE 0 END) - SUM(CASE WHEN T1.year = 2011 THEN T1.num_students ELSE 0 END)) - (SUM(CASE WHEN T1.year = 2012 THEN T1.pct_international_students * T1.num_students ELSE 0 END) - SUM(CASE WHEN T1.year = 2011 THEN T1.pct_international_students * T1.num_students ELSE 0 END)) FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T2.university_name = 'Harvard University'"
  },
  {
    "idx": 573,
    "relevant_table_schema": {
      "university_year": {
        "columns": [
          {
            "field": "foreign key(university_id) references university(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_staff_ratio",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_international_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_female_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Calculate the average number of students of all universities in 2012.",
    "gold_sql": "SELECT AVG(num_students) FROM university_year WHERE year = 2012",
    "predicted_sql": "SELECT AVG(T.num_students) FROM university_year AS T WHERE T.year = 2012"
  },
  {
    "idx": 574,
    "relevant_table_schema": {
      "university": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(country_id) references country(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "university_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the university ID of Harvard University?",
    "gold_sql": "SELECT id FROM university WHERE university_name = 'Harvard University'",
    "predicted_sql": "SELECT T.id FROM university AS T WHERE T.university_name = 'Harvard University'"
  },
  {
    "idx": 575,
    "relevant_table_schema": {
      "university_year": {
        "columns": [
          {
            "field": "foreign key(university_id) references university(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_staff_ratio",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_international_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_female_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "university_ranking_year": {
        "columns": [
          {
            "field": "foreign key(university_id) references university(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ranking_criteria_id) references ranking_criteria(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "score",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among universities that score below 80 in 2015, what is the percentage of international students?",
    "gold_sql": "SELECT SUM(CAST(T1.num_students * T1.pct_international_students AS REAL) / 100) / COUNT(*) * 100 FROM university_year AS T1 INNER JOIN university_ranking_year AS T2 ON T1.university_id = T2.university_id WHERE T2.score < 80 AND T1.year = 2015",
    "predicted_sql": "SELECT AVG(T1.pct_international_students) FROM university_year AS T1 INNER JOIN university_ranking_year AS T2 ON T1.university_id = T2.university_id WHERE T2.score < 80 AND T1.year = 2015"
  },
  {
    "idx": 576,
    "relevant_table_schema": {
      "university_year": {
        "columns": [
          {
            "field": "foreign key(university_id) references university(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_staff_ratio",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_international_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_female_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the student staff ratio at the university with the greatest student staff ratio of all time?",
    "gold_sql": "SELECT MAX(student_staff_ratio) FROM university_year ORDER BY student_staff_ratio DESC LIMIT 1",
    "predicted_sql": "SELECT student_staff_ratio FROM university_year WHERE student_staff_ratio = ( SELECT MAX(student_staff_ratio) FROM university_year )"
  },
  {
    "idx": 577,
    "relevant_table_schema": {
      "university": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(country_id) references country(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "university_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "university_year": {
        "columns": [
          {
            "field": "foreign key(university_id) references university(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_staff_ratio",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_international_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_female_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "country_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the universities in Australia, how many of them have a student staff ratio of over 15 in 2011?",
    "gold_sql": "SELECT COUNT(*) FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T3.country_name = 'Australia' AND T2.student_staff_ratio > 15 AND T2.year = 2011",
    "predicted_sql": "SELECT COUNT(T1.id) FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T3.country_name = 'Australia' AND T2.student_staff_ratio > 15 AND T2.year = 2011"
  },
  {
    "idx": 578,
    "relevant_table_schema": {
      "university": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(country_id) references country(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "university_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "university_year": {
        "columns": [
          {
            "field": "foreign key(university_id) references university(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "num_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "student_staff_ratio",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_international_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pct_female_students",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "country_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Between 2011 to 2016, in which countries can you find the universities where at least 50% of its students are international students?",
    "gold_sql": "SELECT DISTINCT T3.country_name FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T2.pct_international_students > 50 AND T2.year BETWEEN 2011 AND 2016",
    "predicted_sql": "SELECT T3.country_name FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T2.pct_international_students > 50 AND T2.year BETWEEN 2011 AND 2016"
  },
  {
    "idx": 579,
    "relevant_table_schema": {
      "ranking_criteria": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(ranking_system_id) references ranking_system(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "criteria_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "university_ranking_year": {
        "columns": [
          {
            "field": "foreign key(university_id) references university(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ranking_criteria_id) references ranking_criteria(id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "year",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "score",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Calculate the average score per university under Alumni criteria in 2008.",
    "gold_sql": "SELECT AVG(T2.score) FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id WHERE T1.criteria_name = 'Alumni' AND T2.year = 2008",
    "predicted_sql": "SELECT AVG(T2.score) FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id WHERE T1.criteria_name = 'Alumni' AND T2.year = 2008"
  },
  {
    "idx": 580,
    "relevant_table_schema": {
      "weather": {
        "columns": [
          {
            "field": "station_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmax",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmin",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tavg",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "depart",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dewpoint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wetbulb",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "heat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cool",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunrise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunset",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "codesum",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "snowfall",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preciptotal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stnpressure",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sealevel",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultdir",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avgspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "relation": {
        "columns": [
          {
            "field": "store_nbr",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(store_nbr) references sales_in_weather(store_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(station_nbr) references weather(station_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Tell the wet-bulb temperature of the weather station which contained store no.6 on 2012/2/15.",
    "gold_sql": "SELECT T1.wetbulb FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 14 AND T1.`date` = '2012-02-15'",
    "predicted_sql": "SELECT T1.wetbulb FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 6 AND T1.`date` = '2012-02-15'"
  },
  {
    "idx": 581,
    "relevant_table_schema": {
      "relation": {
        "columns": [
          {
            "field": "store_nbr",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(store_nbr) references sales_in_weather(store_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(station_nbr) references weather(station_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Which weather station does store no.20 belong to?",
    "gold_sql": "SELECT station_nbr FROM relation WHERE store_nbr = 20",
    "predicted_sql": "SELECT station_nbr FROM relation WHERE store_nbr = 20"
  },
  {
    "idx": 582,
    "relevant_table_schema": {
      "sales_in_weather": {
        "columns": [
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "store_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "relation": {
        "columns": [
          {
            "field": "store_nbr",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(store_nbr) references sales_in_weather(store_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(station_nbr) references weather(station_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "weather": {
        "columns": [
          {
            "field": "station_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmax",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmin",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tavg",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "depart",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dewpoint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wetbulb",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "heat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cool",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunrise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunset",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "codesum",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "snowfall",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preciptotal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stnpressure",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sealevel",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultdir",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avgspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the dates on which the sale of item no.5 in store no.3 exceeded 100 and the average wind speed exceeded 10.",
    "gold_sql": "SELECT T1.`date` FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND T1.item_nbr = 5 AND T1.units > 100 AND T3.avgspeed > 10",
    "predicted_sql": "SELECT T1.date, T3.avgspeed FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND T1.item_nbr = 5 AND T1.units = 100 AND T3.avgspeed = 10"
  },
  {
    "idx": 583,
    "relevant_table_schema": {
      "weather": {
        "columns": [
          {
            "field": "station_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmax",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmin",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tavg",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "depart",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dewpoint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wetbulb",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "heat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cool",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunrise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunset",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "codesum",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "snowfall",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preciptotal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stnpressure",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sealevel",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultdir",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avgspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "On which day was the weather more windy in station no.1, 2012/1/1 or 2012/1/2?",
    "gold_sql": "SELECT CASE WHEN (SUM(CASE WHEN `date` = '2012-01-01' THEN avgspeed ELSE 0 END) - SUM(CASE WHEN `date` = '2012-01-02' THEN avgspeed ELSE 0 END)) > 0 THEN '2012-01-01' ELSE '2012-01-02' END FROM weather WHERE station_nbr = 1",
    "predicted_sql": "SELECT `date` FROM weather WHERE station_nbr = 1 AND CAST(SUBSTR(`date`, 1, 4) AS int) = 2012 AND resultdir = 360 AND `date` IN ('2012-01-01', '2012-01-02') GROUP BY `date` ORDER BY COUNT(resultdir) DESC LIMIT 1"
  },
  {
    "idx": 584,
    "relevant_table_schema": {
      "sales_in_weather": {
        "columns": [
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "store_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many no.9 items from store no.11 were sold on 2012/12/7?",
    "gold_sql": "SELECT units FROM sales_in_weather WHERE `date` = '2012-12-07' AND store_nbr = 11 AND item_nbr = 9",
    "predicted_sql": "SELECT SUM(CASE WHEN `date` = '2012-12-07' AND store_nbr = 11 AND item_nbr = 9 THEN units ELSE 0 END) FROM sales_in_weather"
  },
  {
    "idx": 585,
    "relevant_table_schema": {
      "sales_in_weather": {
        "columns": [
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "store_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "relation": {
        "columns": [
          {
            "field": "store_nbr",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(store_nbr) references sales_in_weather(store_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(station_nbr) references weather(station_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "weather": {
        "columns": [
          {
            "field": "station_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmax",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmin",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tavg",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "depart",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dewpoint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wetbulb",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "heat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cool",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunrise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunset",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "codesum",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "snowfall",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preciptotal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stnpressure",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sealevel",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultdir",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avgspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the total number of units of item no.5 sold in store no.3 in 2012 on days when the temperature was below the 30-year normal?",
    "gold_sql": "SELECT SUM(CASE WHEN T3.depart < 0 THEN units ELSE 0 END) AS sum FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND SUBSTR(T1.`date`, 1, 4) = '2012' AND T1.item_nbr = 5",
    "predicted_sql": "SELECT SUM(CASE WHEN T3.tavg < ( SELECT tavg FROM weather WHERE `date` = '2012-01-01' ) * 0.3 THEN units ELSE 0 END) AS sum FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND T1.item_nbr = 5"
  },
  {
    "idx": 586,
    "relevant_table_schema": {
      "relation": {
        "columns": [
          {
            "field": "store_nbr",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(store_nbr) references sales_in_weather(store_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(station_nbr) references weather(station_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "weather": {
        "columns": [
          {
            "field": "station_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmax",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmin",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tavg",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "depart",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dewpoint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wetbulb",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "heat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cool",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunrise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunset",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "codesum",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "snowfall",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preciptotal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stnpressure",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sealevel",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultdir",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avgspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many stores belong to the station with the highest recorded heat of all time?",
    "gold_sql": "SELECT COUNT(T2.store_nbr) FROM ( SELECT station_nbr FROM weather ORDER BY heat DESC LIMIT 1 ) AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr",
    "predicted_sql": "SELECT COUNT(T1.store_nbr) FROM relation AS T1 INNER JOIN weather AS T2 ON T2.station_nbr = T1.station_nbr ORDER BY T2.heat DESC LIMIT 1"
  },
  {
    "idx": 587,
    "relevant_table_schema": {
      "sales_in_weather": {
        "columns": [
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "store_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "relation": {
        "columns": [
          {
            "field": "store_nbr",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(store_nbr) references sales_in_weather(store_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(station_nbr) references weather(station_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "weather": {
        "columns": [
          {
            "field": "station_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmax",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmin",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tavg",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "depart",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dewpoint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wetbulb",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "heat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cool",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunrise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunset",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "codesum",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "snowfall",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preciptotal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stnpressure",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sealevel",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultdir",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avgspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the ID of the item that sold the best on the day with the highest max temperature in store no.3 in 2012?",
    "gold_sql": "SELECT T1.item_nbr FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T1.store_nbr = 3 AND T1.`date` LIKE '%2012%' AND tmax = ( SELECT MAX(tmax) FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T1.store_nbr = 3 AND T1.`date` LIKE '%2012%' ) GROUP BY T1.item_nbr ORDER BY SUM(units) DESC LIMIT 1",
    "predicted_sql": "SELECT T1.item_nbr FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN ( SELECT station_nbr, `date` FROM weather WHERE `date` LIKE '2012-06-30' AND store_nbr = 3 ORDER BY tmax DESC LIMIT 1 ) AS T3 ON T2.station_nbr = T3.station_nbr"
  },
  {
    "idx": 588,
    "relevant_table_schema": {
      "weather": {
        "columns": [
          {
            "field": "station_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmax",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmin",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tavg",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "depart",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dewpoint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wetbulb",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "heat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cool",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunrise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunset",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "codesum",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "snowfall",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preciptotal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stnpressure",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sealevel",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultdir",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avgspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "relation": {
        "columns": [
          {
            "field": "store_nbr",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(store_nbr) references sales_in_weather(store_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(station_nbr) references weather(station_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "For the home weather station of store no.15, what was the dew point on 2012/2/18?",
    "gold_sql": "SELECT T1.dewpoint FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 15 AND T1.`date` = '2012-02-18'",
    "predicted_sql": "SELECT T1.dewpoint FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 15 AND T1.`date` = '2012-02-18'"
  },
  {
    "idx": 589,
    "relevant_table_schema": {
      "sales_in_weather": {
        "columns": [
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "store_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "item_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "units",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "relation": {
        "columns": [
          {
            "field": "store_nbr",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(store_nbr) references sales_in_weather(store_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(station_nbr) references weather(station_nbr)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "weather": {
        "columns": [
          {
            "field": "station_nbr",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmax",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tmin",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tavg",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "depart",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dewpoint",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wetbulb",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "heat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cool",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunrise",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sunset",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "codesum",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "snowfall",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preciptotal",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stnpressure",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sealevel",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "resultdir",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "avgspeed",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many units of item no.5 were sold in store no.3 in total on days with a total precipitation of over 0.05?",
    "gold_sql": "SELECT SUM(CASE WHEN T3.preciptotal > 0.05 THEN units ELSE 0 END) AS sum FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND T1.item_nbr = 5",
    "predicted_sql": "SELECT SUM(CASE WHEN T3.preciptotal > 0.05 THEN units ELSE 0 END) AS sum FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND T1.item_nbr = 5"
  },
  {
    "idx": 590,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Province",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "economy": {
        "columns": [
          {
            "field": "Country",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "GDP",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Agriculture",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Service",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Industry",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Inflation",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How much does the gross domestic products goes to the industry sector for Singapore?",
    "gold_sql": "SELECT T2.GDP * T2.Industry FROM country AS T1 INNER JOIN economy AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Singapore'",
    "predicted_sql": "SELECT T2.Industry FROM Country AS T1 INNER JOIN Economy AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Singapore'"
  },
  {
    "idx": 591,
    "relevant_table_schema": {
      "sea": {
        "columns": [
          {
            "field": "Name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Depth",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "mergeswith": {
        "columns": [
          {
            "field": "Sea1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sea2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What sea does the Baltic Sea converge with, and how deep is the Baltic Sea?",
    "gold_sql": "SELECT T2.Sea2, T1.Depth FROM sea AS T1 INNER JOIN mergesWith AS T2 ON T1.Name = T2.Sea1 WHERE T1.Name = 'Baltic Sea'",
    "predicted_sql": "SELECT T2.Sea2, T1.Depth FROM sea AS T1 INNER JOIN mergeswith AS T2 ON T1.Name = T2.Sea1 WHERE T2.Sea2 = 'Baltic Sea'"
  },
  {
    "idx": 592,
    "relevant_table_schema": {
      "country": {
        "columns": [
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Province",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "province": {
        "columns": [
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "CapProv",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "city": {
        "columns": [
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Province",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the population density of Hanoi's home country?",
    "gold_sql": "SELECT T1.Population / T1.Area FROM country AS T1 INNER JOIN province AS T2 ON T1.Code = T2.Country INNER JOIN city AS T3 ON T3.Province = T2.Name WHERE T3.Name = 'Hanoi'",
    "predicted_sql": "SELECT T1.Population / T1.Area FROM country AS T1 INNER JOIN province AS T2 ON T1.Code = T2.Country INNER JOIN city AS T3 ON T2.Code = T3.Province WHERE T3.Name = 'Hanoi'"
  },
  {
    "idx": 593,
    "relevant_table_schema": {
      "politics": {
        "columns": [
          {
            "field": "Country",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Independence",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Dependent",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Government",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "economy": {
        "columns": [
          {
            "field": "Country",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "GDP",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Agriculture",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Service",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Industry",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Inflation",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "On what date did the country have a gross domestic product 400% higher than Saint Kitts and Nevis become independent?",
    "gold_sql": "SELECT Independence FROM politics WHERE country = ( SELECT country FROM economy WHERE GDP = 1100 )",
    "predicted_sql": "SELECT T1.Independence FROM politics AS T1 INNER JOIN economy AS T2 ON T1.Country = T2.Country WHERE T2.GDP = 400 * ( SELECT T2.GDP FROM politics AS T1 INNER JOIN economy AS T2 ON T1.Country = T2.Country WHERE T1.Country = 'Saint Kitts and Nevis' )"
  },
  {
    "idx": 594,
    "relevant_table_schema": {
      "locatedon": {
        "columns": [
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Province",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Island",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "island": {
        "columns": [
          {
            "field": "Name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Islands",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Height",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List all the coral islands along with its city and province.",
    "gold_sql": "SELECT City, Province FROM locatedOn WHERE Island IN ( SELECT Name FROM island WHERE Type = 'coral' )",
    "predicted_sql": "SELECT T1.City, T1.Province FROM locatedOn AS T1 INNER JOIN island AS T2 ON T2.Name = T1.Island WHERE T2.Type = 'coral'"
  },
  {
    "idx": 595,
    "relevant_table_schema": {
      "located": {
        "columns": [
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Province",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "River",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lake",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sea",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "river": {
        "columns": [
          {
            "field": "Name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "River",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lake",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sea",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Length",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceLongitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceLatitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Mountains",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceAltitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EstuaryLongitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EstuaryLatitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Province",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which two countries does the Detroit River flow through? Give the full name of the country.",
    "gold_sql": "SELECT T3.Name FROM located AS T1 INNER JOIN river AS T2 ON T1.River = T2.Name INNER JOIN country AS T3 ON T3.Code = T1.Country WHERE T2.Name = 'Detroit River'",
    "predicted_sql": "SELECT T3.Name FROM located AS T1 INNER JOIN river AS T2 ON T1.River = T2.Name INNER JOIN country AS T3 ON T3.Code = T2.SourceAltitude WHERE T1.City = 'Detroit'"
  },
  {
    "idx": 596,
    "relevant_table_schema": {
      "city": {
        "columns": [
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Province",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "locatedon": {
        "columns": [
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Province",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Island",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "island": {
        "columns": [
          {
            "field": "Name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Islands",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Height",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "For island area less than 200, list the island name and city it belongs to.",
    "gold_sql": "SELECT DISTINCT T3.Name, T1.Name FROM city AS T1 INNER JOIN locatedOn AS T2 ON T1.Name = T2.City INNER JOIN island AS T3 ON T3.Name = T2.Island WHERE T3.Area < 200",
    "predicted_sql": "SELECT T2.Island, T1.Name FROM city AS T1 INNER JOIN locatedOn AS T2 ON T1.Name = T2.City INNER JOIN island AS T3 ON T3.Name = T2.Island WHERE T3.Area < 200"
  },
  {
    "idx": 597,
    "relevant_table_schema": {
      "ethnicgroup": {
        "columns": [
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Percentage",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "country": {
        "columns": [
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Code",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Capital",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Province",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "continent": {
        "columns": [
          {
            "field": "Name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Area",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "encompasses": {
        "columns": [
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Continent",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Percentage",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "politics": {
        "columns": [
          {
            "field": "Country",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Independence",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Dependent",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Government",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the total number of Afro-Asian people in the most populous Asian country governed by a monarchy?",
    "gold_sql": "SELECT T5.Percentage * T6.Population FROM ethnicGroup AS T5 INNER JOIN country AS T6 ON T5.Country = T6.Code WHERE Country = ( SELECT T3.Code FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T3.Code = T2.Country INNER JOIN politics AS T4 ON T4.Country = T3.Code WHERE T4.Government = 'monarchy' AND T1.Name = 'Asia' ORDER BY T3.Population DESC LIMIT 1 ) AND T5.Name = 'Afro-Asian'",
    "predicted_sql": "SELECT T5.Percentage * T6.Population FROM ethnicGroup AS T5 INNER JOIN country AS T6 ON T5.Country = T6.Code WHERE T6.Government = 'monarchy' AND T6.Population = ( SELECT MAX(Population) FROM country ) AND T5.Name = 'Afro-Asian'"
  },
  {
    "idx": 598,
    "relevant_table_schema": {
      "city": {
        "columns": [
          {
            "field": "Name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Province",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "located": {
        "columns": [
          {
            "field": "City",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Province",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "River",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lake",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sea",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "river": {
        "columns": [
          {
            "field": "Name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "River",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Lake",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Sea",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Length",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceLongitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceLatitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Mountains",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "SourceAltitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EstuaryLongitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EstuaryLatitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What province did the river Klaeaelv travel through and how long is the river?",
    "gold_sql": "SELECT T1.Province FROM city AS T1 INNER JOIN located AS T2 ON T1.Name = T2.City INNER JOIN river AS T3 ON T3.Name = T2.River WHERE T3.Name = 'Klaraelv'",
    "predicted_sql": "SELECT T2.Province, T3.Length FROM city AS T1 INNER JOIN located AS T2 ON T1.Name = T2.City INNER JOIN river AS T3 ON T3.Name = T2.River WHERE T1.Name = 'Klaeaelv'"
  },
  {
    "idx": 599,
    "relevant_table_schema": {
      "politics": {
        "columns": [
          {
            "field": "Country",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "Independence",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Dependent",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Government",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "borders": {
        "columns": [
          {
            "field": "Country1",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Country2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Length",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the smallest border's length, and what form of government do the two nations bordering it have?",
    "gold_sql": "SELECT T1.Government, T3.Government FROM politics AS T1 INNER JOIN borders AS T2 ON T1.Country = T2.Country1 INNER JOIN politics AS T3 ON T3.Country = T2.Country2 ORDER BY T2.Length ASC LIMIT 1",
    "predicted_sql": "SELECT T2.Length, T1.Government FROM politics AS T1 INNER JOIN borders AS T2 ON T1.Country = T2.Country1 ORDER BY T2.Length ASC LIMIT 1"
  },
  {
    "idx": 600,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "SEX",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MARITAL_STATUS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GEOID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EDUCATIONNUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OCCUPATION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "demog": {
        "columns": [
          {
            "field": "GEOID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "INHABITANTS_K",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "INCOME_K",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR1",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR2",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR3",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR4",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR5",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR6",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR7",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR8",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR9",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR10",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR11",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR12",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR13",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR14",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR15",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR16",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR17",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR18",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In widowed male customers ages from 40 to 60, how many of them has an income ranges from 3000 and above?",
    "gold_sql": "SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.age >= 40 AND T1.age <= 60 AND T1.MARITAL_STATUS = 'Widowed' AND T1.SEX = 'Male' AND T2.INCOME_K >= 2000 AND T2.INCOME_K <= 3000",
    "predicted_sql": "SELECT COUNT(T2.GEOID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.SEX = 'Male' AND T1.age >= 40 AND T1.age <= 60 AND T2.INCOME_K >= 3000"
  },
  {
    "idx": 601,
    "relevant_table_schema": {
      "mailings1_2": {
        "columns": [
          {
            "field": "REFID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "REF_DATE",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "RESPONSE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List down the customer's reference ID with true response.",
    "gold_sql": "SELECT REFID FROM Mailings1_2 WHERE RESPONSE = 'true'",
    "predicted_sql": "SELECT REFID FROM mailings1_2 WHERE RESPONSE = 'TRUE'"
  },
  {
    "idx": 602,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "SEX",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MARITAL_STATUS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GEOID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EDUCATIONNUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OCCUPATION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List down the customer's geographic identifier who are handlers or cleaners.",
    "gold_sql": "SELECT GEOID FROM Customers WHERE OCCUPATION = 'Handlers-cleaners'",
    "predicted_sql": "SELECT GEOID FROM Customers WHERE OCCUPATION = 'Handlers-cleaners'"
  },
  {
    "idx": 603,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "SEX",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MARITAL_STATUS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GEOID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EDUCATIONNUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OCCUPATION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "mailings1_2": {
        "columns": [
          {
            "field": "REFID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "REF_DATE",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "RESPONSE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average age of first 60,000 customers who sent a true response to the incentive mailing sent by the marketing department?",
    "gold_sql": "SELECT AVG(T1.age) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T2.RESPONSE = 'true'",
    "predicted_sql": "SELECT AVG(T1.age) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T2.RESPONSE = 'TRUE' AND T1.ID < 60000"
  },
  {
    "idx": 604,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "SEX",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MARITAL_STATUS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GEOID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EDUCATIONNUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OCCUPATION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "demog": {
        "columns": [
          {
            "field": "GEOID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "INHABITANTS_K",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "INCOME_K",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR1",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR2",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR3",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR4",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR5",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR6",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR7",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR8",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR9",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR10",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR11",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR12",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR13",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR14",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR15",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR16",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR17",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR18",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the customers with a marital status of married-civ-spouse, list the number of inhabitants and age of those who are machine-op-inspct.",
    "gold_sql": "SELECT T2.INHABITANTS_K FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.OCCUPATION = 'Farming-fishing' AND T1.SEX = 'Male' AND T1.age >= 20 AND T1.age <= 30",
    "predicted_sql": "SELECT T2.INHABITANTS_K, T1.age FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.MARITAL_STATUS = 'married-civ-spouse' AND T1.OCCUPATION = 'Machine-op-inspct'"
  },
  {
    "idx": 605,
    "relevant_table_schema": {
      "demog": {
        "columns": [
          {
            "field": "GEOID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "INHABITANTS_K",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "INCOME_K",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR1",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR2",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR3",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR4",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR5",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR6",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR7",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR8",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR9",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR10",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR11",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR12",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR13",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR14",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR15",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR16",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR17",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR18",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the number of inhabitants and income of geographic identifier 239?",
    "gold_sql": "SELECT INHABITANTS_K FROM Demog WHERE GEOID = 239",
    "predicted_sql": "SELECT INHABITANTS_K, INCOME_K FROM Demog WHERE GEOID = 239"
  },
  {
    "idx": 606,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "SEX",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MARITAL_STATUS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GEOID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EDUCATIONNUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OCCUPATION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "mailings1_2": {
        "columns": [
          {
            "field": "REFID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "REF_DATE",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "RESPONSE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In male customers with an occupation handlers or cleaners, what is the percentage of customers with a true response?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T2.RESPONSE = 'true' THEN 1.0 ELSE 0 END) AS REAL) * 100 / COUNT(T2.REFID) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T1.OCCUPATION = 'Handlers-cleaners' AND T1.SEX = 'Male'",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN T2.RESPONSE = 'TRUE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T1.SEX = 'Male' AND T1.OCCUPATION = 'Handlers-cleaners'"
  },
  {
    "idx": 607,
    "relevant_table_schema": {
      "mailings1_2": {
        "columns": [
          {
            "field": "REFID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "REF_DATE",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "RESPONSE",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Of the first 60,000 customers' responses to the incentive mailing sent by the marketing department, how many of them are considered a true response?",
    "gold_sql": "SELECT COUNT(REFID) custmoer_number FROM Mailings1_2 WHERE RESPONSE = 'true'",
    "predicted_sql": "SELECT COUNT(REFID) FROM mailings1_2 WHERE RESPONSE = 'TRUE' AND REF_DATE < '1999-01-01 00:00:00' AND REFID < 60000"
  },
  {
    "idx": 608,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "SEX",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MARITAL_STATUS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GEOID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EDUCATIONNUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OCCUPATION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "demog": {
        "columns": [
          {
            "field": "GEOID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "INHABITANTS_K",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "INCOME_K",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR1",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR2",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR3",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR4",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR5",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR6",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR7",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR8",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR9",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR10",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR11",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR12",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR13",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR14",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR15",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR16",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR17",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR18",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In female customers ages from 50 to 60, how many of them has an number of inhabitants ranges from 19 to 24?",
    "gold_sql": "SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.SEX = 'Female' AND T1.age >= 50 AND T1.age <= 60 AND T2.INHABITANTS_K >= 19 AND T2.INHABITANTS_K <= 24",
    "predicted_sql": "SELECT COUNT(T2.GEOID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.SEX = 'Female' AND T1.age >= 50 AND T1.age <= 60 AND T2.INHABITANTS_K BETWEEN 19 AND 24"
  },
  {
    "idx": 609,
    "relevant_table_schema": {
      "customers": {
        "columns": [
          {
            "field": "ID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "SEX",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "MARITAL_STATUS",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "GEOID",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "EDUCATIONNUM",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "OCCUPATION",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "age",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "demog": {
        "columns": [
          {
            "field": "GEOID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "INHABITANTS_K",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "INCOME_K",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR1",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR2",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR3",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR4",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR5",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR6",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR7",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR8",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR9",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR10",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR11",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR12",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR13",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR14",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR15",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR16",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR17",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "A_VAR18",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the geographic identifier and income of the oldest customer?",
    "gold_sql": "SELECT T1.GEOID, T2.INCOME_K FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID ORDER BY T1.age DESC LIMIT 1",
    "predicted_sql": "SELECT T2.GEOID, T2.INCOME_K FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID ORDER BY T1.age DESC LIMIT 1"
  },
  {
    "idx": 610,
    "relevant_table_schema": {
      "ward": {
        "columns": [
          {
            "field": "ward_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "alderman_first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "alderman_last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "alderman_name_suffix",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ward_office_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ward_office_zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ward_email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ward_office_phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "ward_office_fax",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city_hall_office_room",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city_hall_office_phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city_hall_office_fax",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "Population",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "crime": {
        "columns": [
          {
            "field": "report_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "block",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(iucr_no) references IUCR(iucr_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "location_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "arrest",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "domestic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "beat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_no) references District(district_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ward_no) references Ward(ward_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(community_area_no) references Community_Area(community_area_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(fbi_code_no) references FBI_Code(fbi_code_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "latitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "community_area": {
        "columns": [
          {
            "field": "community_area_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "community_area_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "side",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "On average, how many community areas are there in a side?",
    "gold_sql": "SELECT CAST(COUNT(T1.ward_no) AS REAL) / COUNT(DISTINCT T3.side) FROM Ward AS T1 INNER JOIN Crime AS T2 ON T2.ward_no = T1.ward_no INNER JOIN Community_Area AS T3 ON T3.community_area_no = T2.community_area_no",
    "predicted_sql": "SELECT SUM(CASE WHEN T3.side = 'A' THEN 1 ELSE 0 END) + SUM(CASE WHEN T3.side = 'B' THEN 1 ELSE 0 END) FROM Ward AS T1 INNER JOIN Crime AS T2 ON T1.ward_no = T2.ward_no INNER JOIN Community_Area AS T3 ON T2.community_area_no = T3.community_area_no"
  },
  {
    "idx": 611,
    "relevant_table_schema": {
      "district": {
        "columns": [
          {
            "field": "district_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "district_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "commander",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fax",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tty",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "twitter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "crime": {
        "columns": [
          {
            "field": "report_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "block",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(iucr_no) references IUCR(iucr_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "location_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "arrest",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "domestic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "beat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_no) references District(district_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ward_no) references Ward(ward_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(community_area_no) references Community_Area(community_area_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(fbi_code_no) references FBI_Code(fbi_code_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "latitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "iucr": {
        "columns": [
          {
            "field": "iucr_no",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "primary_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "index_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average number of reckless homicides that happened in a district?",
    "gold_sql": "SELECT CAST(COUNT(T2.report_no) AS REAL) / COUNT(DISTINCT T1.district_name) FROM District AS T1 INNER JOIN Crime AS T2 ON T2.district_no = T1.district_no INNER JOIN IUCR AS T3 ON T3.iucr_no = T2.iucr_no WHERE T3.secondary_description = 'RECKLESS HOMICIDE'",
    "predicted_sql": "SELECT CAST(COUNT(T2.report_no) AS REAL) / COUNT(DISTINCT T1.district_name) FROM District AS T1 INNER JOIN Crime AS T2 ON T2.district_no = T1.district_no INNER JOIN IUCR AS T3 ON T3.iucr_no = T2.iucr_no WHERE T3.secondary_description = 'RECKLESS HOMICIDE'"
  },
  {
    "idx": 612,
    "relevant_table_schema": {
      "crime": {
        "columns": [
          {
            "field": "report_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "block",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(iucr_no) references IUCR(iucr_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "location_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "arrest",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "domestic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "beat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_no) references District(district_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ward_no) references Ward(ward_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(community_area_no) references Community_Area(community_area_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(fbi_code_no) references FBI_Code(fbi_code_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "latitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "iucr": {
        "columns": [
          {
            "field": "iucr_no",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "primary_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "secondary_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "index_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "community_area": {
        "columns": [
          {
            "field": "community_area_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "community_area_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "side",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the name of the community that has the highest number of crimes related to prostitution?",
    "gold_sql": "SELECT T3.community_area_name FROM Crime AS T1 INNER JOIN IUCR AS T2 ON T1.iucr_no = T2.iucr_no INNER JOIN Community_Area AS T3 ON T1.community_area_no = T3.community_area_no WHERE T2.primary_description = 'PROSTITUTION' GROUP BY T1.iucr_no ORDER BY T1.case_number DESC LIMIT 1",
    "predicted_sql": "SELECT T3.community_area_name FROM Crime AS T1 INNER JOIN IUCR AS T2 ON T1.iucr_no = T2.iucr_no INNER JOIN Community_Area AS T3 ON T1.community_area_no = T3.community_area_no WHERE T2.secondary_description = 'PROSTITUTION' GROUP BY T3.community_area_name ORDER BY COUNT(T1.case_number) DESC LIMIT 1"
  },
  {
    "idx": 613,
    "relevant_table_schema": {
      "community_area": {
        "columns": [
          {
            "field": "community_area_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "community_area_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "side",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "crime": {
        "columns": [
          {
            "field": "report_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "block",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(iucr_no) references IUCR(iucr_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "location_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "arrest",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "domestic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "beat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_no) references District(district_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ward_no) references Ward(ward_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(community_area_no) references Community_Area(community_area_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(fbi_code_no) references FBI_Code(fbi_code_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "latitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the crimes located in the community area with the highest population, what is the percentage of domestic violence?",
    "gold_sql": "SELECT CAST(COUNT(CASE WHEN T2.domestic = 'TRUE' THEN T2.domestic END) AS REAL) * 100 / COUNT(T2.domestic) FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no GROUP BY T1.community_area_no HAVING COUNT(T1.population) ORDER BY COUNT(T1.population) DESC LIMIT 1",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN T2.domestic = 'D' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.domestic) FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no ORDER BY T1.population DESC LIMIT 1"
  },
  {
    "idx": 614,
    "relevant_table_schema": {
      "district": {
        "columns": [
          {
            "field": "district_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "district_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "commander",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fax",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tty",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "twitter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "crime": {
        "columns": [
          {
            "field": "report_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "block",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(iucr_no) references IUCR(iucr_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "location_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "arrest",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "domestic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "beat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_no) references District(district_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ward_no) references Ward(ward_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(community_area_no) references Community_Area(community_area_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(fbi_code_no) references FBI_Code(fbi_code_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "latitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "fbi_code": {
        "columns": [
          {
            "field": "fbi_code_no",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "crime_against",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In Albany Park, how many arrests were made in an apartment due to criminal sexual abuse?",
    "gold_sql": "SELECT SUM(CASE WHEN T3.title = 'Criminal Sexual Abuse' THEN 1 ELSE 0 END) FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no INNER JOIN FBI_Code AS T3 ON T2.fbi_code_no = T3.fbi_code_no WHERE T1.district_name = 'Albany Park' AND T2.arrest = 'TRUE' AND T2.location_description = 'APARTMENT'",
    "predicted_sql": "SELECT SUM(CASE WHEN T3.description = 'Criminal sexual abuse' THEN 1 ELSE 0 END) FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no INNER JOIN FBI_Code AS T3 ON T3.fbi_code_no = T2.fbi_code_no WHERE T1.district_name = 'Albany Park' AND T2.arrest = 'Arrest Made' AND T3.crime_against = 'Apartment'"
  },
  {
    "idx": 615,
    "relevant_table_schema": {
      "district": {
        "columns": [
          {
            "field": "district_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "district_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "commander",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fax",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tty",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "twitter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "crime": {
        "columns": [
          {
            "field": "report_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "block",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(iucr_no) references IUCR(iucr_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "location_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "arrest",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "domestic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "beat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_no) references District(district_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ward_no) references Ward(ward_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(community_area_no) references Community_Area(community_area_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(fbi_code_no) references FBI_Code(fbi_code_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "latitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the precise location coordinates of all the crimes in Central Chicago.",
    "gold_sql": "SELECT T2.latitude, T2.longitude FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T1.district_name = 'Central'",
    "predicted_sql": "SELECT T2.latitude, T2.longitude FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T1.district_name = 'Central'"
  },
  {
    "idx": 616,
    "relevant_table_schema": {
      "fbi_code": {
        "columns": [
          {
            "field": "fbi_code_no",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "crime_against",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "crime": {
        "columns": [
          {
            "field": "report_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "block",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(iucr_no) references IUCR(iucr_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "location_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "arrest",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "domestic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "beat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_no) references District(district_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ward_no) references Ward(ward_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(community_area_no) references Community_Area(community_area_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(fbi_code_no) references FBI_Code(fbi_code_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "latitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "community_area": {
        "columns": [
          {
            "field": "community_area_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "community_area_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "side",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many crimes described as 'The theft of a motor vehicle' by the FBI have taken place in the Lake View community?",
    "gold_sql": "SELECT SUM(CASE WHEN T3.community_area_name = 'Lake View' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T2.fbi_code_no = T1.fbi_code_no INNER JOIN Community_Area AS T3 ON T3.community_area_no = T2.community_area_no WHERE T1.description = 'The theft of a motor vehicle.'",
    "predicted_sql": "SELECT COUNT(T2.fbi_code_no) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no INNER JOIN Community_Area AS T3 ON T3.community_area_no = T2.community_area_no WHERE T1.description = 'The theft of a motor vehicle' AND T3.community_area_name = 'Lake View'"
  },
  {
    "idx": 617,
    "relevant_table_schema": {
      "community_area": {
        "columns": [
          {
            "field": "community_area_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "community_area_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "side",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "population",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "crime": {
        "columns": [
          {
            "field": "report_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "block",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(iucr_no) references IUCR(iucr_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "location_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "arrest",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "domestic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "beat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_no) references District(district_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ward_no) references Ward(ward_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(community_area_no) references Community_Area(community_area_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(fbi_code_no) references FBI_Code(fbi_code_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "latitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "neighborhood": {
        "columns": [
          {
            "field": "neighborhood_name",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(community_area_no) references Community_Area(community_area_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "Name the neighborhood of the community area in crime with report number 23843?",
    "gold_sql": "SELECT T3.neighborhood_name FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no INNER JOIN Neighborhood AS T3 ON T2.community_area_no = T3.community_area_no WHERE T2.report_no = 23778",
    "predicted_sql": "SELECT T3.neighborhood_name FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no INNER JOIN Neighborhood AS T3 ON T1.community_area_no = T3.community_area_no WHERE T2.report_no = 23843"
  },
  {
    "idx": 618,
    "relevant_table_schema": {
      "district": {
        "columns": [
          {
            "field": "district_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "district_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "commander",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fax",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tty",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "twitter",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "crime": {
        "columns": [
          {
            "field": "report_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "block",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(iucr_no) references IUCR(iucr_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "location_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "arrest",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "domestic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "beat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_no) references District(district_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ward_no) references Ward(ward_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(community_area_no) references Community_Area(community_area_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(fbi_code_no) references FBI_Code(fbi_code_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "latitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What percentage of non-domestic crimes have occurred in the Jefferson Park district?",
    "gold_sql": "SELECT CAST(COUNT(CASE WHEN T2.domestic = 'FALSE' THEN T2.case_number END) AS REAL) * 100 / COUNT(T2.case_number) FROM District AS T1 INNER JOIN Crime AS T2 ON T2.district_no = T1.district_no WHERE T1.district_name = 'Jefferson Park'",
    "predicted_sql": "SELECT CAST(SUM(CASE WHEN T2.domestic = 'FALSE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.domestic) FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T1.district_name = 'Jefferson Park'"
  },
  {
    "idx": 619,
    "relevant_table_schema": {
      "fbi_code": {
        "columns": [
          {
            "field": "fbi_code_no",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "crime_against",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "crime": {
        "columns": [
          {
            "field": "report_no",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "case_number",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "block",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(iucr_no) references IUCR(iucr_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "location_description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "arrest",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "domestic",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "beat",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(district_no) references District(district_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ward_no) references Ward(ward_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(community_area_no) references Community_Area(community_area_no)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(fbi_code_no) references FBI_Code(fbi_code_no)",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "latitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the case number of crimes against society that happened in June 2018.",
    "gold_sql": "SELECT T2.case_number FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T2.fbi_code_no = T1.fbi_code_no WHERE T2.date LIKE '6/%/2018%' AND T1.crime_against = 'Society'",
    "predicted_sql": "SELECT T2.case_number FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE T1.crime_against = 'Crime against society' AND STRFTIME('%Y-%m', T2.date) = '2018-06'"
  },
  {
    "idx": 620,
    "relevant_table_schema": {
      "inspections": {
        "columns": [
          {
            "field": "foreign key(business_id) references businesses(business_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "score",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "businesses": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postal_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tax_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_certificate",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "application_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List owner's name of businesses with a 100 score.",
    "gold_sql": "SELECT DISTINCT T2.owner_name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.score = 100",
    "predicted_sql": "SELECT T2.owner_name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.score = 100"
  },
  {
    "idx": 621,
    "relevant_table_schema": {
      "violations": {
        "columns": [
          {
            "field": "foreign key(business_id) references businesses(business_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "violation_type_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "risk_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "businesses": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postal_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tax_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_certificate",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "application_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In 2013, what are the names of the establishments with contaminated or adulterated food?",
    "gold_sql": "SELECT T2.name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1.`date`) = '2013' AND T1.description = 'Contaminated or adulterated food'",
    "predicted_sql": "SELECT T2.name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.description = 'Contaminated or adulterated food' AND STRFTIME('%Y', T1.`date`) = '2013'"
  },
  {
    "idx": 622,
    "relevant_table_schema": {
      "violations": {
        "columns": [
          {
            "field": "foreign key(business_id) references businesses(business_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "violation_type_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "risk_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "inspections": {
        "columns": [
          {
            "field": "foreign key(business_id) references businesses(business_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "score",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "businesses": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postal_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tax_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_certificate",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "application_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Describe the inspection types and violation descriptions under moderate risk category for ART's CAF\u00c9.",
    "gold_sql": "SELECT DISTINCT T2.type, T1.description FROM violations AS T1 INNER JOIN inspections AS T2 ON T1.business_id = T2.business_id INNER JOIN businesses AS T3 ON T2.business_id = T3.business_id WHERE T3.name = 'ART''S CAF\u00c9' AND T1.risk_category = 'Moderate Risk'",
    "predicted_sql": "SELECT DISTINCT T1.description FROM violations AS T1 INNER JOIN inspections AS T2 ON T1.business_id = T2.business_id INNER JOIN businesses AS T3 ON T2.business_id = T3.business_id WHERE T3.name = 'ART CAF\u00c9' AND T1.risk_category = 'Moderate Risk' AND T2.type = 'Routine - Unscheduled'"
  },
  {
    "idx": 623,
    "relevant_table_schema": {
      "businesses": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postal_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tax_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_certificate",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "application_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many eateries applied in 2012?",
    "gold_sql": "SELECT COUNT(business_id) FROM businesses WHERE STRFTIME('%Y', application_date) = '2012'",
    "predicted_sql": "SELECT COUNT(business_id) FROM Businesses WHERE application_date LIKE '2012%' AND name LIKE 'eatery%'"
  },
  {
    "idx": 624,
    "relevant_table_schema": {
      "violations": {
        "columns": [
          {
            "field": "foreign key(business_id) references businesses(business_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "violation_type_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "risk_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Provide eateries' IDs, risk categories and descriptions with violation ID of 103101.",
    "gold_sql": "SELECT business_id, risk_category, description FROM violations WHERE violation_type_id = '103101'",
    "predicted_sql": "SELECT DISTINCT T1.business_id, T1.risk_category, T1.description FROM violations AS T1 WHERE T1.violation_type_id = '103101'"
  },
  {
    "idx": 625,
    "relevant_table_schema": {
      "inspections": {
        "columns": [
          {
            "field": "foreign key(business_id) references businesses(business_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "score",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the inspections carried out in 2016, how many of them are routine?",
    "gold_sql": "SELECT COUNT(`date`) FROM inspections WHERE STRFTIME('%Y', `date`) = '2016' AND type = 'Routine - Unscheduled'",
    "predicted_sql": "SELECT COUNT(*) FROM inspections WHERE type = 'Routine - Unscheduled' AND date LIKE '2016%'"
  },
  {
    "idx": 626,
    "relevant_table_schema": {
      "inspections": {
        "columns": [
          {
            "field": "foreign key(business_id) references businesses(business_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "score",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "businesses": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postal_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tax_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_certificate",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "application_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What are the names of the establishments that met all the required standards for 4 consecutive years?",
    "gold_sql": "SELECT DISTINCT T4.name FROM ( SELECT T3.name, T3.years, row_number() OVER (PARTITION BY T3.name ORDER BY T3.years) AS rowNumber FROM ( SELECT DISTINCT name, STRFTIME('%Y', `date`) AS years FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.score = 100 ) AS T3 ) AS T4 GROUP BY T4.name, date(T4.years || '-01-01', '-' || (T4.rowNumber - 1) || ' years') HAVING COUNT(T4.years) = 4",
    "predicted_sql": "SELECT T2.name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id GROUP BY T2.name HAVING COUNT(DISTINCT score) = 4 AND MIN(score) = 100"
  },
  {
    "idx": 627,
    "relevant_table_schema": {
      "businesses": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postal_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tax_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_certificate",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "application_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List down the owner's name with a zip code 94104.",
    "gold_sql": "SELECT DISTINCT owner_name FROM businesses WHERE owner_zip = '94104'",
    "predicted_sql": "SELECT owner_name, owner_zip FROM Businesses WHERE owner_zip = '94104'"
  },
  {
    "idx": 628,
    "relevant_table_schema": {
      "violations": {
        "columns": [
          {
            "field": "foreign key(business_id) references businesses(business_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "violation_type_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "risk_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "businesses": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postal_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tax_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_certificate",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "application_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Who were the owners of eateries which had highest health hazard by improper cooking time or temperatures?",
    "gold_sql": "SELECT T2.owner_name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.risk_category = 'High Risk' AND T1.description = 'Improper cooking time or temperatures'",
    "predicted_sql": "SELECT T2.owner_name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.risk_category = 'High Risk' AND T1.description = 'Improper Cooking Temperature' OR T1.description = 'Improper Cooking Time' GROUP BY T2.owner_name ORDER BY COUNT(T2.owner_name) DESC LIMIT 1"
  },
  {
    "idx": 629,
    "relevant_table_schema": {
      "violations": {
        "columns": [
          {
            "field": "foreign key(business_id) references businesses(business_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "violation_type_id",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "risk_category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "businesses": {
        "columns": [
          {
            "field": "business_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postal_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "latitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "longitude",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone_number",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "tax_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "business_certificate",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "application_date",
            "type": "date",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "owner_zip",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In 2016, which city has the highest number of establishments with the highest health and safety hazards?",
    "gold_sql": "SELECT T2.city FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1.`date`) = '2016' AND T1.risk_category = 'High Risk' GROUP BY T2.city ORDER BY COUNT(T2.city) DESC LIMIT 1",
    "predicted_sql": "SELECT T2.city FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.risk_category = 'Highest Health and Safety Hazard' AND STRFTIME('%Y', T1.`date`) = '2016' GROUP BY T2.city ORDER BY COUNT(T2.city) DESC LIMIT 1"
  },
  {
    "idx": 630,
    "relevant_table_schema": {
      "recipe": {
        "columns": [
          {
            "field": "recipe_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subtitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "servings",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "yield_unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "prep_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cook_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stnd_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "source",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "intro",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "directions",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "quantity": {
        "columns": [
          {
            "field": "quantity_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(recipe_id) references Recipe(recipe_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ingredient_id) references Ingredient(ingredient_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "max_qty",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_qty",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preparation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "optional",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "ingredient": {
        "columns": [
          {
            "field": "ingredient_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "plural",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please list the names of all the ingredients needed for the recipe \"Raspberry Chiffon Pie\" that do not need preprocessing.",
    "gold_sql": "SELECT T3.name FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Raspberry Chiffon Pie' AND T2.preparation IS NULL",
    "predicted_sql": "SELECT T3.name FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Raspberry Chiffon Pie' AND T2.preparation = 'none'"
  },
  {
    "idx": 631,
    "relevant_table_schema": {
      "ingredient": {
        "columns": [
          {
            "field": "ingredient_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "plural",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "quantity": {
        "columns": [
          {
            "field": "quantity_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(recipe_id) references Recipe(recipe_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ingredient_id) references Ingredient(ingredient_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "max_qty",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_qty",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preparation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "optional",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "State the name of the optional ingredient of no.1397 recipe.",
    "gold_sql": "SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id WHERE T2.recipe_id = 1397 AND T2.optional = 'TRUE'",
    "predicted_sql": "SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id WHERE T2.recipe_id = 1397 AND T2.optional = 'TRUE'"
  },
  {
    "idx": 632,
    "relevant_table_schema": {
      "recipe": {
        "columns": [
          {
            "field": "recipe_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subtitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "servings",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "yield_unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "prep_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cook_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stnd_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "source",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "intro",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "directions",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "nutrition": {
        "columns": [
          {
            "field": "recipe_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(recipe_id) references Recipe(recipe_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "protein",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "carbo",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "alcohol",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_fat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sat_fat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cholestrl",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sodium",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "iron",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vitamin_c",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vitamin_a",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fiber",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pcnt_cal_carb",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pcnt_cal_fat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pcnt_cal_prot",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "calories",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many times is the sodium content in Lasagne-Spinach Spirals to Beef and Spinach Pita Pockets?",
    "gold_sql": "SELECT CAST(SUM(CASE WHEN T1.title = 'Lasagne-Spinach Spirals' THEN T2.sodium ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.title = 'Beef and Spinach Pita Pockets' THEN T2.sodium ELSE 0 END) FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id",
    "predicted_sql": "SELECT CAST(T2.sodium AS REAL) / ( SELECT T2.sodium FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Lasagne-Spinach Spirals to Beef and Spinach Pita Pockets' ) FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Lasagne-Spinach Spirals to Beef and Spinach Pita Pockets'"
  },
  {
    "idx": 633,
    "relevant_table_schema": {
      "recipe": {
        "columns": [
          {
            "field": "recipe_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subtitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "servings",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "yield_unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "prep_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cook_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stnd_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "source",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "intro",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "directions",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "nutrition": {
        "columns": [
          {
            "field": "recipe_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(recipe_id) references Recipe(recipe_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "protein",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "carbo",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "alcohol",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_fat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sat_fat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cholestrl",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sodium",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "iron",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vitamin_c",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vitamin_a",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fiber",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pcnt_cal_carb",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pcnt_cal_fat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pcnt_cal_prot",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "calories",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which recipe in the database contains the most total fat? Give its title.",
    "gold_sql": "SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id ORDER BY T2.total_fat DESC LIMIT 1",
    "predicted_sql": "SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id ORDER BY T2.total_fat DESC LIMIT 1"
  },
  {
    "idx": 634,
    "relevant_table_schema": {
      "ingredient": {
        "columns": [
          {
            "field": "ingredient_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "plural",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "quantity": {
        "columns": [
          {
            "field": "quantity_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(recipe_id) references Recipe(recipe_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ingredient_id) references Ingredient(ingredient_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "max_qty",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_qty",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preparation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "optional",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which ingredient appeared the least in recipes?",
    "gold_sql": "SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id GROUP BY T2.ingredient_id ORDER BY COUNT(T2.ingredient_id) ASC LIMIT 1",
    "predicted_sql": "SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id GROUP BY T1.name ORDER BY COUNT(T2.recipe_id) DESC LIMIT 1"
  },
  {
    "idx": 635,
    "relevant_table_schema": {
      "recipe": {
        "columns": [
          {
            "field": "recipe_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subtitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "servings",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "yield_unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "prep_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cook_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stnd_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "source",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "intro",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "directions",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "quantity": {
        "columns": [
          {
            "field": "quantity_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(recipe_id) references Recipe(recipe_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ingredient_id) references Ingredient(ingredient_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "max_qty",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_qty",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preparation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "optional",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "ingredient": {
        "columns": [
          {
            "field": "ingredient_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "plural",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Provide the ingredients and maximum quantities of the recipe which can serve 7 people.",
    "gold_sql": "SELECT T3.name, T2.max_qty FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.servings = 7",
    "predicted_sql": "SELECT T3.name, T2.max_qty FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.servings = 7"
  },
  {
    "idx": 636,
    "relevant_table_schema": {
      "recipe": {
        "columns": [
          {
            "field": "recipe_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subtitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "servings",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "yield_unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "prep_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cook_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stnd_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "source",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "intro",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "directions",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "nutrition": {
        "columns": [
          {
            "field": "recipe_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(recipe_id) references Recipe(recipe_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "protein",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "carbo",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "alcohol",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_fat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sat_fat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cholestrl",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sodium",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "iron",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vitamin_c",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vitamin_a",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fiber",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pcnt_cal_carb",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pcnt_cal_fat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pcnt_cal_prot",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "calories",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Name the recipes which can lead to constipation.",
    "gold_sql": "SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T2.iron > 20",
    "predicted_sql": "SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T2.iron > 20"
  },
  {
    "idx": 637,
    "relevant_table_schema": {
      "ingredient": {
        "columns": [
          {
            "field": "ingredient_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "plural",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "quantity": {
        "columns": [
          {
            "field": "quantity_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(recipe_id) references Recipe(recipe_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ingredient_id) references Ingredient(ingredient_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "max_qty",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_qty",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preparation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "optional",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "nutrition": {
        "columns": [
          {
            "field": "recipe_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(recipe_id) references Recipe(recipe_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "protein",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "carbo",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "alcohol",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "total_fat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sat_fat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cholestrl",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "sodium",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "iron",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vitamin_c",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "vitamin_a",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "fiber",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pcnt_cal_carb",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pcnt_cal_fat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "pcnt_cal_prot",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "calories",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Provide the ingredients that are rationed in the recipe with the highest carbohydrate content.",
    "gold_sql": "SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id INNER JOIN Nutrition AS T3 ON T3.recipe_id = T2.recipe_id WHERE T2.max_qty = T2.min_qty ORDER BY T3.carbo DESC LIMIT 1",
    "predicted_sql": "SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id INNER JOIN Nutrition AS T3 ON T3.recipe_id = T2.recipe_id ORDER BY T3.carbo DESC LIMIT 1"
  },
  {
    "idx": 638,
    "relevant_table_schema": {
      "recipe": {
        "columns": [
          {
            "field": "recipe_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subtitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "servings",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "yield_unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "prep_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cook_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "stnd_min",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "source",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "intro",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "directions",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "quantity": {
        "columns": [
          {
            "field": "quantity_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(recipe_id) references Recipe(recipe_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ingredient_id) references Ingredient(ingredient_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "max_qty",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_qty",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preparation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "optional",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "ingredient": {
        "columns": [
          {
            "field": "ingredient_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "plural",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What are the optional ingredients for Warm Chinese Chicken Salad?",
    "gold_sql": "SELECT T3.name FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Warm Chinese Chicken Salad' AND T2.optional = 'TRUE'",
    "predicted_sql": "SELECT T3.name FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Warm Chinese Chicken Salad' AND T2.optional = 'TRUE'"
  },
  {
    "idx": 639,
    "relevant_table_schema": {
      "ingredient": {
        "columns": [
          {
            "field": "ingredient_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "category",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "plural",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "quantity": {
        "columns": [
          {
            "field": "quantity_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "foreign key(recipe_id) references Recipe(recipe_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(ingredient_id) references Ingredient(ingredient_id)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "max_qty",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_qty",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "unit",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "preparation",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "optional",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many recipes can be made with canned dairy?",
    "gold_sql": "SELECT COUNT(*) FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id WHERE T1.category = 'canned dairy'",
    "predicted_sql": "SELECT SUM(CASE WHEN T2.optional = 'FALSE' THEN 1 ELSE 0 END) FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id WHERE T1.name = 'canned dairy'"
  },
  {
    "idx": 640,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "lastname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hiredate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "performance",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(positionID) references position(positionID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(locationID) references location(locationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "locationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "locationcity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zipcode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "officephone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Write down the full name, performance status and located city of the employee who's social security number is \"767-74-7373\".",
    "gold_sql": "SELECT T1.firstname, T1.lastname, T2.state, T2.locationcity FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T1.ssn = '767-74-7373'",
    "predicted_sql": "SELECT T1.firstname, T1.lastname, T1.performance, T2.locationcity FROM employee AS T1 INNER JOIN location AS T2 ON T1.locationID = T2.locationID WHERE T1.ssn = '767-74-7373'"
  },
  {
    "idx": 641,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "lastname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hiredate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "performance",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(positionID) references position(positionID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(locationID) references location(locationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "locationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "locationcity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zipcode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "officephone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "position": {
        "columns": [
          {
            "field": "positionID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "positiontitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "educationrequired",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "minsalary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maxsalary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "In which state can you find the highest amount of good performing Account Representatives?",
    "gold_sql": "SELECT T2.state FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID INNER JOIN position AS T3  ON T3.positionID = T1.positionID WHERE T3.positiontitle = 'Account Representative' AND T1.performance = 'Good' GROUP BY T2.state ORDER BY COUNT(T2.state) DESC LIMIT 1",
    "predicted_sql": "SELECT T2.state FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID  INNER JOIN position AS T3  ON T1.positionID = T3.positionID WHERE T1.performance = 'Excellent' GROUP BY T2.state ORDER BY COUNT(T2.state) DESC LIMIT 1"
  },
  {
    "idx": 642,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "lastname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hiredate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "performance",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(positionID) references position(positionID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(locationID) references location(locationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "position": {
        "columns": [
          {
            "field": "positionID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "positiontitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "educationrequired",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "minsalary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maxsalary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is Kenneth Charles's position title?",
    "gold_sql": "SELECT T2.positiontitle FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.firstname = 'Kenneth' AND T1.lastname = 'Charles'",
    "predicted_sql": "SELECT T2.positiontitle FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.firstname = 'Kenneth' AND T1.lastname = 'Charles'"
  },
  {
    "idx": 643,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "lastname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hiredate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "performance",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(positionID) references position(positionID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(locationID) references location(locationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "position": {
        "columns": [
          {
            "field": "positionID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "positiontitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "educationrequired",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "minsalary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maxsalary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which employee's job position requires a higher education level, Jose Rodriguez or Sandy Adams?",
    "gold_sql": "SELECT T1.firstname, T1.lastname FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE (T1.lastname = 'Adams' AND T1.firstname = 'Sandy') OR (T1.lastname = 'Rodriguez' AND T1.firstname = 'Jose') ORDER BY T2.educationrequired DESC LIMIT 1",
    "predicted_sql": "SELECT T2.educationrequired FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.firstname = 'Jose' AND T1.lastname = 'Rodriguez' UNION SELECT T2.educationrequired FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.firstname = 'Sandy' AND T1.lastname = 'Adams'"
  },
  {
    "idx": 644,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "lastname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hiredate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "performance",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(positionID) references position(positionID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(locationID) references location(locationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      }
    },
    "question": "How much is the salary of the first ever employee that was hired?",
    "gold_sql": "SELECT salary FROM employee ORDER BY hiredate ASC LIMIT 1",
    "predicted_sql": "SELECT salary FROM employee ORDER BY hiredate LIMIT 1"
  },
  {
    "idx": 645,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "lastname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hiredate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "performance",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(positionID) references position(positionID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(locationID) references location(locationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "locationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "locationcity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zipcode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "officephone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many employees are there in the \"Miami\" office?",
    "gold_sql": "SELECT COUNT(*) FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T2.locationcity = 'Miami'",
    "predicted_sql": "SELECT COUNT(*) FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T2.locationcity = 'Miami'"
  },
  {
    "idx": 646,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "lastname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hiredate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "performance",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(positionID) references position(positionID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(locationID) references location(locationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "position": {
        "columns": [
          {
            "field": "positionID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "positiontitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "educationrequired",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "minsalary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maxsalary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Among the employees who work as a Trainee, how many of them have a salary of over &20,000 a year?",
    "gold_sql": "SELECT COUNT(*) FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL) > 20000 AND T2.positiontitle = 'Trainee'",
    "predicted_sql": "SELECT COUNT(*) FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T2.positiontitle = 'Trainee' AND CAST(REPLACE(REPLACE(salary, ',', ''), '$', '') AS REAL) > 20000"
  },
  {
    "idx": 647,
    "relevant_table_schema": {
      "position": {
        "columns": [
          {
            "field": "positionID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "positiontitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "educationrequired",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "minsalary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maxsalary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Which positions are suitable with 4 years degree education?",
    "gold_sql": "SELECT positiontitle FROM position WHERE educationrequired = '4 year degree'",
    "predicted_sql": "SELECT positiontitle FROM position WHERE educationrequired = '4 year degree'"
  },
  {
    "idx": 648,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "lastname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hiredate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "performance",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(positionID) references position(positionID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(locationID) references location(locationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "location": {
        "columns": [
          {
            "field": "locationID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "locationcity",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "state",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zipcode",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "officephone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the full office location address where most of the employees work at?",
    "gold_sql": "SELECT T2.address, T2.locationcity, T2.state, T2.zipcode FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID GROUP BY T2.address, T2.locationcity, T2.state, T2.zipcode ORDER BY COUNT(*) DESC LIMIT 1",
    "predicted_sql": "SELECT T2.address FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID GROUP BY T2.address ORDER BY COUNT(T1.ssn) DESC LIMIT 1"
  },
  {
    "idx": 649,
    "relevant_table_schema": {
      "employee": {
        "columns": [
          {
            "field": "ssn",
            "type": "text",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "lastname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "firstname",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "hiredate",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "salary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "gender",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "performance",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "foreign key(positionID) references position(positionID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          },
          {
            "field": "foreign key(locationID) references location(locationID)",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": true
          }
        ]
      },
      "position": {
        "columns": [
          {
            "field": "positionID",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "positiontitle",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "educationrequired",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "minsalary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "maxsalary",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many employees work as an Account Representative?",
    "gold_sql": "SELECT COUNT(*) FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T2.positiontitle = 'Account Representative'",
    "predicted_sql": "SELECT COUNT(*) FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T2.positiontitle = 'Account Representative'"
  },
  {
    "idx": 650,
    "relevant_table_schema": {
      "station": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "long",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dock_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "installation_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "List the names of the stations within Mountain View that were installed on 12/31/2013.",
    "gold_sql": "SELECT name FROM station WHERE installation_date = '12/31/2013' AND city = 'Mountain View'",
    "predicted_sql": "SELECT name FROM station WHERE city = 'Mountain View' AND installation_date = '12/31/2013'"
  },
  {
    "idx": 651,
    "relevant_table_schema": {
      "station": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "long",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dock_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "installation_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "status": {
        "columns": [
          {
            "field": "station_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bikes_available",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "docks_available",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "On 11/3/2013, which stations are often empty? Indicate the names of the stations.",
    "gold_sql": "SELECT DISTINCT T1.name FROM station AS T1 INNER JOIN status AS T2 ON T2.station_id = T1.id WHERE T2.bikes_available = 0 AND T2.time LIKE '2013/11/03%'",
    "predicted_sql": "SELECT T1.name FROM station AS T1 INNER JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available = 0 AND T2.time LIKE '11/3/2013%'"
  },
  {
    "idx": 652,
    "relevant_table_schema": {
      "station": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "long",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dock_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "installation_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "status": {
        "columns": [
          {
            "field": "station_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bikes_available",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "docks_available",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "time",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "On 8/29/2013 at 6:14:01 PM, how many bikes were borrowed from San Jose Diridon Caltrain Station?",
    "gold_sql": "SELECT SUM(T1.dock_count - T2.bikes_available) FROM station AS T1 INNER JOIN status AS T2 ON T1.id = T2.station_id WHERE T1.name = 'San Jose Diridon Caltrain Station' AND T2.time = '2013/08/29 06:14:01'",
    "predicted_sql": "SELECT T2.bikes_available FROM station AS T1 INNER JOIN status AS T2 ON T1.id = T2.station_id WHERE T1.name = 'San Jose Diridon Caltrain Station' AND T2.time = '2013-08-29 18:14:01-07'"
  },
  {
    "idx": 653,
    "relevant_table_schema": {
      "trip": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "duration",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_station_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_station_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_station_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_station_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bike_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subscription_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "weather": {
        "columns": [
          {
            "field": "date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_temperature_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_temperature_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_temperature_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_dew_point_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_dew_point_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_dew_point_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_humidity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_humidity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_humidity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_sea_level_pressure_inches",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_sea_level_pressure_inches",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_sea_level_pressure_inches",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_visibility_miles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_visibility_miles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_visibility_miles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_wind_Speed_mph",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_wind_speed_mph",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_gust_speed_mph",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "precipitation_inches",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cloud_cover",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "events",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wind_dir_degrees",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Name all the trip on the days when it rained. State the duration of the trip",
    "gold_sql": "SELECT T1.id, T1.duration FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code AND T2.date = SUBSTR(CAST(T1.start_date AS TEXT), 1, INSTR(T1.start_date, ' ') - 1) WHERE T2.events LIKE '%Rain%' OR T2.events LIKE '%rain%'",
    "predicted_sql": "SELECT T1.id, T1.duration FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T2.events = 'Rain'"
  },
  {
    "idx": 654,
    "relevant_table_schema": {
      "trip": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "duration",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_station_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_station_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_station_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_station_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bike_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subscription_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "weather": {
        "columns": [
          {
            "field": "date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_temperature_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_temperature_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_temperature_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_dew_point_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_dew_point_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_dew_point_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_humidity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_humidity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_humidity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_sea_level_pressure_inches",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_sea_level_pressure_inches",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_sea_level_pressure_inches",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_visibility_miles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_visibility_miles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_visibility_miles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_wind_Speed_mph",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_wind_speed_mph",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_gust_speed_mph",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "precipitation_inches",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cloud_cover",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "events",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wind_dir_degrees",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please calculate the average temperature of those trips that started at Market at 4th in 2013.",
    "gold_sql": "SELECT AVG(T2.mean_temperature_f) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE SUBSTR(CAST(T2.date AS TEXT), -4) = '2013' AND T1.start_station_name = 'Market at 4th'",
    "predicted_sql": "SELECT AVG(T2.mean_temperature_f) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T1.start_station_name = 'Market at 4th' AND strftime('%Y', T1.start_date) = '2013'"
  },
  {
    "idx": 655,
    "relevant_table_schema": {
      "station": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "lat",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "long",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "dock_count",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "installation_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "trip": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "duration",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_station_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_station_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_station_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_station_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bike_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subscription_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many bicycle trip were made within San Jose city during August 2013?",
    "gold_sql": "SELECT COUNT(T2.id) FROM station AS T1 INNER JOIN trip AS T2 ON T2.start_station_name = T1.name WHERE T1.city = 'San Jose' AND T2.start_date LIKE '8/%/2013%' AND T2.start_station_name LIKE 'San Jose%' AND T2.end_station_name LIKE 'San Jose%'",
    "predicted_sql": "SELECT COUNT(T2.id) FROM station AS T1 INNER JOIN trip AS T2 ON T1.name = T2.start_station_name WHERE T1.city = 'San Jose' AND SUBSTR(T2.start_date, 1, 7) = '2013-08' AND T2.subscription_type = 'Subscriber' AND T2.start_station_name = T2.end_station_name"
  },
  {
    "idx": 656,
    "relevant_table_schema": {
      "trip": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "duration",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_station_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_station_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_station_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_station_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bike_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subscription_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the longest trip duration according? Convert the it to number of days.",
    "gold_sql": "SELECT MAX(duration), CAST(MAX(duration) AS REAL) / 86400 FROM trip",
    "predicted_sql": "SELECT DISTINCT CASE WHEN duration = ( SELECT MAX(duration) FROM trip ) THEN CAST(duration / 24 AS REAL) END FROM trip"
  },
  {
    "idx": 657,
    "relevant_table_schema": {
      "trip": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "duration",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_station_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_station_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_station_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_station_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bike_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subscription_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How long did it take for bike id 426 to reach 2nd at South Park from Market at 4th on 8/29/2013? Indicate the duration in minutes.",
    "gold_sql": "SELECT CAST(duration AS REAL) / 60  FROM trip WHERE bike_id = 426 AND end_station_name = '2nd at South Park' AND start_station_name = 'Market at 4th' AND start_date LIKE '8/29/2013%' AND end_date LIKE '8/29/2013%'",
    "predicted_sql": "SELECT SUM(CAST(T1.duration AS REAL) / 60) FROM trip AS T1 WHERE T1.bike_id = 426 AND T1.start_station_name = 'Market at 4th' AND T1.end_station_name = 'South Park at 2nd' AND T1.start_date LIKE '8/29/2013%'"
  },
  {
    "idx": 658,
    "relevant_table_schema": {
      "trip": {
        "columns": [
          {
            "field": "id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "duration",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_station_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "start_station_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_station_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "end_station_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "bike_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "subscription_type",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip_code",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Please calculate the average duration of trips started at South Van Ness at Market in 2015.",
    "gold_sql": "SELECT AVG(duration) FROM trip WHERE start_date LIKE '%2015%' AND start_station_name = 'South Van Ness at Market'",
    "predicted_sql": "SELECT AVG(T1.duration) FROM trip AS T1 WHERE T1.start_station_name = 'South Van Ness at Market' AND T1.start_date LIKE '%/%/2015%'"
  },
  {
    "idx": 659,
    "relevant_table_schema": {
      "weather": {
        "columns": [
          {
            "field": "date",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_temperature_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_temperature_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_temperature_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_dew_point_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_dew_point_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_dew_point_f",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_humidity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_humidity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_humidity",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_sea_level_pressure_inches",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_sea_level_pressure_inches",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_sea_level_pressure_inches",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_visibility_miles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_visibility_miles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "min_visibility_miles",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_wind_Speed_mph",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "mean_wind_speed_mph",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "max_gust_speed_mph",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "precipitation_inches",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "cloud_cover",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "events",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "wind_dir_degrees",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "zip_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Convert all temperature recorded at San Francisco city during August 2013 into degree Celsius.",
    "gold_sql": "SELECT (max_temperature_f - 32) / 1.8000 , (mean_temperature_f - 32) / 1.8000 , (min_temperature_f - 32) / 1.8000 FROM weather WHERE SUBSTR(CAST(date AS TEXT), 1, INSTR(date, '/') - 1) = '8' AND SUBSTR(CAST(date AS TEXT), -4) = '2013' AND zip_code = 94107",
    "predicted_sql": "SELECT (max_temperature_f - 32) * 5 / 9 FROM weather WHERE date LIKE '2013-08%' AND zip_code = 94102"
  },
  {
    "idx": 660,
    "relevant_table_schema": {
      "film": {
        "columns": [
          {
            "field": "film_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "release_year",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "language_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "original_language_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rental_duration",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rental_rate",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "length",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "replacement_cost",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "special_features",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many films have a rental duration of over 6 days?",
    "gold_sql": "SELECT COUNT(film_id) FROM film WHERE rental_duration > 6",
    "predicted_sql": "SELECT COUNT(film_id) FROM film WHERE rental_duration > 6"
  },
  {
    "idx": 661,
    "relevant_table_schema": {
      "film_actor": {
        "columns": [
          {
            "field": "actor_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "film_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "film_category": {
        "columns": [
          {
            "field": "film_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "category_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "category": {
        "columns": [
          {
            "field": "category_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "actor": {
        "columns": [
          {
            "field": "actor_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the average number of actors acted in comedy movies?",
    "gold_sql": "SELECT AVG(T1.actor_id) FROM film_actor AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id INNER JOIN actor AS T4 ON T4.actor_id = T1.actor_id WHERE T3.name = 'comedy'",
    "predicted_sql": "SELECT CAST(COUNT(T1.actor_id) AS REAL) / COUNT(DISTINCT T4.first_name) FROM film_actor AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id INNER JOIN actor AS T4 ON T1.actor_id = T4.actor_id WHERE T3.name = 'Comedy'"
  },
  {
    "idx": 662,
    "relevant_table_schema": {
      "payment": {
        "columns": [
          {
            "field": "payment_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "staff_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rental_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "amount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "customer": {
        "columns": [
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "store_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "active",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "create_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "From 5/30/2005 at 3:43:54 AM to 7/31/2005 at 10:08:29 PM, how many times did Susan Wilson pay for film rentals?",
    "gold_sql": "SELECT COUNT(T1.customer_id) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T1.payment_date BETWEEN '2005-05-30 03:43:54' AND '2005-07-31 10:08:29'",
    "predicted_sql": "SELECT COUNT(T1.payment_id) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Susan' AND T2.last_name = 'Wilson' AND T1.payment_date BETWEEN '2005-05-30 03:43:54' AND '2005-07-31 10:08:29' AND T1.amount = 3.0"
  },
  {
    "idx": 663,
    "relevant_table_schema": {
      "staff": {
        "columns": [
          {
            "field": "staff_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "picture",
            "type": "blob",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "store_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "active",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "username",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "password",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What are the full names of all the active employees?",
    "gold_sql": "SELECT first_name, last_name FROM staff WHERE active = 1",
    "predicted_sql": "SELECT first_name, last_name FROM staff WHERE active = 1"
  },
  {
    "idx": 664,
    "relevant_table_schema": {
      "address": {
        "columns": [
          {
            "field": "address_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "address",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address2",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "district",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "city_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "postal_code",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "phone",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "staff": {
        "columns": [
          {
            "field": "staff_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "picture",
            "type": "blob",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "store_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "active",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "username",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "password",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Where does the staff Jon Stephens live?",
    "gold_sql": "SELECT T1.address, T1.address2 FROM address AS T1 INNER JOIN staff AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = 'Jon' AND T2.last_name = 'Stephens'",
    "predicted_sql": "SELECT T1.address FROM address AS T1 INNER JOIN staff AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = 'Jon' AND T2.last_name = 'Stephens'"
  },
  {
    "idx": 665,
    "relevant_table_schema": {
      "film": {
        "columns": [
          {
            "field": "film_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "release_year",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "language_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "original_language_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rental_duration",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rental_rate",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "length",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "replacement_cost",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "special_features",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many films with the rental rate of $2.99 have the special feature of \"Deleted Scenes\"?",
    "gold_sql": "SELECT COUNT(film_id) FROM film WHERE rental_rate = 2.99 AND special_features = 'Deleted Scenes'",
    "predicted_sql": "SELECT COUNT(film_id) FROM film WHERE rental_rate = 2.99 AND special_features LIKE '%Deleted Scenes%'"
  },
  {
    "idx": 666,
    "relevant_table_schema": {
      "payment": {
        "columns": [
          {
            "field": "payment_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "staff_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rental_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "amount",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "payment_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "customer": {
        "columns": [
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "store_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "active",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "create_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "What is the total amount of money Mary Smith has spent on film rentals?",
    "gold_sql": "SELECT SUM(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'MARY' AND T2.last_name = 'SMITH'",
    "predicted_sql": "SELECT SUM(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'Mary' AND T2.last_name = 'Smith' AND T1.payment_id = 'rental'"
  },
  {
    "idx": 667,
    "relevant_table_schema": {
      "customer": {
        "columns": [
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "store_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "active",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "create_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "rental": {
        "columns": [
          {
            "field": "rental_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "rental_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inventory_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "return_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "staff_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "For how many times has the customer RUTH MARTINEZ rented a film?",
    "gold_sql": "SELECT COUNT(T2.rental_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'RUTH' AND T1.last_name = 'MARTINEZ'",
    "predicted_sql": "SELECT COUNT(T2.customer_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'RUTH' AND T1.last_name = 'MARTINEZ'"
  },
  {
    "idx": 668,
    "relevant_table_schema": {
      "rental": {
        "columns": [
          {
            "field": "rental_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "rental_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "inventory_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "return_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "staff_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "customer": {
        "columns": [
          {
            "field": "customer_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "store_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "email",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "address_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "active",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "create_date",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "How many non-active clients have not returned the rented material?",
    "gold_sql": "SELECT COUNT(T2.customer_id) FROM rental AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.active = 0",
    "predicted_sql": "SELECT COUNT(T1.customer_id) FROM rental AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.active = 0 AND T1.return_date IS NULL"
  },
  {
    "idx": 669,
    "relevant_table_schema": {
      "film_actor": {
        "columns": [
          {
            "field": "actor_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "film_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "actor": {
        "columns": [
          {
            "field": "actor_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "first_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_name",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      },
      "film": {
        "columns": [
          {
            "field": "film_id",
            "type": "integer",
            "isPrimary": true,
            "foreign_ref": false
          },
          {
            "field": "title",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "description",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "release_year",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "language_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "original_language_id",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rental_duration",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rental_rate",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "length",
            "type": "integer",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "replacement_cost",
            "type": "real",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "rating",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "special_features",
            "type": "text",
            "isPrimary": false,
            "foreign_ref": false
          },
          {
            "field": "last_update",
            "type": "datetime",
            "isPrimary": false,
            "foreign_ref": false
          }
        ]
      }
    },
    "question": "Provide the full name of all the actors of the film \"Ending Crowds\".",
    "gold_sql": "SELECT T2.first_name, T2.last_name FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T3.title = 'ENDING CROWDS'",
    "predicted_sql": "SELECT T2.first_name, T2.last_name FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T3.title = 'Ending Crowds'"
  }
]